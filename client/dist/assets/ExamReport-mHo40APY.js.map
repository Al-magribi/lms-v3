{"version":3,"file":"ExamReport-mHo40APY.js","sources":["../../src/page/cbt/exam/report/Filters.jsx","../../src/page/cbt/exam/report/components/ScoreSummary.jsx","../../src/page/cbt/exam/report/components/StudentInfo.jsx","../../src/page/cbt/exam/report/components/AnswerItem.jsx","../../src/page/cbt/exam/report/AnswerSheet.jsx","../../src/page/cbt/exam/report/printAnswerSheet.js","../../src/page/cbt/exam/report/TableData.jsx","../../src/page/cbt/exam/report/ScoreChart.jsx","../../src/page/cbt/exam/report/ScoreList.jsx","../../src/page/cbt/exam/report/Anslysis.jsx","../../src/page/cbt/exam/report/ExamReport.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useGetFilterQuery } from \"../../../../controller/api/log/ApiLog\";\r\n\r\nconst Filters = ({\r\n  classid,\r\n  setClassid,\r\n  examid,\r\n  name,\r\n  token,\r\n  onRefetch,\r\n  activeView,\r\n  setActiveView,\r\n  onExport,\r\n}) => {\r\n  const [lastUpdateTime, setLastUpdateTime] = useState(null);\r\n  const [activeTab, setActiveTab] = useState(\"view\");\r\n  const { data: classes, refetch: refetchClasses } = useGetFilterQuery(\r\n    { exam: examid },\r\n    { skip: !examid }\r\n  );\r\n\r\n  const handleRefetch = () => {\r\n    setLastUpdateTime(new Date().toLocaleString());\r\n    // Refetch all data\r\n    refetchClasses();\r\n    onRefetch();\r\n  };\r\n\r\n  return (\r\n    <div className=\"card my-2 shadow-sm\">\r\n      <div className=\"card-body p-3\">\r\n        {/* Main Tabs Navigation */}\r\n        <ul className=\"nav nav-tabs nav-fill mb-3\" id=\"mainTabs\" role=\"tablist\">\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <button\r\n              className={`nav-link ${\r\n                activeTab === \"view\" ? \"active\" : \"\"\r\n              } rounded-top`}\r\n              id=\"view-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#view\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              aria-controls=\"view\"\r\n              aria-selected={activeTab === \"view\"}\r\n              onClick={() => setActiveTab(\"view\")}\r\n            >\r\n              <i className=\"bi bi-eye me-1\"></i>\r\n              Tampilan\r\n            </button>\r\n          </li>\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <button\r\n              className={`nav-link ${\r\n                activeTab === \"filter\" ? \"active\" : \"\"\r\n              } rounded-top`}\r\n              id=\"filter-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#filter\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              aria-controls=\"filter\"\r\n              aria-selected={activeTab === \"filter\"}\r\n              onClick={() => setActiveTab(\"filter\")}\r\n            >\r\n              <i className=\"bi bi-funnel me-1\"></i>\r\n              Filter\r\n            </button>\r\n          </li>\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <button\r\n              className={`nav-link ${\r\n                activeTab === \"actions\" ? \"active\" : \"\"\r\n              } rounded-top`}\r\n              id=\"actions-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#actions\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              aria-controls=\"actions\"\r\n              aria-selected={activeTab === \"actions\"}\r\n              onClick={() => setActiveTab(\"actions\")}\r\n            >\r\n              <i className=\"bi bi-gear me-1\"></i>\r\n              Aksi\r\n            </button>\r\n          </li>\r\n        </ul>\r\n\r\n        {/* Tab Content */}\r\n        <div className=\"tab-content\" id=\"mainTabsContent\">\r\n          {/* View Tab Content */}\r\n          <div\r\n            className={`tab-pane fade ${\r\n              activeTab === \"view\" ? \"show active\" : \"\"\r\n            }`}\r\n            id=\"view\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"view-tab\"\r\n          >\r\n            <div className=\"row g-3 align-items-center\">\r\n              {/* Token and Status */}\r\n              <div className=\"col-md-4\">\r\n                <div className=\"d-flex gap-2 align-items-center\">\r\n                  <span className=\"badge bg-primary px-3 py-2 rounded-pill\">\r\n                    {token}\r\n                  </span>\r\n                  {lastUpdateTime && (\r\n                    <span className=\"badge bg-danger px-3 py-2 rounded-pill\">\r\n                      <i className=\"bi bi-clock-history me-1\"></i>\r\n                      Terakhir diperbarui: {lastUpdateTime}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* View Type Tabs */}\r\n              <div className=\"col-md-8\">\r\n                <ul\r\n                  className=\"nav nav-pills nav-fill\"\r\n                  id=\"viewTypeTabs\"\r\n                  role=\"tablist\"\r\n                >\r\n                  <li className=\"nav-item\" role=\"presentation\">\r\n                    <button\r\n                      className={`nav-link ${\r\n                        activeView === \"table\" ? \"active\" : \"\"\r\n                      } rounded-pill`}\r\n                      id=\"table-view-tab\"\r\n                      data-bs-toggle=\"pill\"\r\n                      data-bs-target=\"#table-view\"\r\n                      type=\"button\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"table-view\"\r\n                      aria-selected={activeView === \"table\"}\r\n                      onClick={() => setActiveView(\"table\")}\r\n                    >\r\n                      <i className=\"bi bi-person-lines-fill me-1\"></i>\r\n                      Log\r\n                    </button>\r\n                  </li>\r\n                  <li className=\"nav-item\" role=\"presentation\">\r\n                    <button\r\n                      className={`nav-link ${\r\n                        activeView === \"chart\" ? \"active\" : \"\"\r\n                      } rounded-pill`}\r\n                      id=\"chart-view-tab\"\r\n                      data-bs-toggle=\"pill\"\r\n                      data-bs-target=\"#chart-view\"\r\n                      type=\"button\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"chart-view\"\r\n                      aria-selected={activeView === \"chart\"}\r\n                      onClick={() => setActiveView(\"chart\")}\r\n                    >\r\n                      <i className=\"bi bi-bar-chart me-1\"></i>\r\n                      Grafik\r\n                    </button>\r\n                  </li>\r\n                  <li className=\"nav-item\" role=\"presentation\">\r\n                    <button\r\n                      className={`nav-link ${\r\n                        activeView === \"analysis\" ? \"active\" : \"\"\r\n                      } rounded-pill`}\r\n                      id=\"analysis-view-tab\"\r\n                      data-bs-toggle=\"pill\"\r\n                      data-bs-target=\"#analysis-view\"\r\n                      type=\"button\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"analysis-view\"\r\n                      aria-selected={activeView === \"analysis\"}\r\n                      onClick={() => setActiveView(\"analysis\")}\r\n                    >\r\n                      <i className=\"bi bi-clipboard2-data-fill me-1\"></i>\r\n                      Analisis\r\n                    </button>\r\n                  </li>\r\n                  <li className=\"nav-item\" role=\"presentation\">\r\n                    <button\r\n                      className={`nav-link ${\r\n                        activeView === \"list\" ? \"active\" : \"\"\r\n                      } rounded-pill`}\r\n                      id=\"list-view-tab\"\r\n                      data-bs-toggle=\"pill\"\r\n                      data-bs-target=\"#list-view\"\r\n                      type=\"button\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"list-view\"\r\n                      aria-selected={activeView === \"list\"}\r\n                      onClick={() => setActiveView(\"list\")}\r\n                    >\r\n                      <i className=\"bi bi-file-earmark-excel me-1\"></i>\r\n                      Nilai\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Filter Tab Content */}\r\n          <div\r\n            className={`tab-pane fade ${\r\n              activeTab === \"filter\" ? \"show active\" : \"\"\r\n            }`}\r\n            id=\"filter\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"filter-tab\"\r\n          >\r\n            <div className=\"row g-3 align-items-center\">\r\n              <div className=\"col-12\">\r\n                <h6 className=\"mb-3 text-primary border-bottom pb-2\">\r\n                  <i className=\"bi bi-funnel me-2\"></i>\r\n                  Filter Kelas\r\n                </h6>\r\n                <div className=\"d-flex gap-2 flex-wrap\">\r\n                  {classes?.map((item) => (\r\n                    <button\r\n                      key={item.id}\r\n                      className={`btn btn-sm ${\r\n                        classid === item.id\r\n                          ? \"btn-secondary\"\r\n                          : \"btn-outline-secondary\"\r\n                      }`}\r\n                      onClick={() => setClassid(item.id)}\r\n                    >\r\n                      {item.name}\r\n                    </button>\r\n                  ))}\r\n                  <button\r\n                    className=\"btn btn-sm btn-dark\"\r\n                    onClick={() => setClassid(\"\")}\r\n                    title=\"Reset Filter\"\r\n                  >\r\n                    <i className=\"bi bi-recycle me-1\"></i>\r\n                    Reset\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Actions Tab Content */}\r\n          <div\r\n            className={`tab-pane fade ${\r\n              activeTab === \"actions\" ? \"show active\" : \"\"\r\n            }`}\r\n            id=\"actions\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"actions-tab\"\r\n          >\r\n            <div className=\"row g-3 align-items-center\">\r\n              <div className=\"col-md-6\">\r\n                <h6 className=\"mb-3 text-primary border-bottom pb-2\">\r\n                  <i className=\"bi bi-arrow-repeat me-2\"></i>\r\n                  Refresh Data\r\n                </h6>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={handleRefetch}\r\n                  title=\"Refresh Data\"\r\n                >\r\n                  <i className=\"bi bi-repeat me-1\"></i>\r\n                  Refresh Semua Data\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"col-md-6\">\r\n                <h6 className=\"mb-3 text-primary border-bottom pb-2\">\r\n                  <i className=\"bi bi-download me-2\"></i>\r\n                  Export Data\r\n                </h6>\r\n                {(activeView === \"table\" ||\r\n                  activeView === \"list\" ||\r\n                  activeView === \"analysis\") && (\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={onExport}\r\n                    title=\"Export to Excel\"\r\n                  >\r\n                    <i className=\"bi bi-file-earmark-arrow-down me-1\"></i>\r\n                    Export ke Excel\r\n                  </button>\r\n                )}\r\n                {!(\r\n                  activeView === \"table\" ||\r\n                  activeView === \"list\" ||\r\n                  activeView === \"analysis\"\r\n                ) && (\r\n                  <div className=\"text-muted\">\r\n                    <small>\r\n                      <i className=\"bi bi-info-circle me-1\"></i>\r\n                      Export tersedia untuk tampilan Log, Analisis, dan Nilai\r\n                    </small>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\n\r\nconst ScoreSummary = ({ studentData }) => {\r\n  return (\r\n    <div className='card mb-3'>\r\n      <div className='card-body'>\r\n        <h5 className='card-title mb-3'>Ringkasan Nilai</h5>\r\n        <div className='row'>\r\n          <div className='col-md-4'>\r\n            <div className='d-flex justify-content-between mb-2'>\r\n              <span>Jawaban Benar:</span>\r\n              <span className='badge bg-success'>{studentData.correct}</span>\r\n            </div>\r\n            <div className='d-flex justify-content-between mb-2'>\r\n              <span>Jawaban Salah:</span>\r\n              <span className='badge bg-danger'>{studentData.incorrect}</span>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-4'>\r\n            <div className='d-flex justify-content-between mb-2'>\r\n              <span>Nilai PG:</span>\r\n              <span className='badge bg-primary'>{studentData.pg_score}</span>\r\n            </div>\r\n            <div className='d-flex justify-content-between mb-2'>\r\n              <span>Nilai Essay:</span>\r\n              <span className='badge bg-info'>{studentData.essay_score}</span>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-4'>\r\n            <div className='d-flex justify-content-between mb-2'>\r\n              <span>Total Nilai:</span>\r\n              <span className='badge bg-success fs-5'>{studentData.score}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreSummary;\r\n","import React from \"react\";\r\n\r\nconst StudentInfo = ({ studentData, name }) => {\r\n  return (\r\n    <div className='card mb-3'>\r\n      <div className='card-body'>\r\n        <h5 className='card-title mb-3'>Lembar Jawaban</h5>\r\n        <table className='table table-sm table-borderless mb-0'>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <strong>NIS</strong>\r\n              </td>\r\n              <td>: {studentData.student_nis}</td>\r\n              <td>\r\n                <strong>Tingkat</strong>\r\n              </td>\r\n              <td>: {studentData.student_grade}</td>\r\n              <td>\r\n                <strong>Ujian</strong>\r\n              </td>\r\n              <td>: {name.replace(/-/g, \" \")}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <strong>Nama</strong>\r\n              </td>\r\n              <td>: {studentData.student_name}</td>\r\n              <td>\r\n                <strong>Kelas</strong>\r\n              </td>\r\n              <td>: {studentData.student_class}</td>\r\n              <td>\r\n                <strong>Tanggal</strong>\r\n              </td>\r\n              <td>\r\n                :{\" \"}\r\n                {studentData.log_exam\r\n                  ? new Date(studentData.log_exam).toLocaleString(\"id-ID\", {\r\n                      weekday: \"long\",\r\n                      day: \"2-digit\",\r\n                      month: \"long\",\r\n                      year: \"numeric\",\r\n                      hour: \"2-digit\",\r\n                      minute: \"2-digit\",\r\n                      hour12: false,\r\n                    })\r\n                  : \"-\"}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentInfo;\r\n","import React from \"react\";\r\n\r\nconst AnswerItem = ({\r\n  answer,\r\n  index,\r\n  isTeacherOrAdmin,\r\n  gradingAnswers,\r\n  setGradingAnswers,\r\n  handleGradeEssay,\r\n  isGrading,\r\n}) => {\r\n  return (\r\n    <div className='card mb-3'>\r\n      <div className='card-body'>\r\n        <div className='d-flex justify-content-between align-items-center mb-2'>\r\n          <h6 className='card-title mb-0'>\r\n            <span className='badge bg-primary'>Pertanyaan {index + 1}</span>\r\n          </h6>\r\n          <span\r\n            className={`badge ${answer.point > 0 ? \"bg-success\" : \"bg-danger\"}`}\r\n          >\r\n            {answer.point} Poin\r\n          </span>\r\n        </div>\r\n        <p\r\n          className='card-text'\r\n          dangerouslySetInnerHTML={{ __html: answer.question_text }}\r\n        ></p>\r\n        <div className='mt-3'>\r\n          {answer.answer ? (\r\n            <div className='d-flex gap-4'>\r\n              <p\r\n                className={`m-0 badge ${\r\n                  answer.point > 0 ? \"bg-success\" : \"bg-danger\"\r\n                }`}\r\n              >\r\n                Jawaban Siswa: <strong>{answer.answer.toUpperCase()}</strong>\r\n              </p>\r\n              <p className='m-0 badge bg-success'>\r\n                Jawaban Benar: <strong>{answer.correct}</strong>\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div className='card bg-light'>\r\n              <div className='card-body'>\r\n                <h6 className='card-subtitle mb-2 text-muted'>Jawaban Essay</h6>\r\n                <p className='card-text'>{answer.essay || \"-\"}</p>\r\n\r\n                {isTeacherOrAdmin && (\r\n                  <div className='mt-3'>\r\n                    <div className='d-flex align-items-center gap-2'>\r\n                      <input\r\n                        type='number'\r\n                        className='form-control form-control-sm'\r\n                        style={{ width: \"80px\" }}\r\n                        placeholder='Nilai'\r\n                        min='0'\r\n                        max={answer.max_point || 100}\r\n                        value={gradingAnswers[answer.id] || \"\"}\r\n                        onChange={(e) =>\r\n                          setGradingAnswers({\r\n                            ...gradingAnswers,\r\n                            [answer.id]: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                      <button\r\n                        className='btn btn-sm btn-primary'\r\n                        onClick={() =>\r\n                          handleGradeEssay(answer.id, answer.max_point || 100)\r\n                        }\r\n                        disabled={isGrading}\r\n                      >\r\n                        {isGrading ? \"Menyimpan...\" : \"Simpan Nilai\"}\r\n                      </button>\r\n                    </div>\r\n                    <small className='text-muted'>\r\n                      Maksimal nilai: {answer.max_point || 100}\r\n                    </small>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnswerItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  useGetStudentAnswerQuery,\r\n  useGradeEssayMutation,\r\n} from \"../../../../controller/api/cbt/ApiAnswer\";\r\nimport { printAnswerSheet } from \"./printAnswerSheet\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport ScoreSummary from \"./components/ScoreSummary\";\r\nimport StudentInfo from \"./components/StudentInfo\";\r\nimport AnswerItem from \"./components/AnswerItem\";\r\n\r\nconst AnswerSheet = ({ detail }) => {\r\n  const { examid, name } = useParams();\r\n  const [isPrintReady, setIsPrintReady] = useState(false);\r\n  const { user } = useSelector((state) => state.auth);\r\n  const isTeacherOrAdmin = user?.level === \"teacher\" || user?.level === \"admin\";\r\n  const [gradingAnswers, setGradingAnswers] = useState({});\r\n\r\n  const { data, isLoading, isError, error, refetch } = useGetStudentAnswerQuery(\r\n    {\r\n      student: detail.student_id,\r\n      exam: examid,\r\n    },\r\n    {\r\n      skip: !detail.student_id,\r\n    }\r\n  );\r\n\r\n  const [gradeEssay, { isLoading: isGrading }] = useGradeEssayMutation();\r\n\r\n  const studentData = data?.[0];\r\n\r\n  useEffect(() => {\r\n    if (studentData) {\r\n      setIsPrintReady(true);\r\n    }\r\n  }, [studentData]);\r\n\r\n  const handlePrint = () => {\r\n    if (!studentData) return;\r\n    printAnswerSheet(studentData, name, detail);\r\n  };\r\n\r\n  const handleGradeEssay = async (answerId, maxPoint) => {\r\n    const point = gradingAnswers[answerId];\r\n\r\n    if (point === undefined || point === \"\") {\r\n      toast.error(\"Nilai tidak boleh kosong\");\r\n      return;\r\n    }\r\n\r\n    if (point < 0 || point > maxPoint) {\r\n      toast.error(`Nilai harus antara 0 dan ${maxPoint}`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await gradeEssay({\r\n        answer_id: answerId,\r\n        point: parseInt(point),\r\n      }).unwrap();\r\n      toast.success(\"Nilai berhasil disimpan\");\r\n      refetch();\r\n    } catch (error) {\r\n      toast.error(error.data?.message || \"Gagal menyimpan nilai\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='modal fade'\r\n      id='answerSheet'\r\n      data-bs-backdrop='static'\r\n      data-bs-keyboard='false'\r\n      tabIndex='-1'\r\n      aria-labelledby='staticBackdropLabel'\r\n      aria-hidden='true'\r\n    >\r\n      <div className='modal-dialog modal-lg modal-dialog-scrollable'>\r\n        <div className='modal-content'>\r\n          <div className='modal-header'>\r\n            <div\r\n              className='modal-title d-flex flex-column justify-content-end align-items-start'\r\n              id='staticBackdropLabel'\r\n            >\r\n              <p className='m-0 h5'>{name?.replace(/-/g, \" \")}</p>\r\n              <small className='text-muted'>\r\n                {detail?.nis} - {detail?.student_name}\r\n              </small>\r\n            </div>\r\n            <button\r\n              type='button'\r\n              className='btn-close'\r\n              data-bs-dismiss='modal'\r\n              aria-label='Close'\r\n            ></button>\r\n          </div>\r\n          <div className='modal-body'>\r\n            {isLoading ? (\r\n              <p>Loading...</p>\r\n            ) : isError ? (\r\n              <div className='alert alert-danger' role='alert'>\r\n                Gagal memuat data jawaban:{\" \"}\r\n                {error?.data?.message || error.message}\r\n              </div>\r\n            ) : studentData ? (\r\n              <>\r\n                <ScoreSummary studentData={studentData} />\r\n                <StudentInfo studentData={studentData} name={name} />\r\n                {studentData.answers && studentData.answers.length > 0 ? (\r\n                  studentData.answers.map((answer, index) => (\r\n                    <AnswerItem\r\n                      key={answer.question_id}\r\n                      answer={answer}\r\n                      index={index}\r\n                      isTeacherOrAdmin={isTeacherOrAdmin}\r\n                      gradingAnswers={gradingAnswers}\r\n                      setGradingAnswers={setGradingAnswers}\r\n                      handleGradeEssay={handleGradeEssay}\r\n                      isGrading={isGrading}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <div className='alert alert-info mt-3' role='alert'>\r\n                    Tidak ada data jawaban untuk siswa ini.\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <div className='alert alert-warning' role='alert'>\r\n                Data siswa tidak ditemukan.\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className='modal-footer'>\r\n            <button\r\n              type='button'\r\n              className='btn btn-sm btn-secondary'\r\n              data-bs-dismiss='modal'\r\n            >\r\n              Tutup\r\n            </button>\r\n\r\n            <button\r\n              type='button'\r\n              className='btn btn-sm btn-danger'\r\n              onClick={refetch}\r\n            >\r\n              <i className='bi bi-repeat'></i>\r\n            </button>\r\n\r\n            <button\r\n              type='button'\r\n              className='btn btn-sm btn-primary'\r\n              onClick={handlePrint}\r\n            >\r\n              <i className='bi bi-printer'></i> Cetak\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnswerSheet;\r\n","/**\r\n * Utility function to print the answer sheet\r\n * @param {Object} studentData - The student's answer data\r\n * @param {String} name - The exam name\r\n * @param {Object} detail - The student details\r\n */\r\nexport const printAnswerSheet = (studentData, name, detail) => {\r\n  if (!studentData) return;\r\n\r\n  // Create a new window for printing\r\n  const printWindow = window.open(\"\", \"_blank\");\r\n  if (!printWindow) {\r\n    alert(\"Please allow popups for this website to print.\");\r\n    return;\r\n  }\r\n\r\n  // Get current date and time for the print header\r\n  const now = new Date();\r\n  const printDateTime = now.toLocaleString(\"id-ID\", {\r\n    weekday: \"long\",\r\n    day: \"2-digit\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: false,\r\n  });\r\n\r\n  // Get current URL\r\n  const currentUrl = window.location.href;\r\n\r\n  // Create the content for the print window\r\n  const printContent = `\r\n    <!DOCTYPE html>\r\n    <html>\r\n      <head>\r\n        <title>${name?.replace(/-/g, \" \")} - ${detail?.student_name}</title>\r\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n        <style>\r\n          body { \r\n            padding: 10px; \r\n            font-size: 12px;\r\n          }\r\n          .card { \r\n            margin-bottom: 15px; \r\n            border: 1px solid rgba(0,0,0,.125);\r\n            border-radius: 0.25rem;\r\n          }\r\n          .card-body {\r\n            padding: 1rem;\r\n          }\r\n          .badge { \r\n            font-size: 0.9em; \r\n            padding: 0.35em 0.65em;\r\n            border-radius: 0.25rem;\r\n            font-weight: 700;\r\n          }\r\n          .bg-primary {\r\n            background-color: #0d6efd !important;\r\n            color: white;\r\n          }\r\n          .bg-success {\r\n            background-color: #198754 !important;\r\n            color: white;\r\n          }\r\n          .bg-danger {\r\n            background-color: #dc3545 !important;\r\n            color: white;\r\n          }\r\n          .table {\r\n            width: 100%;\r\n            margin-bottom: 1rem;\r\n            color: #212529;\r\n            border-collapse: collapse;\r\n          }\r\n          .table-sm td {\r\n            padding: 0.3rem;\r\n          }\r\n          .table-borderless {\r\n            border: 0;\r\n          }\r\n          .d-flex {\r\n            display: flex !important;\r\n          }\r\n          .justify-content-between {\r\n            justify-content: space-between !important;\r\n          }\r\n          .align-items-center {\r\n            align-items: center !important;\r\n          }\r\n          .gap-4 {\r\n            gap: 1.5rem !important;\r\n          }\r\n          .mt-3 {\r\n            margin-top: 1rem !important;\r\n          }\r\n          .mb-2 {\r\n            margin-bottom: 0.5rem !important;\r\n          }\r\n          .mb-3 {\r\n            margin-bottom: 1rem !important;\r\n          }\r\n          .mb-0 {\r\n            margin-bottom: 0 !important;\r\n          }\r\n          .m-0 {\r\n            margin: 0 !important;\r\n          }\r\n          .text-muted {\r\n            color: #6c757d !important;\r\n          }\r\n          .h5 {\r\n            font-size: 1.25rem;\r\n            margin-top: 0;\r\n            margin-bottom: 0.5rem;\r\n            font-weight: 500;\r\n          }\r\n          .alert {\r\n            position: relative;\r\n            padding: 0.75rem 1.25rem;\r\n            margin-bottom: 1rem;\r\n            border: 1px solid transparent;\r\n            border-radius: 0.25rem;\r\n          }\r\n          .alert-info {\r\n            color: #0c5460;\r\n            background-color: #d1ecf1;\r\n            border-color: #bee5eb;\r\n          }\r\n          .alert-warning {\r\n            color: #856404;\r\n            background-color: #fff3cd;\r\n            border-color: #ffeeba;\r\n          }\r\n          .alert-danger {\r\n            color: #721c24;\r\n            background-color: #f8d7da;\r\n            border-color: #f5c6cb;\r\n          }\r\n          .print-header {\r\n            border-bottom: 1px solid #dee2e6;\r\n            padding-bottom: 5px;\r\n            margin-bottom: 5px;\r\n            font-size: 10px;\r\n            color: #6c757d;\r\n            display: flex;\r\n            justify-content: space-between;\r\n          }\r\n          .print-header p {\r\n            margin-bottom: 5px;\r\n          }\r\n          .print-footer {\r\n            border-top: 1px solid #dee2e6;\r\n            padding-top: 5px;\r\n            margin-top: 5px;\r\n            font-size: 10px;\r\n            color: #6c757d;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            position: fixed;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            background-color: white;\r\n            padding: 10px 20px;\r\n          }\r\n          .content {\r\n            margin-bottom: 40px; /* Space for footer */\r\n          }\r\n          @media print {\r\n            .no-print { display: none; }\r\n            body { font-size: 12px; }\r\n            .card { page-break-inside: avoid; }\r\n            .print-header {\r\n              position: fixed;\r\n              top: 0;\r\n              left: 0;\r\n              right: 0;\r\n              padding: 10px 20px;\r\n              background-color: white;\r\n              z-index: 1000;\r\n            }\r\n            .content {\r\n              margin-top: 40px;\r\n              margin-bottom: 40px;\r\n            }\r\n            @page {\r\n              margin-top: 60px;\r\n              margin-bottom: 60px;\r\n            }\r\n          }\r\n        </style>\r\n      </head>\r\n      <body>\r\n        <div class=\"container-fluid\">\r\n          <div class=\"print-header\">\r\n            <p>${currentUrl}</p>\r\n          </div>\r\n          \r\n          <div class=\"content\">\r\n            <div class=\"card mb-3\">\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title mb-3\">Lembar Jawaban</h5>\r\n                <table class=\"table table-sm table-borderless mb-0\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td><strong>NIS</strong></td>\r\n                      <td>: ${studentData.student_nis}</td>\r\n                      <td><strong>Tingkat</strong></td>\r\n                      <td>: ${studentData.student_grade}</td>\r\n                      <td><strong>Ujian</strong></td>\r\n                      <td>: ${name.replace(/-/g, \" \")}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Nama</strong></td>\r\n                      <td>: ${studentData.student_name}</td>\r\n                      <td><strong>Kelas</strong></td>\r\n                      <td>: ${studentData.student_class}</td>\r\n                      <td><strong>Tanggal</strong></td>\r\n                      <td>: ${\r\n                        studentData.log_exam\r\n                          ? new Date(studentData.log_exam).toLocaleString(\r\n                              \"id-ID\",\r\n                              {\r\n                                weekday: \"long\",\r\n                                day: \"2-digit\",\r\n                                month: \"long\",\r\n                                year: \"numeric\",\r\n                                hour: \"2-digit\",\r\n                                minute: \"2-digit\",\r\n                                hour12: false,\r\n                              }\r\n                            )\r\n                          : \"-\"\r\n                      }</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Score Summary Card -->\r\n            <div class=\"card mb-3\">\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title mb-3\">Ringkasan Nilai</h5>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"d-flex justify-content-between mb-2\">\r\n                      <span>Jawaban Benar:</span>\r\n                      <span class=\"badge bg-success\">${\r\n                        studentData.correct\r\n                      }</span>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-between mb-2\">\r\n                      <span>Jawaban Salah:</span>\r\n                      <span class=\"badge bg-danger\">${\r\n                        studentData.incorrect\r\n                      }</span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"d-flex justify-content-between mb-2\">\r\n                      <span>Nilai PG:</span>\r\n                      <span class=\"badge bg-primary\">${\r\n                        studentData.pg_score\r\n                      }</span>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-between mb-2\">\r\n                      <span>Nilai Essay:</span>\r\n                      <span class=\"badge bg-info\">${\r\n                        studentData.essay_score\r\n                      }</span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"d-flex justify-content-between mb-2\">\r\n                      <span>Total Nilai:</span>\r\n                      <span class=\"badge bg-success fs-5\">${\r\n                        studentData.score\r\n                      }</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            ${\r\n              studentData.answers && studentData.answers.length > 0\r\n                ? studentData.answers\r\n                    .map(\r\n                      (answer, index) => `\r\n                <div class=\"card mb-3\">\r\n                  <div class=\"card-body\">\r\n                    <div class=\"d-flex justify-content-between align-items-center mb-2\">\r\n                      <h6 class=\"card-title mb-0\">\r\n                        <span class=\"badge bg-primary\">Pertanyaan ${\r\n                          index + 1\r\n                        }</span>\r\n                      </h6>\r\n                      <span class=\"badge ${\r\n                        answer.point > 0 ? \"bg-success\" : \"bg-danger\"\r\n                      }\">\r\n                        ${answer.point} Poin\r\n                      </span>\r\n                    </div>\r\n                    <div class=\"card-text\">${answer.question_text}</div>\r\n                    <div class=\"mt-3 d-flex gap-4\">\r\n                      <p class=\"m-0 badge ${\r\n                        answer.point > 0 ? \"bg-success\" : \"bg-danger\"\r\n                      }\">\r\n                        Jawaban Siswa: <strong>${\r\n                          answer.answer?.toUpperCase() || \"-\"\r\n                        }</strong>\r\n                      </p>\r\n                      <p class=\"m-0 badge bg-success\">\r\n                        Jawaban Benar: <strong>${answer.correct}</strong>\r\n                      </p>\r\n                    </div>\r\n                    ${\r\n                      answer.essay\r\n                        ? `\r\n                    <div class=\"mt-3\">\r\n                      <div class=\"card bg-light\">\r\n                        <div class=\"card-body\">\r\n                          <h6 class=\"card-subtitle mb-2 text-muted\">Jawaban Essay</h6>\r\n                          <p class=\"card-text\">${answer.essay}</p>\r\n                          <div class=\"d-flex align-items-center gap-2\">\r\n                            <span class=\"badge bg-info\">Nilai: ${answer.point}</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    `\r\n                        : \"\"\r\n                    }\r\n                  </div>\r\n                </div>\r\n              `\r\n                    )\r\n                    .join(\"\")\r\n                : '<div class=\"alert alert-info mt-3\">Tidak ada data jawaban untuk siswa ini.</div>'\r\n            }\r\n            \r\n            <div class=\"no-print text-center mt-4\">\r\n              <button class=\"btn btn-primary\" onclick=\"window.print()\">Cetak</button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"print-footer\">\r\n            <div>${printDateTime}</div>\r\n            <div>Halaman <span class=\"pageNumber\"></span></div>\r\n          </div>\r\n        </div>\r\n        \r\n        <script>\r\n          // Add page numbers when printing\r\n          window.onbeforeprint = function() {\r\n            const pages = document.querySelectorAll('.pageNumber');\r\n            for (let i = 0; i < pages.length; i++) {\r\n              pages[i].textContent = (i + 1).toString();\r\n            }\r\n          };\r\n        </script>\r\n      </body>\r\n    </html>\r\n  `;\r\n\r\n  // Write the content to the new window\r\n  printWindow.document.open();\r\n  printWindow.document.write(printContent);\r\n  printWindow.document.close();\r\n\r\n  // Wait for resources to load before printing\r\n  printWindow.onload = function () {\r\n    printWindow.focus();\r\n    printWindow.print();\r\n    // Optional: close the window after printing\r\n    // printWindow.close();\r\n  };\r\n};\r\n","import React, {\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from \"react\";\r\nimport Table from \"../../../../components/table/Table\";\r\nimport {\r\n  useFinishCbtMutation,\r\n  useGetExamLogQuery,\r\n  useRejoinExamMutation,\r\n  useRetakeExamMutation,\r\n} from \"../../../../controller/api/log/ApiLog\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport AnswerSheet from \"./AnswerSheet\";\r\n\r\nconst TableData = forwardRef(({ classid, examid }, ref) => {\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n  const tableRef = useRef();\r\n\r\n  const {\r\n    data = {},\r\n    isLoading,\r\n    refetch,\r\n  } = useGetExamLogQuery({\r\n    exam: examid,\r\n    classid: classid,\r\n    page,\r\n    limit,\r\n    search,\r\n  });\r\n  const { result = [], totalData, totalPages } = data;\r\n  const [detail, setDetail] = useState({});\r\n\r\n  const [finishCbt, { isLoading: finishLoad }] = useFinishCbtMutation();\r\n  const [rejoinExam, { isLoading: rejoinLoad }] = useRejoinExamMutation();\r\n  const [retakeExam, { isLoading: retakeLoad }] = useRetakeExamMutation();\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    refetch,\r\n    getTableElement: () => tableRef.current,\r\n  }));\r\n\r\n  const hanldeFinish = (id) => {\r\n    toast.promise(\r\n      finishCbt({ id, exam: examid })\r\n        .unwrap()\r\n        .then((res) => res.message),\r\n      {\r\n        loading: \"Memuat data...\",\r\n        success: (message) => message,\r\n        error: (error) => error.data.message,\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleRejoin = (id) => {\r\n    toast.promise(\r\n      rejoinExam({ id })\r\n        .unwrap()\r\n        .then((res) => res.message),\r\n      {\r\n        loading: \"Memuat data...\",\r\n        success: (message) => message,\r\n        error: (error) => error.data.message,\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleRetake = (id, student) => {\r\n    const confirm = window.confirm(\r\n      \"Apakah anda yakin ingin mengulang ujian dan menghapus seluruh data jawaban siswa? \"\r\n    );\r\n\r\n    if (confirm) {\r\n      toast.promise(\r\n        retakeExam({ id, student, exam: examid })\r\n          .unwrap()\r\n          .then((res) => res.message),\r\n        {\r\n          loading: \"Memuat data...\",\r\n          success: (message) => message,\r\n          error: (error) => error.data.message,\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        isLoading={isLoading}\r\n        page={page}\r\n        setPage={setPage}\r\n        totalPages={totalPages}\r\n        limit={limit}\r\n        setLimit={setLimit}\r\n        setSearch={setSearch}\r\n        totalData={totalData}\r\n      >\r\n        <div style={{ overflowX: \"auto\" }}>\r\n          <table\r\n            ref={tableRef}\r\n            className=\"table table-striped table-hover table-bordered\"\r\n            style={{ minWidth: 800 }}\r\n          >\r\n            <thead className=\"table-light\">\r\n              <tr>\r\n                <th scope=\"col\" className=\"text-center\">\r\n                  No\r\n                </th>\r\n                <th scope=\"col\" className=\"text-center\">\r\n                  NIS\r\n                </th>\r\n                <th scope=\"col\" className=\"text-center\">\r\n                  Nama Siswa\r\n                </th>\r\n                <th scope=\"col\" className=\"text-center\">\r\n                  Kelas\r\n                </th>\r\n                <th scope=\"col\" className=\"text-center\">\r\n                  Tingkat\r\n                </th>\r\n                <th scope=\"col\" className=\"text-center\">\r\n                  IP Address\r\n                </th>\r\n                <th scope=\"col\" className=\"text-center\">\r\n                  Browser\r\n                </th>\r\n                <th scope=\"col\" className=\"text-center\">\r\n                  Waktu Mulai\r\n                </th>\r\n                <th scope=\"col\" className=\"text-center\">\r\n                  Status\r\n                </th>\r\n                <th scope=\"col\" className=\"text-center\">\r\n                  Aksi\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {result.length > 0 ? (\r\n                result.map((item, index) => (\r\n                  <tr key={item.student_id || index}>\r\n                    <td className=\"text-center align-middle\">\r\n                      {(page - 1) * limit + index + 1}\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">{item.nis}</td>\r\n                    <td className=\"align-middle\">{item.student_name}</td>\r\n                    <td className=\"text-center align-middle\">\r\n                      {item.class_name}\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">\r\n                      {item.grade_name}\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">\r\n                      {item.ip || \"-\"}\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">\r\n                      {item.browser || \"-\"}\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">\r\n                      {item.createdat ? (\r\n                        <span className=\"badge bg-success\">\r\n                          {new Date(item.createdat).toLocaleString()}\r\n                        </span>\r\n                      ) : (\r\n                        \"-\"\r\n                      )}\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">\r\n                      {item.ispenalty ? (\r\n                        <span className=\"badge bg-danger\">Melanggar</span>\r\n                      ) : item.isactive ? (\r\n                        <span className=\"badge bg-warning\">Mengerjakan</span>\r\n                      ) : item.isdone ? (\r\n                        <span className=\"badge bg-success\">Selesai</span>\r\n                      ) : (\r\n                        <span className=\"badge bg-secondary\">Belum Masuk</span>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">\r\n                      <div className=\"dropdown\">\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          type=\"button\"\r\n                          id={`dropdownMenuButton-${index}`}\r\n                          data-bs-toggle=\"dropdown\"\r\n                          aria-expanded=\"false\"\r\n                        >\r\n                          Aksi\r\n                        </button>\r\n                        <ul\r\n                          className=\"dropdown-menu\"\r\n                          aria-labelledby={`dropdownMenuButton-${index}`}\r\n                        >\r\n                          <li>\r\n                            <button\r\n                              className=\"dropdown-item d-flex align-items-center\"\r\n                              title=\"Lihat Detail\"\r\n                              data-bs-toggle=\"modal\"\r\n                              data-bs-target=\"#answerSheet\"\r\n                              onClick={() => setDetail(item)}\r\n                            >\r\n                              <i className=\"bi bi-eye me-2\"></i> Lihat\r\n                            </button>\r\n                          </li>\r\n                          <li>\r\n                            <button\r\n                              className=\"dropdown-item d-flex align-items-center\"\r\n                              title=\"Izinkan Masuk\"\r\n                              onClick={() => handleRejoin(item.log_id)}\r\n                              disabled={rejoinLoad || !item.isactive}\r\n                            >\r\n                              <i className=\"bi bi-arrow-repeat me-2\"></i>{\" \"}\r\n                              Izinkan\r\n                            </button>\r\n                          </li>\r\n                          <li>\r\n                            <button\r\n                              className=\"dropdown-item d-flex align-items-center\"\r\n                              title=\"Selesaikan\"\r\n                              onClick={() => hanldeFinish(item.log_id)}\r\n                              disabled={\r\n                                finishLoad || item.isdone || !item.isactive\r\n                              }\r\n                            >\r\n                              <i className=\"bi bi-check-circle me-2\"></i>{\" \"}\r\n                              Selesaikan\r\n                            </button>\r\n                          </li>\r\n                          <li>\r\n                            <button\r\n                              className=\"dropdown-item d-flex align-items-center text-danger\"\r\n                              title=\"Ulangi Ujian\"\r\n                              onClick={() =>\r\n                                handleRetake(item.log_id, item.student_id)\r\n                              }\r\n                              disabled={retakeLoad || !item.isdone}\r\n                            >\r\n                              <i className=\"bi bi-recycle me-2\"></i> Ulangi\r\n                            </button>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"10\" className=\"text-center\">\r\n                    {isLoading\r\n                      ? \"Memuat data...\"\r\n                      : \"Tidak ada data yang ditemukan\"}\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </Table>\r\n\r\n      <AnswerSheet detail={detail} />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default TableData;\r\n","import React, { forwardRef, useImperativeHandle } from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler,\r\n} from \"chart.js\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { useGetLineChartDataQuery } from \"../../../../controller/api/cbt/ApiAnswer\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler\r\n);\r\n\r\nconst ScoreChart = forwardRef(({ examid }, ref) => {\r\n  const { data, isLoading, error, refetch } = useGetLineChartDataQuery(examid, {\r\n    skip: !examid,\r\n  });\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    refetch,\r\n  }));\r\n\r\n  const chartData = {\r\n    labels: data?.map((item) => item.score) || [],\r\n    datasets: [\r\n      {\r\n        label: \"Jumlah Siswa\",\r\n        data: data?.map((item) => item.quantity) || [],\r\n        borderColor: \"rgb(53, 162, 235)\",\r\n        backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n        tension: 0.4,\r\n        fill: true,\r\n        pointStyle: \"circle\",\r\n        pointRadius: 6,\r\n        pointHoverRadius: 8,\r\n        pointBackgroundColor: \"rgb(53, 162, 235)\",\r\n        pointBorderColor: \"white\",\r\n        pointBorderWidth: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n        labels: {\r\n          font: {\r\n            size: 14,\r\n            weight: \"bold\",\r\n          },\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Distribusi Nilai Siswa\",\r\n        font: {\r\n          size: 20,\r\n          weight: \"bold\",\r\n        },\r\n        padding: 20,\r\n      },\r\n      tooltip: {\r\n        backgroundColor: \"rgba(255, 255, 255, 0.9)\",\r\n        titleColor: \"#333\",\r\n        bodyColor: \"#666\",\r\n        titleFont: {\r\n          size: 14,\r\n          weight: \"bold\",\r\n        },\r\n        bodyFont: {\r\n          size: 13,\r\n        },\r\n        padding: 12,\r\n        borderColor: \"rgba(53, 162, 235, 0.5)\",\r\n        borderWidth: 1,\r\n        displayColors: false,\r\n        callbacks: {\r\n          title: (items) => `Rentang Nilai: ${items[0].label}`,\r\n          label: (item) => `Jumlah Siswa: ${item.raw} orang`,\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        grid: {\r\n          color: \"rgba(0, 0, 0, 0.1)\",\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          font: {\r\n            size: 12,\r\n          },\r\n          stepSize: 1,\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: \"Jumlah Siswa\",\r\n          font: {\r\n            size: 14,\r\n            weight: \"bold\",\r\n          },\r\n          padding: 10,\r\n        },\r\n      },\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          font: {\r\n            size: 12,\r\n          },\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: \"Rentang Nilai\",\r\n          font: {\r\n            size: 14,\r\n            weight: \"bold\",\r\n          },\r\n          padding: 10,\r\n        },\r\n      },\r\n    },\r\n    interaction: {\r\n      intersect: false,\r\n      mode: \"index\",\r\n    },\r\n    elements: {\r\n      line: {\r\n        borderWidth: 3,\r\n      },\r\n    },\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"card shadow w-100 h-75 d-flex justify-content-center align-items-center\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"card shadow w-100 h-75 text-danger\">\r\n        <div className=\"card-body\">Data belum tersedia</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"card shadow w-100 h-75 p-3\">\r\n      <div style={{ width: \"100%\", height: \"100%\", minHeight: \"550px\" }}>\r\n        <Line options={options} data={chartData} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ScoreChart;\r\n","import React, {\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from \"react\";\r\nimport { useGetExamScoreListQuery } from \"../../../../controller/api/cbt/ApiAnswer\";\r\nimport Table from \"../../../../components/table/Table\";\r\n\r\nconst ScoreList = forwardRef(({ examid, classid }, ref) => {\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n  const tableRef = useRef();\r\n  const {\r\n    data = {},\r\n    isLoading,\r\n    error,\r\n    refetch,\r\n  } = useGetExamScoreListQuery(\r\n    { exam: examid, classid, page, limit, search },\r\n    {\r\n      skip: !examid,\r\n    }\r\n  );\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    refetch,\r\n    getTableElement: () => tableRef.current,\r\n  }));\r\n\r\n  const students = data?.students || [];\r\n\r\n  return (\r\n    <Table\r\n      isLoading={isLoading}\r\n      page={page}\r\n      setPage={setPage}\r\n      limit={limit}\r\n      setLimit={setLimit}\r\n      setSearch={setSearch}\r\n      totalData={data?.totalData}\r\n      totalPages={data?.totalPages}\r\n    >\r\n      <div style={{ overflowX: \"auto\" }}>\r\n        <table\r\n          ref={tableRef}\r\n          className='mb-0 table table-bordered table-striped'\r\n          style={{ minWidth: 800 }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <td colSpan={2} className='text-muted align-middle'>\r\n                {data?.homebase_name}\r\n              </td>\r\n              <td colSpan={2} className='text-muted align-middle'>\r\n                <p className='m-0'>\r\n                  {data?.exam_name}{\" \"}\r\n                  <span className='badge bg-success'>{data?.exam_token}</span>\r\n                </p>\r\n              </td>\r\n              <td colSpan={6} className='text-muted align-middle'>\r\n                {data?.teacher_name}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th rowSpan={2} className='text-center align-middle'>\r\n                No\r\n              </th>\r\n              <th rowSpan={2} className='text-center align-middle'>\r\n                NIS\r\n              </th>\r\n              <th rowSpan={2} className='text-center align-middle'>\r\n                Nama\r\n              </th>\r\n              <th rowSpan={2} className='text-center align-middle'>\r\n                Tingkat\r\n              </th>\r\n              <th rowSpan={2} className='text-center align-middle'>\r\n                Kelas\r\n              </th>\r\n              <th colSpan={3} className='text-center align-middle'>\r\n                PG\r\n              </th>\r\n              <th rowSpan={2} className='text-center align-middle'>\r\n                Essay\r\n              </th>\r\n              <th rowSpan={2} className='text-center align-middle'>\r\n                Total\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <td className='text-center align-middle'>Benar</td>\r\n              <td className='text-center align-middle'>Salah</td>\r\n              <td className='text-center align-middle'>Total</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {students?.map((student, index) => (\r\n              <tr key={student?.student_id}>\r\n                <td className='text-center align-middle'>\r\n                  {(page - 1) * limit + index + 1}\r\n                </td>\r\n                <td className='text-center align-middle'>\r\n                  {student?.student_nis}\r\n                </td>\r\n                <td className='text-center align-middle'>\r\n                  {student?.student_name}\r\n                </td>\r\n                <td className='text-center align-middle'>\r\n                  {student?.student_grade}\r\n                </td>\r\n                <td className='text-center align-middle'>\r\n                  {student?.student_class}\r\n                </td>\r\n                <td className='text-center align-middle'>{student?.correct}</td>\r\n                <td className='text-center align-middle'>\r\n                  {student?.incorrect}\r\n                </td>\r\n                <td className='text-center align-middle'>\r\n                  {student?.mc_score}\r\n                </td>\r\n                <td className='text-center align-middle'>\r\n                  {student?.essay_score}\r\n                </td>\r\n                <td className='text-center align-middle'>{student?.score}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Table>\r\n  );\r\n});\r\n\r\nexport default ScoreList;\r\n","import React, {\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from \"react\";\r\nimport { useGetExamAnalysisQuery } from \"../../../../controller/api/cbt/ApiAnswer\";\r\nimport Table from \"../../../../components/table/Table\";\r\n\r\nconst Anslysis = forwardRef(({ examid, classid }, ref) => {\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n  const tableRef = useRef();\r\n\r\n  const { data, isLoading, error, refetch } = useGetExamAnalysisQuery({\r\n    exam: examid,\r\n    classid,\r\n    page,\r\n    limit,\r\n    search,\r\n  });\r\n\r\n  console.log(data);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    refetch,\r\n    getTableElement: () => tableRef.current,\r\n  }));\r\n\r\n  const questions = data?.questions || [];\r\n  const students = data?.students || [];\r\n\r\n  console.log(questions.length);\r\n\r\n  return (\r\n    <Table\r\n      isLoading={isLoading}\r\n      page={page}\r\n      setPage={setPage}\r\n      totalPages={data?.totalPages}\r\n      totalData={data?.totalData}\r\n      limit={limit}\r\n      setLimit={setLimit}\r\n      setSearch={setSearch}\r\n    >\r\n      <div style={{ overflowX: \"auto\" }}>\r\n        <table\r\n          ref={tableRef}\r\n          className='mb-0 table table-bordered table-striped table-hover'\r\n          style={{ minWidth: 800 }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th rowSpan={2} className='text-center align-middle'>\r\n                No\r\n              </th>\r\n              <th rowSpan={2} className='text-center align-middle'>\r\n                NIS\r\n              </th>\r\n              <th rowSpan={2} className='text-center align-middle'>\r\n                Nama\r\n              </th>\r\n              <th rowSpan={2} className='text-center align-middle'>\r\n                Kelas\r\n              </th>\r\n              <th\r\n                colSpan={questions.length}\r\n                className='text-center align-middle'\r\n              >\r\n                Jawaban\r\n              </th>\r\n              <th rowSpan={2} className='text-center align-middle'>\r\n                Benar\r\n              </th>\r\n              <th rowSpan={2} className='text-center align-middle'>\r\n                Salah\r\n              </th>\r\n              <th rowSpan={2} className='text-center align-middle'>\r\n                Nilai\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              {questions.map((question) => (\r\n                <th key={question.id} className='text-center'>\r\n                  {question.qkey}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {students.length > 0 ? (\r\n              students?.map((student, index) => (\r\n                <React.Fragment key={student.id}>\r\n                  <tr>\r\n                    <td className='text-center align-middle' rowSpan={2}>\r\n                      {(page - 1) * limit + index + 1}\r\n                    </td>\r\n                    <td className='text-center align-middle' rowSpan={2}>\r\n                      {student.nis}\r\n                    </td>\r\n                    <td className='align-middle' rowSpan={2}>\r\n                      {student.name}\r\n                    </td>\r\n                    <td className='text-center align-middle' rowSpan={2}>\r\n                      {student.class}\r\n                    </td>\r\n                    {questions.map((question) => {\r\n                      const answer = student?.answers?.find(\r\n                        (ans) => ans.id === question.id\r\n                      );\r\n                      const isCorrect =\r\n                        answer?.mc &&\r\n                        question.qkey &&\r\n                        answer.mc.toUpperCase() === question.qkey.toUpperCase();\r\n                      return (\r\n                        <td\r\n                          key={question.id}\r\n                          className='text-center align-middle'\r\n                        >\r\n                          <div>\r\n                            {answer?.mc ? answer.mc.toUpperCase() : \"-\"}\r\n                          </div>\r\n                        </td>\r\n                      );\r\n                    })}\r\n                    <td className='text-center align-middle' rowSpan={2}>\r\n                      {student.correct}\r\n                    </td>\r\n                    <td className='text-center align-middle' rowSpan={2}>\r\n                      {student.incorrect}\r\n                    </td>\r\n                    <td className='text-center align-middle' rowSpan={2}>\r\n                      {student.mc_score}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    {questions.map((question) => {\r\n                      const answer = student?.answers?.find(\r\n                        (ans) => ans.id === question.id\r\n                      );\r\n                      const isCorrect =\r\n                        answer?.mc &&\r\n                        question.qkey &&\r\n                        answer.mc.toUpperCase() === question.qkey.toUpperCase();\r\n                      return (\r\n                        <td\r\n                          key={question.id + \"-poin\"}\r\n                          className='text-center align-middle'\r\n                          style={{\r\n                            color: isCorrect ? \"green\" : \"red\",\r\n                          }}\r\n                        >\r\n                          {isCorrect ? question.poin : 0}\r\n                        </td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                </React.Fragment>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={questions.length + 7} className='text-center'>\r\n                  Data belum tersedia\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Table>\r\n  );\r\n});\r\n\r\nexport default Anslysis;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Layout from \"../../../../components/layout/Layout\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Filters from \"./Filters\";\r\nimport TableData from \"./TableData\";\r\nimport ScoreChart from \"./ScoreChart\";\r\nimport ScoreList from \"./ScoreList\";\r\nimport Analysis from \"./Anslysis\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst ExamReport = () => {\r\n  const { name, examid, token } = useParams();\r\n  const [classid, setClassid] = useState(\"\");\r\n  const [activeView, setActiveView] = useState(\"table\");\r\n  const tableRef = useRef();\r\n  const chartRef = useRef();\r\n  const listRef = useRef();\r\n  const analysisRef = useRef();\r\n\r\n  const handleRefetch = () => {\r\n    // Refetch all components\r\n    tableRef.current?.refetch();\r\n    chartRef.current?.refetch();\r\n    listRef.current?.refetch();\r\n  };\r\n\r\n  const convertToExcel = () => {\r\n    if (activeView === \"table\" && tableRef.current) {\r\n      const workbook = XLSX.utils.book_new();\r\n      const table = tableRef.current.getTableElement();\r\n      const tableData = XLSX.utils.table_to_sheet(table);\r\n\r\n      XLSX.utils.book_append_sheet(workbook, tableData, \"Sheet1\");\r\n\r\n      const excelBuffer = XLSX.write(workbook, {\r\n        bookType: \"xlsx\",\r\n        type: \"array\",\r\n      });\r\n      const data = new Blob([excelBuffer], {\r\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n      });\r\n      const fileName = `Log_${name}.xlsx`;\r\n\r\n      if (navigator.msSaveBlob) {\r\n        navigator.msSaveBlob(data, fileName);\r\n      } else {\r\n        const link = document.createElement(\"a\");\r\n        link.href = window.URL.createObjectURL(data);\r\n        link.download = fileName;\r\n        link.click();\r\n      }\r\n    } else if (activeView === \"list\" && listRef.current) {\r\n      const workbook = XLSX.utils.book_new();\r\n      const table = listRef.current.getTableElement();\r\n      const tableData = XLSX.utils.table_to_sheet(table);\r\n\r\n      XLSX.utils.book_append_sheet(workbook, tableData, \"Sheet1\");\r\n\r\n      const excelBuffer = XLSX.write(workbook, {\r\n        bookType: \"xlsx\",\r\n        type: \"array\",\r\n      });\r\n      const data = new Blob([excelBuffer], {\r\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n      });\r\n      const fileName = `Nilai_${name}.xlsx`;\r\n\r\n      if (navigator.msSaveBlob) {\r\n        navigator.msSaveBlob(data, fileName);\r\n      } else {\r\n        const link = document.createElement(\"a\");\r\n        link.href = window.URL.createObjectURL(data);\r\n        link.download = fileName;\r\n        link.click();\r\n      }\r\n    } else if (activeView === \"analysis\" && analysisRef.current) {\r\n      const workbook = XLSX.utils.book_new();\r\n      const table = analysisRef.current.getTableElement();\r\n      const tableData = XLSX.utils.table_to_sheet(table);\r\n\r\n      XLSX.utils.book_append_sheet(workbook, tableData, \"Sheet1\");\r\n\r\n      const excelBuffer = XLSX.write(workbook, {\r\n        bookType: \"xlsx\",\r\n        type: \"array\",\r\n      });\r\n      const data = new Blob([excelBuffer], {\r\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n      });\r\n      const fileName = `Analisis_${name}.xlsx`;\r\n\r\n      if (navigator.msSaveBlob) {\r\n        navigator.msSaveBlob(data, fileName);\r\n      } else {\r\n        const link = document.createElement(\"a\");\r\n        link.href = window.URL.createObjectURL(data);\r\n        link.download = fileName;\r\n        link.click();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout title={`${name.replace(/-/g, \" \")}`} levels={[\"admin\", \"teacher\"]}>\r\n      <Filters\r\n        classid={classid}\r\n        setClassid={setClassid}\r\n        examid={examid}\r\n        name={name}\r\n        token={token}\r\n        onRefetch={handleRefetch}\r\n        activeView={activeView}\r\n        setActiveView={setActiveView}\r\n        onExport={convertToExcel}\r\n      />\r\n      <div className=\"mt-3\">\r\n        {activeView === \"table\" && (\r\n          <TableData ref={tableRef} examid={examid} classid={classid} />\r\n        )}\r\n        {activeView === \"chart\" && (\r\n          <ScoreChart ref={chartRef} examid={examid} classid={classid} />\r\n        )}\r\n        {activeView === \"list\" && (\r\n          <ScoreList ref={listRef} examid={examid} classid={classid} />\r\n        )}\r\n        {activeView === \"analysis\" && (\r\n          <Analysis ref={analysisRef} examid={examid} classid={classid} />\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ExamReport;\r\n"],"names":["Filters","classid","setClassid","examid","name","token","onRefetch","activeView","setActiveView","onExport","lastUpdateTime","setLastUpdateTime","useState","activeTab","setActiveTab","data","classes","refetch","refetchClasses","useGetFilterQuery","exam","skip","className","children","jsxs","id","role","jsx","jsxRuntimeExports","type","onClick","map","item","title","Date","toLocaleString","ScoreSummary","studentData","correct","incorrect","pg_score","essay_score","score","StudentInfo","student_nis","student_grade","replace","student_name","student_class","log_exam","weekday","day","month","year","hour","minute","hour12","AnswerItem","answer","index","isTeacherOrAdmin","gradingAnswers","setGradingAnswers","handleGradeEssay","isGrading","point","dangerouslySetInnerHTML","__html","question_text","toUpperCase","essay","style","width","placeholder","min","max","max_point","value","onChange","e","target","disabled","AnswerSheet","detail","useParams","isPrintReady","setIsPrintReady","user","useSelector","state","auth","level","isLoading","isError","error","useGetStudentAnswerQuery","student","student_id","gradeEssay","useGradeEssayMutation","useEffect","async","answerId","maxPoint","c","answer_id","parseInt","unwrap","toast","success","message","tabIndex","nis","_a","Fragment","answers","length","question_id","printWindow","window","open","alert","printDateTime","currentUrl","location","href","printContent","join","document","write","close","onload","focus","print","printAnswerSheet","TableData","forwardRef","ref","page","setPage","limit","setLimit","search","setSearch","tableRef","useRef","useGetExamLogQuery","result","totalData","totalPages","setDetail","finishCbt","finishLoad","useFinishCbtMutation","rejoinExam","rejoinLoad","useRejoinExamMutation","retakeExam","retakeLoad","useRetakeExamMutation","reactExports","useImperativeHandle","getTableElement","current","Table","overflowX","minWidth","scope","class_name","grade_name","ip","browser","createdat","ispenalty","isactive","isdone","handleRejoin","log_id","promise","then","res","loading","hanldeFinish","handleRetake","confirm","colSpan","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","ScoreChart","useGetLineChartDataQuery","chartData","labels","datasets","label","quantity","borderColor","backgroundColor","tension","fill","pointStyle","pointRadius","pointHoverRadius","pointBackgroundColor","pointBorderColor","pointBorderWidth","height","minHeight","Line","options","responsive","maintainAspectRatio","plugins","legend","position","font","size","weight","display","text","padding","tooltip","titleColor","bodyColor","titleFont","bodyFont","borderWidth","displayColors","callbacks","items","raw","scales","y","beginAtZero","grid","color","drawBorder","ticks","stepSize","x","interaction","intersect","mode","elements","line","ScoreList","useGetExamScoreListQuery","students","homebase_name","exam_name","exam_token","teacher_name","rowSpan","mc_score","Anslysis","useGetExamAnalysisQuery","console","log","questions","question","qkey","React","class","find","ans","mc","isCorrect","poin","ExamReport","chartRef","listRef","analysisRef","Layout","levels","_b","_c","workbook","XLSX.utils","book_new","table","tableData","table_to_sheet","utils","book_append_sheet","excelBuffer","XLSX.write","bookType","Blob","fileName","navigator","msSaveBlob","link","createElement","URL","createObjectURL","download","click","Analysis"],"mappings":"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"}