{"version":3,"file":"StartPage-B5pveqPO.js","sources":["../../src/utils/formatTime.js","../../src/page/cbt/student/start/Header.jsx","../../src/page/cbt/student/start/components/Navigation.jsx","../../src/page/cbt/student/start/components/QuestionCard.jsx","../../src/page/cbt/student/start/components/AnswerCard.jsx","../../src/page/cbt/student/start/components/QuestionNumbers.jsx","../../src/page/cbt/student/start/Body.jsx","../../src/page/cbt/student/start/StartPage.jsx"],"sourcesContent":["export const formatTime = (seconds) => {\r\n  if (!seconds && seconds !== 0) return \"--:--:--\";\r\n\r\n  const hours = Math.floor(seconds / 3600);\r\n  const minutes = Math.floor((seconds % 3600) / 60);\r\n  const remainingSeconds = seconds % 60;\r\n\r\n  return `${String(hours).padStart(2, \"0\")}:${String(minutes).padStart(\r\n    2,\r\n    \"0\"\r\n  )}:${String(remainingSeconds).padStart(2, \"0\")}`;\r\n};\r\n","import React from \"react\";\nimport { formatTime } from \"../../../../utils/formatTime\";\n\nconst Header = ({ name, user, examid, timeLeft, isExamStarted }) => {\n  const getTimerDisplay = () => {\n    if (!isExamStarted) {\n      return (\n        <div className=\"d-flex flex-column align-items-center\">\n          <small className=\"text-white-50\">Status</small>\n          <div className=\"h6 m-0 text-warning\">Memulai Ujian...</div>\n        </div>\n      );\n    }\n\n    if (timeLeft === null || timeLeft === undefined) {\n      return (\n        <div className=\"d-flex flex-column align-items-center\">\n          <small className=\"text-white-50\">Status</small>\n          <div className=\"h6 m-0 text-warning\">Memuat Timer...</div>\n        </div>\n      );\n    }\n\n    if (timeLeft <= 0) {\n      return (\n        <div className=\"d-flex flex-column align-items-center\">\n          <small className=\"text-white-50\">Status</small>\n          <div className=\"h6 m-0 text-danger\">Waktu Habis</div>\n        </div>\n      );\n    }\n\n    // Show countdown timer\n    return (\n      <div className=\"d-flex flex-column align-items-center\">\n        <small className=\"text-white-50\">Waktu Tersisa</small>\n        <div\n          className={`h3 m-0 fw-bold ${\n            timeLeft <= 300\n              ? \"text-danger\"\n              : timeLeft <= 600\n              ? \"text-warning\"\n              : \"text-light\"\n          }`}\n        >\n          {formatTime(timeLeft)}\n        </div>\n        {timeLeft <= 300 && (\n          <small className=\"text-danger fw-bold\">⚠️ Waktu Hampir Habis!</small>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container-fluid bg-primary text-white\">\n      <div className=\"container p-2\">\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <div>\n            <h4 className=\"card-title mb-0\">{name.replace(/-/g, \" \")}</h4>\n            <small>\n              Nama: {user.name} | Kelas: {user.class}\n            </small>\n          </div>\n          <div className=\"d-flex align-items-center gap-3\">\n            {getTimerDisplay()}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\r\n\r\nconst Navigation = ({\r\n  currentPage,\r\n  questionsLength,\r\n  isLoading,\r\n  onPrevious,\r\n  onNext,\r\n  onReset,\r\n  onFinish,\r\n  questionsData,\r\n  answers,\r\n}) => {\r\n  // Check if all questions are answered\r\n  const isAllAnswered = () => {\r\n    return questionsData.every((question) => {\r\n      const savedAnswer = answers[question.id];\r\n      return question.qtype === 2\r\n        ? Boolean(savedAnswer?.essay && savedAnswer.essay.trim() !== \"\")\r\n        : Boolean(savedAnswer?.mc);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-between mb-2\">\r\n      <div className=\"btn-group\">\r\n        <button\r\n          className=\"btn btn-sm btn-primary\"\r\n          onClick={onPrevious}\r\n          disabled={currentPage === 1 || isLoading}\r\n        >\r\n          <i className=\"bi bi-chevron-double-left\"></i>\r\n        </button>\r\n\r\n        <button className=\"btn btn-sm btn-outline-primary\" disabled={true}>\r\n          {`Pertanyaan No ${currentPage}`}\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-sm btn-primary\"\r\n          onClick={onNext}\r\n          disabled={currentPage === questionsLength || isLoading}\r\n        >\r\n          <i className=\"bi bi-chevron-double-right\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"btn-group\">\r\n        <button\r\n          className=\"btn btn-sm btn-warning\"\r\n          onClick={onReset}\r\n          disabled={isLoading}\r\n        >\r\n          <i className=\"bi bi-recycle\"></i> Sync\r\n        </button>\r\n        <button\r\n          className=\"btn btn-sm btn-danger\"\r\n          onClick={onFinish}\r\n          disabled={!isAllAnswered()}\r\n          title={\r\n            !isAllAnswered()\r\n              ? \"Semua pertanyaan harus dijawab\"\r\n              : \"Selesaikan ujian\"\r\n          }\r\n        >\r\n          <i className=\"bi bi-check-circle\"></i> Selesaikan Ujian\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nconst createHtml = (html) => {\r\n  return { __html: html };\r\n};\r\n\r\nconst QuestionCard = ({ question }) => {\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-body'>\r\n        <p\r\n          className='card-text'\r\n          dangerouslySetInnerHTML={createHtml(question)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;\r\n","import React from \"react\";\r\n\r\nconst createHtml = (html) => {\r\n  return { __html: html };\r\n};\r\n\r\nconst AnswerCard = ({\r\n  currentQuestion,\r\n  answers,\r\n  essay,\r\n  setEssay,\r\n  currentPage,\r\n  handleSubmit,\r\n  isLoadingAnswer,\r\n}) => {\r\n  const renderAnswerOptions = () => {\r\n    if (!currentQuestion) return null;\r\n\r\n    // If qtype is 2, show textarea\r\n    if (currentQuestion.qtype === 2) {\r\n      const savedEssay = answers[currentQuestion.id]?.essay || \"\";\r\n      return (\r\n        <div className=\"answer-options\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            rows=\"4\"\r\n            placeholder=\"Ketikkan jawabanmu disini...\"\r\n            value={essay}\r\n            onChange={(e) => setEssay(e.target.value)}\r\n            onBlur={() => handleSubmit()}\r\n          ></textarea>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // For other question types, show options\r\n    return (\r\n      <div className=\"d-flex flex-column gap-2\">\r\n        {currentQuestion.choices &&\r\n          currentQuestion.choices.map((choice, index) => {\r\n            // Improved check for selected answer\r\n            const savedAnswer = answers[currentQuestion.id]?.mc;\r\n            const isSelected = savedAnswer && savedAnswer === choice.key;\r\n\r\n            return (\r\n              <div key={index} className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name={`question-${currentPage}`}\r\n                  id={`option-${choice.key}`}\r\n                  value={choice.key}\r\n                  checked={isSelected}\r\n                  onChange={(e) => handleSubmit(e.target.value)}\r\n                />\r\n                <label\r\n                  className=\"form-check-label pointer\"\r\n                  htmlFor={`option-${choice.key}`}\r\n                >\r\n                  <span dangerouslySetInnerHTML={createHtml(choice.text)} />\r\n                </label>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        {isLoadingAnswer ? (\r\n          <div className=\"text-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          renderAnswerOptions()\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnswerCard;\r\n","import React from \"react\";\r\n\r\nconst QuestionNumbers = ({\r\n  questionsData,\r\n  currentPage,\r\n  answers,\r\n  isLoading,\r\n  onQuestionNumberClick,\r\n}) => {\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-body'>\r\n        <div className='d-flex justify-content-center flex-wrap gap-2'>\r\n          {questionsData.map((question, index) => {\r\n            const questionId = question?.id;\r\n            const savedAnswer = answers[questionId];\r\n\r\n            // Improved check for answered questions\r\n            const isAnswered =\r\n              question.qtype === 2\r\n                ? Boolean(savedAnswer?.essay && savedAnswer.essay.trim() !== \"\")\r\n                : Boolean(savedAnswer?.mc && savedAnswer.mc !== \"\");\r\n\r\n            return (\r\n              <button\r\n                key={index}\r\n                className={`btn btn-sm ${\r\n                  currentPage === index + 1\r\n                    ? \"btn-primary\"\r\n                    : isAnswered\r\n                    ? \"btn-danger\"\r\n                    : \"btn-outline-primary\"\r\n                }`}\r\n                onClick={() => onQuestionNumberClick(index)}\r\n                disabled={isLoading}\r\n              >\r\n                {index + 1}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionNumbers;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport {\r\n  useAddAnswerMutation,\r\n  useGetStudentAnswerQuery,\r\n} from \"../../../../controller/api/cbt/ApiAnswer\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Import Components\r\nimport Navigation from \"./components/Navigation\";\r\nimport QuestionCard from \"./components/QuestionCard\";\r\nimport AnswerCard from \"./components/AnswerCard\";\r\nimport QuestionNumbers from \"./components/QuestionNumbers\";\r\n\r\nconst createHtml = (html) => {\r\n  return { __html: html };\r\n};\r\n\r\nconst Body = ({\r\n  questionsData,\r\n  currentPage,\r\n  onNext,\r\n  onPrevious,\r\n  onQuestionNumberClick,\r\n  onReset,\r\n  onFinish,\r\n}) => {\r\n  const { examid } = useParams();\r\n\r\n  // Memoize the current question to prevent unnecessary re-renders\r\n  const currentQuestion = useMemo(() => {\r\n    return questionsData[currentPage - 1] || {};\r\n  }, [questionsData, currentPage]);\r\n\r\n  // ANSWER\r\n  const [essay, setEssay] = useState(\"\");\r\n  const [key, setKey] = useState(\"\");\r\n  const [answers, setAnswers] = useState({});\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { data: answer, isLoading: isLoadingAnswer } = useGetStudentAnswerQuery(\r\n    {\r\n      student: user.id,\r\n      exam: examid,\r\n    }\r\n  );\r\n  const [addAnswer, { isLoading, isSuccess, isError, reset }] =\r\n    useAddAnswerMutation();\r\n\r\n  // Load saved answers when component mounts or when answer data changes\r\n  useEffect(() => {\r\n    if (answer) {\r\n      const savedAnswers = {};\r\n      answer.forEach((ans) => {\r\n        if (ans.question_id) {\r\n          savedAnswers[ans.question_id] = {\r\n            id: ans.id,\r\n            mc: ans.mc || null,\r\n            essay: ans.essay || null,\r\n            point: ans.point || 0,\r\n            qtype: ans.qtype,\r\n          };\r\n        }\r\n      });\r\n      setAnswers(savedAnswers);\r\n    }\r\n  }, [answer]);\r\n\r\n  // Update key and essay when changing questions\r\n  useEffect(() => {\r\n    if (currentQuestion && currentQuestion.id && answers[currentQuestion.id]) {\r\n      if (currentQuestion.qtype === 2) {\r\n        setEssay(answers[currentQuestion.id].essay || \"\");\r\n      } else {\r\n        setKey(answers[currentQuestion.id].mc || \"\");\r\n      }\r\n    } else {\r\n      setKey(\"\");\r\n      setEssay(\"\");\r\n    }\r\n  }, [currentQuestion?.id, currentQuestion?.qtype, answers]);\r\n\r\n  const handleSubmit = async (selectedKey = null) => {\r\n    if (!currentQuestion) return;\r\n\r\n    // For essay questions, use the essay state value\r\n    // For multiple choice, use the selected key\r\n    const answerValue = currentQuestion.qtype === 2 ? essay : selectedKey;\r\n\r\n    // Don't submit if essay is empty\r\n    if (currentQuestion.qtype === 2 && !answerValue) return;\r\n\r\n    const data = {\r\n      id: answers[currentQuestion.id]?.id || null,\r\n      student: user.id,\r\n      exam: examid,\r\n      question: currentQuestion.id,\r\n      mc: currentQuestion.qtype === 2 ? null : answerValue,\r\n      essay: currentQuestion.qtype === 2 ? answerValue : null,\r\n    };\r\n\r\n    toast.promise(\r\n      addAnswer(data)\r\n        .unwrap()\r\n        .then((res) => {\r\n          // Update the answer ID in the local state\r\n          if (res.id) {\r\n            setAnswers((prev) => ({\r\n              ...prev,\r\n              [currentQuestion.id]: {\r\n                ...prev[currentQuestion.id],\r\n                id: res.id,\r\n                mc: currentQuestion.qtype === 2 ? null : answerValue,\r\n                essay: currentQuestion.qtype === 2 ? answerValue : null,\r\n              },\r\n            }));\r\n          }\r\n          return res.message;\r\n        }),\r\n      {\r\n        loading: \"Meyimpan data...\",\r\n        success: (message) => message,\r\n        error: (error) => error.data.message,\r\n      }\r\n    );\r\n  };\r\n\r\n  // Auto-save answer when moving to next question\r\n  const handleNext = async () => {\r\n    if (currentQuestion.qtype === 2 && essay) {\r\n      await handleSubmit();\r\n    }\r\n    onNext();\r\n  };\r\n\r\n  const handlePrevious = async () => {\r\n    if (currentQuestion.qtype === 2 && essay) {\r\n      await handleSubmit();\r\n    }\r\n    onPrevious();\r\n  };\r\n\r\n  // Handle success and error states\r\n  useEffect(() => {\r\n    if (isError) {\r\n      reset();\r\n    }\r\n  }, [isError, reset]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      reset();\r\n    }\r\n  }, [isSuccess, reset]);\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-2\">\r\n      <Navigation\r\n        currentPage={currentPage}\r\n        questionsLength={questionsData.length}\r\n        isLoading={isLoading}\r\n        onPrevious={handlePrevious}\r\n        onNext={handleNext}\r\n        onReset={onReset}\r\n        onFinish={onFinish}\r\n        questionsData={questionsData}\r\n        answers={answers}\r\n      />\r\n\r\n      <div className=\"row g-2\">\r\n        {/* Question Column */}\r\n        <div className=\"col-lg-5 col-12\">\r\n          <QuestionCard question={currentQuestion.question} />\r\n        </div>\r\n\r\n        {/* Answer Column */}\r\n        <div className=\"col-lg-5 col-12\">\r\n          <AnswerCard\r\n            currentQuestion={currentQuestion}\r\n            answers={answers}\r\n            essay={essay}\r\n            setEssay={setEssay}\r\n            currentPage={currentPage}\r\n            handleSubmit={handleSubmit}\r\n            isLoadingAnswer={isLoadingAnswer}\r\n          />\r\n        </div>\r\n\r\n        {/* Question Numbers Column */}\r\n        <div className=\"col-lg-2 col-12\">\r\n          <QuestionNumbers\r\n            questionsData={questionsData}\r\n            currentPage={currentPage}\r\n            answers={answers}\r\n            isLoading={isLoading}\r\n            onQuestionNumberClick={onQuestionNumberClick}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Body from \"./Body\";\nimport { useSelector } from \"react-redux\";\nimport { useGetExamAndQuestionsQuery } from \"../../../../controller/api/cbt/ApiExam\";\nimport { useFinishCbtMutation } from \"../../../../controller/api/log/ApiLog\";\nimport Meta from \"../../../../components/meta/Meta\";\nimport { toast } from \"react-hot-toast\";\nimport { useGetUserLogQuery } from \"../../../../controller/api/log/ApiLog\";\n\nconst StartPage = () => {\n  const { name, examid, token } = useParams();\n  const navigate = useNavigate();\n  const { user } = useSelector((state) => state.auth);\n  const {\n    data = {},\n    refetch,\n    isLoading,\n    error,\n  } = useGetExamAndQuestionsQuery({ examid });\n  const { exam, banks, questions } = data;\n\n  const [questionsData, setQuestionsData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [timeLeft, setTimeLeft] = useState(null);\n  const [isExamStarted, setIsExamStarted] = useState(false);\n\n  const [finishCbt] = useFinishCbtMutation();\n\n  // Get the log data to calculate remaining time\n  const {\n    data: log,\n    error: logError,\n    isLoading: logLoading,\n  } = useGetUserLogQuery(\n    {\n      exam: examid,\n      student: user?.id,\n    },\n    { skip: !examid || !user?.id }\n  );\n\n  // Check if user has access to this exam\n  useEffect(() => {\n    if (error) {\n      toast.error(\"Anda tidak memiliki akses ke ujian ini\");\n      navigate(\"/siswa-daftar-ujian\");\n    }\n  }, [error, navigate]);\n\n  // Immediate timer start when component mounts and data is available\n  useEffect(() => {\n    if (log && exam && log.start_time && !isExamStarted && !logLoading) {\n      try {\n        const startTime = new Date(log.start_time).getTime();\n        const now = new Date().getTime();\n        const elapsedSeconds = Math.floor((now - startTime) / 1000);\n        const totalDuration = exam.duration * 60; // Convert minutes to seconds\n        const remainingSeconds = Math.max(0, totalDuration - elapsedSeconds);\n\n        if (remainingSeconds <= 0) {\n          finishExam();\n          return;\n        }\n\n        setTimeLeft(remainingSeconds);\n        setIsExamStarted(true);\n\n        // Show success message\n        toast.success(\n          `Ujian dimulai! Waktu tersisa: ${Math.floor(\n            remainingSeconds / 60\n          )} menit ${remainingSeconds % 60} detik`\n        );\n      } catch (error) {\n        console.error(\"Error calculating timer:\", error);\n        toast.error(\"Terjadi kesalahan saat memulai timer\");\n      }\n    }\n  }, [log, exam, logLoading, isExamStarted]);\n\n  // Check if exam has started and calculate remaining time\n  useEffect(() => {\n    if (logError && !logLoading) {\n      toast.error(\"Anda belum memulai ujian ini\");\n      navigate(\"/siswa-daftar-ujian\");\n      return;\n    }\n\n    // If log exists and exam data is available, start the timer\n    if (log && exam && log.start_time && !isExamStarted) {\n      try {\n        const startTime = new Date(log.start_time).getTime();\n        const now = new Date().getTime();\n        const elapsedSeconds = Math.floor((now - startTime) / 1000);\n        const totalDuration = exam.duration * 60; // Convert minutes to seconds\n        const remainingSeconds = Math.max(0, totalDuration - elapsedSeconds);\n\n        if (remainingSeconds <= 0) {\n          // Time is up, finish the exam\n          finishExam();\n          return;\n        }\n\n        // Set the timer and start the exam\n        setTimeLeft(remainingSeconds);\n        setIsExamStarted(true);\n      } catch (error) {\n        console.error(\"Error calculating timer:\", error);\n        toast.error(\"Terjadi kesalahan saat memulai timer\");\n      }\n    }\n  }, [log, exam, logLoading, logError, navigate, isExamStarted]);\n\n  // Timer effect - countdown every second\n  useEffect(() => {\n    if (!isExamStarted || !timeLeft || timeLeft <= 0) return;\n\n    const timer = setInterval(() => {\n      setTimeLeft((prev) => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          finishExam();\n          return 0;\n        }\n\n        // Show warning when time is running low\n        if (prev === 300) {\n          // 5 minutes left\n          toast.warning(\"⚠️ Waktu tersisa 5 menit!\");\n        } else if (prev === 60) {\n          // 1 minute left\n          toast.error(\"🚨 Waktu tersisa 1 menit!\");\n        }\n\n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [isExamStarted, timeLeft]);\n\n  // Handle exam submission when time is up\n  const handleTimeUp = () => {\n    if (isExamStarted && timeLeft <= 0) {\n      toast.error(\n        \"⏰ Waktu ujian telah habis! Ujian akan diselesaikan otomatis.\"\n      );\n      finishExam();\n    }\n  };\n\n  // Auto-finish exam when time is up\n  useEffect(() => {\n    if (timeLeft === 0 && isExamStarted) {\n      handleTimeUp();\n    }\n  }, [timeLeft, isExamStarted]);\n\n  // Handle page refresh/close to warn user\n  useEffect(() => {\n    const handleBeforeUnload = (e) => {\n      if (isExamStarted && timeLeft > 0) {\n        e.preventDefault();\n        e.returnValue =\n          \"Anda sedang mengikuti ujian. Yakin ingin meninggalkan halaman ini?\";\n        return e.returnValue;\n      }\n    };\n\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n  }, [isExamStarted, timeLeft]);\n\n  const handleNextQuestion = () => {\n    if (currentPage < questionsData.length) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const handlePreviousQuestion = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const handleQuestionNumberClick = (index) => {\n    setCurrentPage(index + 1);\n  };\n\n  const handleReset = () => {\n    localStorage.removeItem(\"questions\");\n    refetch();\n\n    if (questions && Array.isArray(questions)) {\n      localStorage.setItem(\"questions\", JSON.stringify({ questions }));\n      setQuestionsData(questions);\n    }\n  };\n\n  const finishExam = async () => {\n    if (!log || !log.id) {\n      console.error(\"No log data available for finishing exam\");\n      toast.error(\"Data ujian tidak tersedia\");\n      navigate(\"/siswa-daftar-ujian\");\n      return;\n    }\n\n    toast.promise(finishCbt({ id: log.id, exam: examid }).unwrap(), {\n      loading:\n        timeLeft === 0\n          ? \"Menyelesaikan ujian otomatis...\"\n          : \"Menyelesaikan ujian...\",\n      success: (data) => {\n        const message =\n          timeLeft === 0\n            ? \"Ujian telah diselesaikan otomatis karena waktu habis\"\n            : \"Ujian berhasil diselesaikan\";\n        toast.success(message);\n        navigate(\"/siswa-daftar-ujian\");\n        return data.message || message;\n      },\n      error: (err) => {\n        console.error(\"Error finishing exam:\", err);\n        return `Gagal menyelesaikan ujian: ${err.data?.message || err.message}`;\n      },\n    });\n  };\n\n  // Load questions effect\n  useEffect(() => {\n    if (!questions) return;\n\n    const storedQuestions = localStorage.getItem(\"questions\");\n\n    if (storedQuestions) {\n      try {\n        const parsedQuestions = JSON.parse(storedQuestions);\n        if (Array.isArray(parsedQuestions.questions)) {\n          setQuestionsData(parsedQuestions.questions);\n        } else {\n          setQuestionsData([]);\n        }\n      } catch (error) {\n        console.error(\"Error parsing stored questions:\", error);\n        setQuestionsData([]);\n      }\n    } else {\n      if (questions && Array.isArray(questions)) {\n        localStorage.setItem(\"questions\", JSON.stringify({ questions }));\n        setQuestionsData(questions);\n      }\n    }\n  }, [questions]);\n\n  // Show loading state while waiting for log data\n  if (logLoading) {\n    return (\n      <div\n        className=\"d-flex justify-content-center align-items-center\"\n        style={{ height: \"100vh\" }}\n      >\n        <div className=\"text-center\">\n          <div className=\"spinner-border text-primary mb-3\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n          <h5>Memverifikasi Akses Ujian</h5>\n          <p className=\"text-muted\">Mohon tunggu sebentar...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div\n        className=\"d-flex justify-content-center align-items-center\"\n        style={{ height: \"100vh\" }}\n      >\n        <div className=\"spinner-border text-primary\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n        <div className=\"ms-3\">\n          <small className=\"text-muted\">Memuat ujian...</small>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error if exam data is not available\n  if (!exam || !log) {\n    return (\n      <div\n        className=\"d-flex justify-content-center align-items-center\"\n        style={{ height: \"100vh\" }}\n      >\n        <div className=\"text-center\">\n          <div className=\"text-danger mb-3\">\n            <i className=\"bi bi-exclamation-triangle fs-1\"></i>\n          </div>\n          <h5>Data Ujian Tidak Ditemukan</h5>\n          <p className=\"text-muted\">\n            {!exam\n              ? \"Data ujian tidak tersedia\"\n              : !log\n              ? \"Anda belum memulai ujian ini\"\n              : \"Data tidak lengkap\"}\n          </p>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => navigate(\"/siswa-daftar-ujian\")}\n          >\n            Kembali ke Daftar Ujian\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ height: \"100vh\" }} className=\"bg-light\">\n      <Meta title={`Pertanyaan No ${currentPage}`} />\n\n      <Header\n        name={name}\n        user={user}\n        examid={examid}\n        timeLeft={timeLeft}\n        isExamStarted={isExamStarted}\n      />\n\n      <Body\n        questionsData={questionsData}\n        currentPage={currentPage}\n        onNext={handleNextQuestion}\n        onPrevious={handlePreviousQuestion}\n        onQuestionNumberClick={handleQuestionNumberClick}\n        onReset={handleReset}\n        onFinish={finishExam}\n        timeLeft={timeLeft}\n        isExamStarted={isExamStarted}\n      />\n    </div>\n  );\n};\n\nexport default StartPage;\n"],"names":["formatTime","seconds","hours","Math","floor","minutes","remainingSeconds","String","padStart","Header","name","user","examid","timeLeft","isExamStarted","jsx","className","children","jsxRuntimeExports","jsxs","replace","class","Navigation","currentPage","questionsLength","isLoading","onPrevious","onNext","onReset","onFinish","questionsData","answers","isAllAnswered","every","question","savedAnswer","id","qtype","Boolean","essay","trim","mc","onClick","disabled","title","QuestionCard","dangerouslySetInnerHTML","html","__html","AnswerCard","currentQuestion","setEssay","handleSubmit","isLoadingAnswer","role","_a","rows","placeholder","value","onChange","e","target","onBlur","choices","map","choice","index","isSelected","key","type","checked","htmlFor","text","QuestionNumbers","onQuestionNumberClick","questionId","isAnswered","Body","useParams","useMemo","useState","setKey","setAnswers","useSelector","state","auth","data","answer","useGetStudentAnswerQuery","student","exam","addAnswer","isSuccess","isError","reset","useAddAnswerMutation","useEffect","savedAnswers","forEach","ans","question_id","point","async","selectedKey","answerValue","c","promise","unwrap","then","res","prev","message","loading","success","error","length","StartPage","token","navigate","useNavigate","refetch","useGetExamAndQuestionsQuery","banks","questions","setQuestionsData","setCurrentPage","setTimeLeft","setIsExamStarted","finishCbt","useFinishCbtMutation","log","logError","logLoading","useGetUserLogQuery","skip","toast","start_time","startTime","Date","getTime","now","elapsedSeconds","totalDuration","duration","max","finishExam","console","timer","setInterval","clearInterval","warning","handleBeforeUnload","preventDefault","returnValue","window","addEventListener","removeEventListener","err","storedQuestions","localStorage","getItem","parsedQuestions","JSON","parse","Array","isArray","setItem","stringify","style","height","Meta","removeItem"],"mappings":"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"}