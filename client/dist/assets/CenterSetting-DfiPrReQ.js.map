{"version":3,"file":"CenterSetting-DfiPrReQ.js","sources":["../../src/page/center/setting/AppSetting.jsx","../../src/page/center/setting/SmtpSetting.jsx","../../src/page/center/setting/Profile.jsx","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/motion-utils/dist/es/array.mjs","../../node_modules/motion-utils/dist/es/global-config.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/subscription-manager.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/animation/GroupAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/GroupAnimationWithThen.mjs","../../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/is-supported.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../../node_modules/motion-dom/dist/es/frameloop/order.mjs","../../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/motion-dom/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/parse-transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../../src/components/loader/Loading.jsx","../../src/page/center/setting/CenterSetting.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport {\r\n  useUpdateAppMutation,\r\n  useGetAppDataQuery,\r\n} from \"../../../controller/api/center/ApiApp\";\r\n\r\nconst AppSetting = ({ app }) => {\r\n  const [formData, setFormData] = useState({\r\n    id: app?.id,\r\n    app_name: app?.app_name || \"\",\r\n    logo: app?.logo || \"\",\r\n  });\r\n  const [previewImage, setPreviewImage] = useState(app?.logo || \"\");\r\n  const [updateApp, { isLoading, isSuccess, isError, reset }] =\r\n    useUpdateAppMutation();\r\n\r\n  // Add the query hook to get the latest app data\r\n  const { refetch } = useGetAppDataQuery();\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        logo: file,\r\n      }));\r\n      setPreviewImage(URL.createObjectURL(file));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formDataToSend = new FormData();\r\n    formDataToSend.append(\"id\", formData.id);\r\n    formDataToSend.append(\"app_name\", formData.app_name);\r\n\r\n    // Only append logo if it's a File object (new upload)\r\n    if (formData.logo instanceof File) {\r\n      formDataToSend.append(\"logo\", formData.logo);\r\n    }\r\n    // If logo is a string (existing logo path), we don't need to append it\r\n    // The server will use the existing logo if no new file is uploaded\r\n\r\n    toast.promise(\r\n      updateApp(formDataToSend)\r\n        .unwrap()\r\n        .then((res) => {\r\n          // Refetch data immediately after successful update\r\n          refetch();\r\n          return res.message;\r\n        }),\r\n      {\r\n        loading: \"Menyimpan...\",\r\n        success: (message) => message,\r\n        error: (error) => error.data.message,\r\n      }\r\n    );\r\n  };\r\n\r\n  // Update form data and preview image when app data changes\r\n  useEffect(() => {\r\n    if (app) {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        id: app.id,\r\n        app_name: app.app_name || \"\",\r\n        logo: app.logo || \"\",\r\n      }));\r\n      setPreviewImage(app.logo || \"\");\r\n    }\r\n  }, [app]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess || isError) {\r\n      inputRef.current.value = \"\";\r\n      reset();\r\n    }\r\n  }, [isSuccess, isError, reset]);\r\n\r\n  return (\r\n    <form className=\"d-flex flex-column gap-3 p-2\" onSubmit={handleSubmit}>\r\n      <p className=\"m-0 h6\">Aplikasi</p>\r\n\r\n      <div className=\"input-group\">\r\n        <span\r\n          style={{ width: 150 }}\r\n          className=\"input-group-text\"\r\n          id=\"basic-addon1\"\r\n        >\r\n          Nama Aplikasi\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          aria-label=\"Nama Aplikasi\"\r\n          aria-describedby=\"basic-addon1\"\r\n          name=\"app_name\"\r\n          value={formData.app_name}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <span\r\n          style={{ width: 150 }}\r\n          className=\"input-group-text\"\r\n          id=\"basic-addon1\"\r\n        >\r\n          Logo Aplikasi\r\n        </span>\r\n        <input\r\n          ref={inputRef}\r\n          type=\"file\"\r\n          className=\"form-control\"\r\n          aria-label=\"Logo Aplikasi\"\r\n          aria-describedby=\"basic-addon1\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"text-end\">\r\n        <button\r\n          className=\"btn btn-sm btn-success\"\r\n          type=\"submit\"\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? \"Menyimpan...\" : \"Simpan\"}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"text-start\">\r\n        <img\r\n          src={previewImage}\r\n          alt=\"Logo Aplikasi\"\r\n          className=\"img-fluid\"\r\n          style={{ width: 150 }}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AppSetting;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useUpdateSmtpMutation,\r\n  useGetAppDataQuery,\r\n} from \"../../../controller/api/center/ApiApp\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst SmtpSetting = ({ app }) => {\r\n  const [formData, setFormData] = useState({\r\n    smtp_host: \"\",\r\n    smtp_port: \"\",\r\n    smtp_email: \"\",\r\n    smtp_password: \"\",\r\n    smtp_domain: \"\",\r\n  });\r\n\r\n  const [updateSmtp, { isLoading }] = useUpdateSmtpMutation();\r\n  const { refetch } = useGetAppDataQuery();\r\n\r\n  useEffect(() => {\r\n    if (app) {\r\n      setFormData({\r\n        smtp_host: app.smtp_host || \"\",\r\n        smtp_port: app.smtp_port || \"\",\r\n        smtp_email: app.smtp_email || \"\",\r\n        smtp_password: app.smtp_password || \"\",\r\n        smtp_domain: app.smtp_domain || \"\",\r\n      });\r\n    }\r\n  }, [app]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      smtp_host: formData.smtp_host,\r\n      smtp_port: formData.smtp_port,\r\n      smtp_email: formData.smtp_email,\r\n      smtp_password: formData.smtp_password,\r\n    };\r\n\r\n    toast.promise(\r\n      updateSmtp(data)\r\n        .unwrap()\r\n        .then((res) => {\r\n          // Refetch data immediately after successful update\r\n          refetch();\r\n          return res.message;\r\n        }),\r\n      {\r\n        loading: \"Menyimpan...\",\r\n        success: (message) => message,\r\n        error: (error) => error.data.message,\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form className=\"d-flex flex-column gap-3 p-2\" onSubmit={handleSubmit}>\r\n      <p className=\"m-0 h6\">Pengaturan SMTP Email</p>\r\n\r\n      <div className=\"input-group\">\r\n        <span\r\n          style={{ width: 150 }}\r\n          className=\"input-group-text\"\r\n          id=\"smtp-host-label\"\r\n        >\r\n          SMTP Host\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          aria-label=\"SMTP Host\"\r\n          aria-describedby=\"smtp-host-label\"\r\n          name=\"smtp_host\"\r\n          placeholder=\"Masukkan Host SMTP\"\r\n          value={formData.smtp_host}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <span\r\n          style={{ width: 150 }}\r\n          className=\"input-group-text\"\r\n          id=\"smtp-port-label\"\r\n        >\r\n          SMTP Port\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          aria-label=\"SMTP Port\"\r\n          aria-describedby=\"smtp-port-label\"\r\n          name=\"smtp_port\"\r\n          placeholder=\"Masukkan Port SMTP\"\r\n          value={formData.smtp_port}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <span\r\n          style={{ width: 150 }}\r\n          className=\"input-group-text\"\r\n          id=\"smtp-email-label\"\r\n        >\r\n          SMTP Email\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          aria-label=\"SMTP Email\"\r\n          aria-describedby=\"smtp-email-label\"\r\n          name=\"smtp_email\"\r\n          placeholder=\"Masukkan Email SMTP\"\r\n          value={formData.smtp_email}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <span\r\n          style={{ width: 150 }}\r\n          className=\"input-group-text\"\r\n          id=\"smtp-password-label\"\r\n        >\r\n          SMTP Password\r\n        </span>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          aria-label=\"SMTP Password\"\r\n          aria-describedby=\"smtp-password-label\"\r\n          name=\"smtp_password\"\r\n          placeholder=\"Masukkan Password SMTP\"\r\n          value={formData.smtp_password}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <span\r\n          style={{ width: 150 }}\r\n          className=\"input-group-text\"\r\n          id=\"smtp-domain-label\"\r\n        >\r\n          SMTP Domain\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          aria-label=\"SMTP Domain\"\r\n          aria-describedby=\"smtp-domain-label\"\r\n          name=\"smtp_domain\"\r\n          placeholder=\"Masukkan Domain\"\r\n          value={formData.smtp_domain}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"text-end\">\r\n        <button\r\n          className=\"btn btn-sm btn-success\"\r\n          type=\"submit\"\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? \"Menyimpan...\" : \"Simpan\"}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SmtpSetting;\r\n","import React from \"react\";\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <form className=\"d-flex flex-column gap-3 p-2\">\r\n      <p className=\"m-0 h6\">Profile</p>\r\n\r\n      <div className=\"input-group\">\r\n        <span\r\n          style={{ width: 150 }}\r\n          className=\"input-group-text\"\r\n          id=\"basic-addon1\"\r\n        >\r\n          Username\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          aria-label=\"Nama\"\r\n          aria-describedby=\"basic-addon1\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <span\r\n          style={{ width: 150 }}\r\n          className=\"input-group-text\"\r\n          id=\"basic-addon1\"\r\n        >\r\n          Email\r\n        </span>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          aria-label=\"Email\"\r\n          aria-describedby=\"basic-addon1\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"text-end\">\r\n        <button className=\"btn btn-sm btn-success\">Simpan</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\n\nclass GroupAnimation {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        return Promise.all(this.animations.map((animation) => animation.finished));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupAnimation };\n","import { GroupAnimation } from './GroupAnimation.mjs';\n\nclass GroupAnimationWithThen extends GroupAnimation {\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n}\n\nexport { GroupAnimationWithThen };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n        pseudoElement,\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\n\nexport { isWaapiSupportedEasing };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (target instanceof HTMLElement) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.7.4\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from 'motion-dom';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { motionValue } from 'motion-dom';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { parseValueFromTransform } from '../../html/utils/parse-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { frame } from 'motion-dom';\nimport { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue?.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from 'motion-dom';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        if (!this.options.allowFlatten)\n            return;\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { createGeneratorEasing, supportsLinearEasing, calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = supportsLinearEasing() ? generatorOptions.ease : \"easeOut\";\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { frame, cancelFrame, frameData, time } from 'motion-dom';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration, activeAnimations } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = this.currentTime ?? 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n    get finished() {\n        return this.currentFinishedPromise;\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, startWaapiAnimation, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime ?? this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    get finished() {\n        return this.resolved.animation.finished;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            (name !== \"transform\" || !transformTemplate) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, GroupAnimationWithThen } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupAnimationWithThen([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations } from 'motion-dom';\nimport { SubscriptionManager, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time, frame, cancelFrame, motionValue } from 'motion-dom';\nimport { warnOnce, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { warnOnce } from 'motion-utils';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.7.4\", `Attempting to mix Motion versions ${nextValue.version} with 12.7.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { readTransformValue } from './utils/parse-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import React from \"react\";\r\nimport Layout from \"../layout/Layout\";\r\n\r\nconst Loading = ({ title, levels }) => {\r\n  return (\r\n    <Layout title={title} levels={levels}>\r\n      <div\r\n        className=\"d-flex justify-content-center align-items-center\"\r\n        style={{ height: \"50vh\" }}\r\n      >\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Memuat data...</span>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/layout/Layout\";\r\nimport AppSetting from \"./AppSetting\";\r\nimport SmtpSetting from \"./SmtpSetting\";\r\nimport Profile from \"./Profile\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./CenterSetting.css\";\r\nimport { useGetAppDataQuery } from \"../../../controller/api/center/ApiApp\";\r\nimport Loading from \"../../../components/loader/Loading\";\r\n\r\nconst containerVariants = {\r\n  hidden: { opacity: 0 },\r\n  visible: {\r\n    opacity: 1,\r\n    transition: {\r\n      staggerChildren: 0.2,\r\n    },\r\n  },\r\n};\r\n\r\nconst itemVariants = {\r\n  hidden: { opacity: 0, y: 20 },\r\n  visible: {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: {\r\n      duration: 0.5,\r\n    },\r\n  },\r\n};\r\n\r\nconst CenterSetting = () => {\r\n  const { data, isLoading } = useGetAppDataQuery();\r\n\r\n  const { admin, app } = data || {};\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Loading title={\"Pengaturan Aplikasi\"} levels={[\"center\", \"admin\"]} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout title={\"Pengaturan Aplikasi\"} levels={[\"center\"]}>\r\n      <motion.div\r\n        className=\"row g-4 p-3\"\r\n        variants={containerVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n      >\r\n        <motion.div className=\"col-lg-6 col-12\" variants={itemVariants}>\r\n          <div className=\"card h-100 shadow-sm rounded-3 hover-shadow\">\r\n            <AppSetting app={app} />\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div className=\"col-lg-6 col-12\" variants={itemVariants}>\r\n          <div className=\"card h-100 shadow-sm rounded-3 hover-shadow\">\r\n            <SmtpSetting app={app} />\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div className=\"col-lg-6 col-12\" variants={itemVariants}>\r\n          <div className=\"card h-100 shadow-sm rounded-3 hover-shadow\">\r\n            <Profile admin={admin} />\r\n          </div>\r\n        </motion.div>\r\n      </motion.div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CenterSetting;\r\n"],"names":["AppSetting","app","formData","setFormData","useState","id","app_name","logo","previewImage","setPreviewImage","updateApp","isLoading","isSuccess","isError","reset","useUpdateAppMutation","refetch","useGetAppDataQuery","inputRef","useRef","jsxs","useEffect","prev","current","value","className","onSubmit","async","e","preventDefault","formDataToSend","FormData","append","File","Vt","promise","unwrap","then","res","message","loading","success","error","data","children","jsx","jsxRuntimeExports","style","width","type","name","onChange","target","ref","accept","file","files","URL","createObjectURL","disabled","src","alt","SmtpSetting","smtp_host","smtp_port","smtp_email","smtp_password","smtp_domain","updateSmtp","useUpdateSmtpMutation","handleChange","placeholder","Profile","LayoutGroupContext","createContext","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","PresenceContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","MotionGlobalConfig","skipAnimations","useManualTiming","memo","callback","result","noop","any","progress","from","to","toFromDifference","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","a","b","c","numSubscriptions","length","i","getSize","clear","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","supportsScrollTimeline","ScrollTimeline","GroupAnimation","animations","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","forEach","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupAnimationWithThen","onResolve","_onReject","finally","isBezierDefinition","easing","Array","isArray","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","generateLinearEasing","resolution","points","numPoints","round","substring","cubicBezierAsString","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","element","valueName","keyframes","delay","repeat","repeatType","times","pseudoElement","keyframeOptions","offset","fill","iterations","direction","isGenerator","getValueTransition","transition","key","maxGeneratorDuration","calcGeneratorDuration","generator","state","next","done","Infinity","isWaapiSupportedEasing","every","onfinish","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","has","step","schedule","keepAlive","immediate","queue","delete","process","frameData","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","microtask","cancelMicrotask","queueMicrotask","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","set","newTime","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","HTMLElement","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tagName","tabIndex","hasAttribute","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","v","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","get","getPrevious","getVelocity","start","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","LazyContext","strict","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","some","validMotionProps","isValidMotionProp","startsWith","shouldForward","isValidProp","require","default","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","_target","MotionContext","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","motionComponentSymbol","Symbol","for","isRefObject","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","onMount","mount","unmount","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","isMounted","useInsertionEffect","optimisedAppearId","wantsHandoff","_a","MotionHandoffIsComplete","_b","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","reactExports","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","split","trim","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","isMotionValue","getValueAsType","transform","clamp","number","parse","alpha","scale","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","lowercaseSVGElements","isSVGComponent","includes","dashKeys","array","camelKeys","calcOrigin","origin","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","getValueState","resolveVariantFromProps","definition","custom","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","onUpdate","makeLatestValues","renderState","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","valueTarget","prevProps","newValues","getValue","liveStyle","htmlMotionConfig","updateSVGDimensions","getBBox","getBoundingClientRect","renderHTML","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","toUpperCase","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","resolveVariant","getProps","positionalKeys","setMotionValue","hasValue","addValue","addValueToWillChange","willChange","WillChange","newWillChange","getOptimisedAppearId","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","sanitize","floatRegex","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","radToDeg","rad","PI","angle","atan2","rebaseAngle","matrix2dParsers","atan","sqrt","matrix3dParsers","defaultTransformValue","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","_bbox","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isNotNull","getFinalKeyframe","resolvedKeyframes","BaseAnimation","autoplay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","allowFlatten","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","createGenerator","createGeneratorEasing","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","supports","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","transformPoint","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","useId","usePresence","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","matches","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","readTransformValue","computedStyle","SVGVisualElement","updateDimensions","defaultType","getAttribute","motion","Loading","title","levels","Layout","role","containerVariants","hidden","visible","itemVariants","CenterSetting","admin","div"],"mappings":"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","x_google_ignoreList":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250]}