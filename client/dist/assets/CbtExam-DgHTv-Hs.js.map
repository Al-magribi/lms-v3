{"version":3,"file":"CbtExam-DgHTv-Hs.js","sources":["../../src/page/cbt/exam/Form.jsx","../../src/page/cbt/exam/TableExam.jsx","../../src/page/cbt/exam/CbtExam.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useGetTeachersQuery } from \"../../../controller/api/cbt/ApiBank\";\r\nimport {\r\n  useCreateExamMutation,\r\n  useGetClassesQuery,\r\n} from \"../../../controller/api/cbt/ApiExam\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport Select from \"react-select\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Form = ({ detail, setDetail, onSuccess }) => {\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const initialFormState = {\r\n    examid: \"\",\r\n    teacher: user?.id || \"\",\r\n    bank: [],\r\n    name: \"\",\r\n    duration: \"\",\r\n    classes: [],\r\n    token: \"\",\r\n    isshuffle: \"\",\r\n    mc_score: \"\",\r\n    essay_score: \"\",\r\n  };\r\n\r\n  const [formData, setFormData] = useState(initialFormState);\r\n\r\n  const { data: teachers } = useGetTeachersQuery();\r\n  const { data: classes } = useGetClassesQuery();\r\n  const [createExam, { isSuccess, isLoading, isError, reset }] =\r\n    useCreateExamMutation();\r\n\r\n  const teacherOptions = teachers?.map((teacher) => ({\r\n    value: teacher.id,\r\n    label: teacher.name,\r\n    bank: teacher.bank,\r\n  }));\r\n\r\n  const selectedTeacher =\r\n    user?.level === \"teacher\"\r\n      ? teachers?.find((t) => t.id === user.id)\r\n      : teachers?.find((t) => t.id === formData.teacher);\r\n\r\n  const bankOptions = selectedTeacher?.bank?.map((bank) => ({\r\n    value: bank.id,\r\n    label: bank.name,\r\n    type: bank.type,\r\n  }));\r\n\r\n  const classOptions = classes?.map((item) => ({\r\n    value: item.id,\r\n    label: item.name,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (detail?.id) {\r\n      setFormData({\r\n        examid: detail.id,\r\n        teacher: detail.teacher,\r\n        name: detail.name,\r\n        duration: detail.duration,\r\n        token: detail.token,\r\n        isshuffle: detail.isshuffle,\r\n        mc_score: detail.mc_score,\r\n        essay_score: detail.essay_score,\r\n        bank: detail.banks.map((bank) => ({\r\n          bankid: bank.id,\r\n          type: bank.type,\r\n          pg: bank.pg,\r\n          essay: bank.essay,\r\n        })),\r\n        classes: detail.classes.map((cls) => ({\r\n          value: cls.id,\r\n          label: cls.name,\r\n        })),\r\n      });\r\n    } else if (user?.level === \"teacher\") {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        teacher: user.id,\r\n      }));\r\n    }\r\n  }, [detail, user]);\r\n\r\n  const handleTeacherChange = (selectedOption) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      teacher: selectedOption?.value || null,\r\n      bank: [],\r\n    }));\r\n  };\r\n\r\n  const handleBankChange = (selectedOptions) => {\r\n    const selectedBanks =\r\n      selectedOptions?.map((bank) => ({\r\n        bankid: bank.value,\r\n        type: bank.type,\r\n        pg: \"\",\r\n        essay: \"\",\r\n      })) || [];\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      bank: selectedBanks,\r\n    }));\r\n  };\r\n\r\n  const handleInput = (e, bankid, field) => {\r\n    const { value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      bank: prev.bank.map((bank) =>\r\n        bank.bankid === bankid ? { ...bank, [field]: value } : bank\r\n      ),\r\n    }));\r\n  };\r\n\r\n  const handleClass = (selectedOption) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      classes: selectedOption || [],\r\n    }));\r\n  };\r\n\r\n  const addHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (formData.name.includes(\"/\")) {\r\n      toast.error(\"Karakter / tidak diizinkan\");\r\n      return;\r\n    }\r\n\r\n    toast.promise(\r\n      createExam(formData)\r\n        .unwrap()\r\n        .then((res) => res.message),\r\n      {\r\n        loading: \"Memuat data...\",\r\n        success: (message) => message,\r\n        error: (err) => err.data.message,\r\n      }\r\n    );\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      ...initialFormState,\r\n      teacher: user?.id || \"\",\r\n    });\r\n    setDetail(null);\r\n  };\r\n\r\n  const cancel = () => {\r\n    resetForm();\r\n    onSuccess?.();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      resetForm();\r\n      reset();\r\n      onSuccess?.();\r\n      // Close modal using data-bs-dismiss\r\n      const closeButton = document.querySelector('[data-bs-dismiss=\"modal\"]');\r\n      if (closeButton) {\r\n        closeButton.click();\r\n      }\r\n    }\r\n\r\n    if (isError) {\r\n      reset();\r\n    }\r\n  }, [isSuccess, isError, onSuccess]);\r\n\r\n  useEffect(() => {\r\n    // Cleanup function to reset body overflow when component unmounts\r\n    return () => {\r\n      document.body.style.overflow = \"unset\";\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"addexam\"\r\n      data-bs-backdrop=\"static\"\r\n      data-bs-keyboard=\"false\"\r\n      tabIndex=\"-1\"\r\n      aria-labelledby=\"staticBackdropLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\">\r\n        <form onSubmit={addHandler} className=\"modal-content p-3\">\r\n          <div className=\"modal-header\">\r\n            <h1 className=\"modal-title fs-5\" id=\"staticBackdropLabel\">\r\n              {detail?.id ? \"Edit Ujian\" : \"Tambah Ujian\"}\r\n            </h1>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            ></button>\r\n          </div>\r\n          <div className=\"modal-body d-flex flex-column gap-3\">\r\n            <Select\r\n              isClearable\r\n              isSearchable\r\n              placeholder=\"Cari Guru\"\r\n              value={\r\n                teacherOptions?.find((opt) => opt.value === formData.teacher) ||\r\n                null\r\n              }\r\n              options={teacherOptions}\r\n              onChange={handleTeacherChange}\r\n              isDisabled={!!detail?.id}\r\n            />\r\n\r\n            <Select\r\n              isClearable\r\n              isSearchable\r\n              isMulti\r\n              placeholder=\"Pilih Bank Soal\"\r\n              value={bankOptions?.filter((opt) =>\r\n                formData.bank.some((b) => b.bankid === opt.value)\r\n              )}\r\n              options={bankOptions}\r\n              onChange={handleBankChange}\r\n              isDisabled={!formData.teacher || !!detail?.id}\r\n            />\r\n\r\n            {formData.bank\r\n              .filter((bank) => bank.type === \"bank\")\r\n              .map((bank) => (\r\n                <div key={bank.bankid} className=\"border p-2 rounded\">\r\n                  <p className=\"m-0\">\r\n                    {bankOptions?.find((b) => b.value === bank.bankid)?.label ||\r\n                      detail?.banks?.find((b) => b.id === bank.bankid)?.name}\r\n                  </p>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control mt-1\"\r\n                    placeholder={`Tampil Soal PG `}\r\n                    value={bank.pg}\r\n                    onChange={(e) => handleInput(e, bank.bankid, \"pg\")}\r\n                  />\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control mt-1\"\r\n                    placeholder={`Tampil Soal Essay `}\r\n                    value={bank.essay}\r\n                    onChange={(e) => handleInput(e, bank.bankid, \"essay\")}\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n            <Select\r\n              isClearable\r\n              isSearchable\r\n              isMulti\r\n              placeholder=\"Untuk Kelas\"\r\n              value={formData.classes}\r\n              options={classOptions}\r\n              onChange={handleClass}\r\n            />\r\n\r\n            <div className=\"form-floating\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nama Ujian\"\r\n                value={formData.name || \"\"}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, name: e.target.value })\r\n                }\r\n              />\r\n              <label htmlFor=\"name\">Nama Ujian</label>\r\n            </div>\r\n\r\n            <div className=\"form-floating\">\r\n              <input\r\n                type=\"number\"\r\n                name=\"duration\"\r\n                className=\"form-control\"\r\n                placeholder=\"Durasi\"\r\n                value={formData.duration || \"\"}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, duration: e.target.value })\r\n                }\r\n              />\r\n              <label htmlFor=\"duration\">Durasi</label>\r\n            </div>\r\n\r\n            <div className=\"form-floating\">\r\n              <input\r\n                type=\"number\"\r\n                name=\"mc_score\"\r\n                id=\"mc_score\"\r\n                className=\"form-control\"\r\n                placeholder=\"Persentase Nilai PG\"\r\n                value={formData.mc_score}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, mc_score: e.target.value })\r\n                }\r\n              />\r\n              <label htmlFor=\"mc_score\">Persentase Nilai PG</label>\r\n            </div>\r\n\r\n            <div className=\"form-floating\">\r\n              <input\r\n                type=\"number\"\r\n                name=\"essay_score\"\r\n                id=\"essay_score\"\r\n                className=\"form-control\"\r\n                placeholder=\"Persentase Nilai Essay\"\r\n                value={formData.essay_score}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, essay_score: e.target.value })\r\n                }\r\n              />\r\n              <label htmlFor=\"essay_score\">Persentase Nilai Essay</label>\r\n            </div>\r\n\r\n            <select\r\n              name=\"isshuffle\"\r\n              className=\"form-control\"\r\n              value={formData.isshuffle}\r\n              onChange={(e) =>\r\n                setFormData({ ...formData, isshuffle: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"\" hidden>\r\n                Acak Soal\r\n              </option>\r\n              <option value={true}>Ya</option>\r\n              <option value={false}>Tidak</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-sm btn-warning\"\r\n              data-bs-dismiss=\"modal\"\r\n              onClick={cancel}\r\n            >\r\n              Batal\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-sm btn-success\"\r\n              disabled={isLoading}\r\n            >\r\n              {detail?.id ? \"Update\" : \"Simpan\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { useEffect, useState } from \"react\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport {\r\n  useDeleteExamMutation,\r\n  useGetExamsQuery,\r\n  useChangeStatusMutation,\r\n} from \"../../../controller/api/cbt/ApiExam\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst TableExam = ({ setDetail }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(12);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const { data: rawData = {}, isLoading: loading } = useGetExamsQuery({\r\n    page,\r\n    limit,\r\n    search,\r\n  });\r\n  const { exams = [], totalData, totalPages } = rawData;\r\n\r\n  console.log(exams);\r\n\r\n  const [deleteExam, { isSuccess, isLoading, isError, reset }] =\r\n    useDeleteExamMutation();\r\n  const [\r\n    changeStatus,\r\n    { isSuccess: isSuccessStatus, isError: isErrorStatus, reset: resetStatus },\r\n  ] = useChangeStatusMutation();\r\n\r\n  const deleteHandler = (id) => {\r\n    const confirm = window.confirm(\r\n      \"Apakah anda yakin ingin menghapus ujian ini dan semua data yang terkait dengan ujian ini?\"\r\n    );\r\n\r\n    if (confirm) {\r\n      toast.promise(\r\n        deleteExam(id)\r\n          .unwrap()\r\n          .then((res) => res.message),\r\n        {\r\n          loading: \"Memproses...\",\r\n          success: (message) => message,\r\n          error: (err) => err.data.message,\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeStatusHandler = (id) => {\r\n    toast.promise(\r\n      changeStatus(id)\r\n        .unwrap()\r\n        .then((res) => res.message),\r\n      {\r\n        loading: \"Memproses...\",\r\n        success: (message) => message,\r\n        error: (err) => err.data.message,\r\n      }\r\n    );\r\n  };\r\n\r\n  const copyTokenHandler = (token) => {\r\n    navigator.clipboard.writeText(token);\r\n    toast.success(\"Token berhasil disalin\");\r\n  };\r\n\r\n  const openNewTab = (name, id, token) => {\r\n    const formatName = name.toUpperCase().replace(/ /g, \"-\");\r\n    window.open(`/laporan-ujian/${formatName}/${id}/${token}`, \"_blank\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess || isError) {\r\n      reset();\r\n    }\r\n  }, [isSuccess, isError]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccessStatus || isErrorStatus) {\r\n      resetStatus();\r\n    }\r\n  }, [isSuccessStatus, isErrorStatus]);\r\n\r\n  return (\r\n    <Table\r\n      page={page}\r\n      setPage={setPage}\r\n      setLimit={setLimit}\r\n      setSearch={setSearch}\r\n      totalData={totalData}\r\n      totalPages={totalPages}\r\n      isLoading={loading}\r\n    >\r\n      <div className=\"row g-4\">\r\n        {exams?.length > 0 ? (\r\n          exams?.map((exam, i) => (\r\n            <div key={i} className=\"col-12 col-lg-4\">\r\n              <div className=\"card rounded-4 shadow-sm hover-shadow h-100 overflow-hidden\">\r\n                <div className=\"card-body d-flex flex-column h-100 p-4 gap-2\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <div className=\"d-flex align-items-start justify-content-center flex-wrap gap-2\">\r\n                      <div\r\n                        className=\"rounded-circle bg-primary bg-opacity-10 d-flex align-items-center justify-content-center\"\r\n                        style={{ width: 48, height: 48 }}\r\n                      >\r\n                        <i className=\"bi bi-laptop text-primary fs-5\"></i>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <div className=\"d-flex gap-2 flex-column align-items-start\">\r\n                          <h6\r\n                            title={exam.name}\r\n                            className=\"lh-1 text-primary m-0 pointer\"\r\n                          >\r\n                            {exam.name.length > 20\r\n                              ? `${exam.name.slice(0, 20)}...`\r\n                              : exam.name}\r\n                          </h6>\r\n                          <span\r\n                            className=\"badge bg-secondary pointer\"\r\n                            data-toggle=\"tooltip\"\r\n                            data-placement=\"top\"\r\n                            title=\"Copy Token\"\r\n                            onClick={() => copyTokenHandler(exam.token)}\r\n                          >\r\n                            {exam.token}\r\n                          </span>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex gap-2\">\r\n                          <span\r\n                            title={exam.teacher_name}\r\n                            className=\"text-muted small pointer\"\r\n                          >\r\n                            {exam.teacher_name.length > 20\r\n                              ? `${exam.teacher_name.slice(0, 20)}...`\r\n                              : exam.teacher_name}\r\n                          </span>\r\n                          <div className=\"vr\" />\r\n                          <div className=\"d-flex flex-wrap gap-2\">\r\n                            {exam.classes?.map((item, idx) => (\r\n                              <span\r\n                                key={idx}\r\n                                className=\"badge bg-primary bg-opacity-10 text-primary\"\r\n                              >\r\n                                {item.name}\r\n                              </span>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"dropdown ms-2\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-primary\"\r\n                        type=\"button\"\r\n                        id={`dropdownMenuButton-${i}`}\r\n                        data-bs-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                      >\r\n                        <i className=\"bi bi-three-dots-vertical\"></i>\r\n                      </button>\r\n                      <ul\r\n                        className=\"dropdown-menu dropdown-menu-end shadow\"\r\n                        aria-labelledby={`dropdownMenuButton-${i}`}\r\n                      >\r\n                        <li>\r\n                          <button\r\n                            className=\"dropdown-item d-flex align-items-center\"\r\n                            onClick={() =>\r\n                              openNewTab(exam.name, exam.id, exam.token)\r\n                            }\r\n                          >\r\n                            <i className=\"bi bi-people me-2\"></i>\r\n                            Lihat\r\n                          </button>\r\n                        </li>\r\n                        <li>\r\n                          <button\r\n                            className=\"dropdown-item d-flex align-items-center\"\r\n                            data-bs-toggle=\"modal\"\r\n                            data-bs-target=\"#addexam\"\r\n                            onClick={() => setDetail(exam)}\r\n                          >\r\n                            <i className=\"bi bi-pencil-square me-2\"></i>\r\n                            Edit\r\n                          </button>\r\n                        </li>\r\n                        <li>\r\n                          <hr className=\"dropdown-divider\" />\r\n                        </li>\r\n                        <li>\r\n                          <button\r\n                            className=\"dropdown-item d-flex align-items-center text-danger\"\r\n                            disabled={isLoading}\r\n                            onClick={() => deleteHandler(exam.id)}\r\n                          >\r\n                            <i className=\"bi bi-folder-x me-2\"></i>\r\n                            Hapus\r\n                          </button>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"mb-2 d-flex align-items-center gap-2\">\r\n                    <div\r\n                      className=\"rounded-circle bg-primary bg-opacity-10 d-flex align-items-center justify-content-center\"\r\n                      style={{ width: 48, height: 48 }}\r\n                    >\r\n                      <i className=\"bi bi-folder-fill text-primary fs-5\"></i>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column gap-1\">\r\n                      {exam.banks.map((bank, idx) => (\r\n                        <span\r\n                          key={idx}\r\n                          className=\"fs-6 fw-bold text-secondary pointer\"\r\n                          title={bank.name}\r\n                        >\r\n                          {bank.type !== \"paket\"\r\n                            ? `${\r\n                                bank.name.length > 20\r\n                                  ? `${bank.name.slice(0, 20)}...`\r\n                                  : bank.name\r\n                              } - PG ${bank.pg} - Essay ${bank.essay}`\r\n                            : `${\r\n                                bank.name.length > 20\r\n                                  ? `${bank.name.slice(0, 20)}...`\r\n                                  : bank.name\r\n                              }`}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"mt-3\">\r\n                    <div className=\"d-flex flex-wrap gap-3\">\r\n                      <div className=\"d-flex flex-column\">\r\n                        <div className=\"text-muted small mb-1\">PG</div>\r\n                        <span className=\"badge bg-success px-3 py-2\">\r\n                          {exam.mc_score}%\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex flex-column\">\r\n                        <div className=\"text-muted small mb-1\">Essay</div>\r\n                        <span className=\"badge bg-success px-3 py-2\">\r\n                          {exam.essay_score}%\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex flex-column\">\r\n                        <div className=\"text-muted small mb-1\">Durasi</div>\r\n                        <span className=\"badge bg-info px-3 py-2\">\r\n                          {exam.duration}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex flex-column\">\r\n                        <div className=\"text-muted small mb-1\">Acak</div>\r\n                        {exam.isshuffle ? (\r\n                          <span className=\"badge bg-success px-3 py-2\">Ya</span>\r\n                        ) : (\r\n                          <span className=\"badge bg-danger px-3 py-2\">\r\n                            Tidak\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"d-flex flex-column\">\r\n                        <div className=\"text-muted small mb-1\">Status</div>\r\n                        <span\r\n                          className={`badge ${\r\n                            exam.isactive ? \"bg-success\" : \"bg-danger\"\r\n                          } px-3 py-2`}\r\n                        >\r\n                          {exam.isactive ? \"Aktif\" : \"Tidak Aktif\"}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"col-12\">\r\n            <div className=\"alert alert-info mb-0\">Data belum tersedia</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default TableExam;\r\n","import { useState } from \"react\";\r\nimport Form from \"./Form\";\r\nimport TableExam from \"./TableExam\";\r\n\r\nconst CbtExam = () => {\r\n  const [detail, setDetail] = useState(null);\r\n\r\n  const handleEdit = (exam) => {\r\n    setDetail(exam);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row g-2\">\r\n      <div className=\"col-12\">\r\n        <TableExam setDetail={handleEdit} />\r\n      </div>\r\n\r\n      <Form detail={detail} setDetail={setDetail} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CbtExam;\r\n"],"names":["Form","detail","setDetail","onSuccess","user","useSelector","state","auth","initialFormState","examid","teacher","id","bank","name","duration","classes","token","isshuffle","mc_score","essay_score","formData","setFormData","useState","data","teachers","useGetTeachersQuery","useGetClassesQuery","createExam","isSuccess","isLoading","isError","reset","useCreateExamMutation","teacherOptions","map","value","label","selectedTeacher","level","find","t","bankOptions","_a","type","classOptions","item","useEffect","banks","bankid","pg","essay","cls","prev","handleInput","e","field","target","resetForm","closeButton","document","querySelector","click","body","style","overflow","jsxRuntimeExports","jsx","className","tabIndex","children","onSubmit","preventDefault","includes","toast","error","c","promise","unwrap","then","res","message","loading","success","err","jsxs","Select","isClearable","isSearchable","placeholder","opt","options","onChange","selectedOption","isDisabled","isMulti","filter","some","b","selectedOptions","selectedBanks","_c","_b","htmlFor","hidden","onClick","disabled","TableExam","page","setPage","limit","setLimit","search","setSearch","rawData","useGetExamsQuery","exams","totalData","totalPages","console","log","deleteExam","useDeleteExamMutation","changeStatus","isSuccessStatus","isErrorStatus","resetStatus","useChangeStatusMutation","Table","length","exam","i","width","height","title","slice","copyTokenHandler","navigator","clipboard","writeText","teacher_name","idx","formatName","toUpperCase","replace","window","open","openNewTab","deleteHandler","confirm","isactive","CbtExam"],"mappings":"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"}