{"version":3,"file":"proxy-DiopHl8X.js","sources":["../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/motion-utils/dist/es/array.mjs","../../node_modules/motion-utils/dist/es/clamp.mjs","../../node_modules/motion-utils/dist/es/global-config.mjs","../../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/pipe.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/subscription-manager.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../../node_modules/motion-utils/dist/es/easing/back.mjs","../../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../../node_modules/motion-utils/dist/es/easing/circ.mjs","../../node_modules/motion-utils/dist/es/easing/ease.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../../node_modules/motion-dom/dist/es/frameloop/order.mjs","../../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../../node_modules/motion-dom/dist/es/animation/drivers/driver-frameloop.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../../node_modules/motion-dom/dist/es/value/types/test.mjs","../../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../../node_modules/motion-dom/dist/es/value/types/auto.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../../node_modules/motion-dom/dist/es/value/types/int.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/motion-dom/dist/es/value/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.count = 0;\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this.count++;\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n    }\n    teardown() {\n        this.notifyFinished();\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForced = false) {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForced);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n        /**\n         * TODO: In a breaking change, we should replace this with `.notifyCancel()`\n         */\n        this.animation.oncancel = () => this.notifyFinished();\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!motionValue ||\n        !motionValue.owner ||\n        !(motionValue.owner.current instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            else {\n                this.keyframeResolver?.cancel();\n            }\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        this.animation.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (target instanceof HTMLElement) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.9.1\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { transformPropOrder } from 'motion-dom';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { warnOnce } from 'motion-utils';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.9.2\", `Attempting to mix Motion versions ${nextValue.version} with 12.9.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["LayoutGroupContext","createContext","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","PresenceContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","clamp","min","max","v","MotionGlobalConfig","isNumericalString","test","isZeroValueString","memo","callback","result","noop","any","combineFunctions","a","b","pipe","transformers","reduce","progress","from","to","value","toFromDifference","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","c","numSubscriptions","length","i","getSize","clear","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","easeIn","easeOut","easeInOut","isBezierDefinition","Array","isArray","easingLookup","linear","easingDefinitionToFunction","definition","x1","y1","x2","y2","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","has","step","schedule","keepAlive","immediate","queue","cancel","delete","process","frameData","forEach","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","time","set","newTime","queueMicrotask","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","number","parse","parseFloat","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","_a","_b","getAnimatableNone","parsed","transformer","map","hueToRgb","q","mixImmediate","mixNumber","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","start","stop","generateLinearEasing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","current","prevT","springDefaults","granular","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","optionsOrVisualDuration","visualDuration","keyframes","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","interpolate","input","isClamp","ease","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","applyToOptions","generatorOptions","createGenerator","createGeneratorEasing","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","transition","WithPromise","count","updateFinished","finished","_finished","Promise","resolve","notifyFinished","then","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","currentTime","holdTime","playbackSpeed","motionValue","updatedAt","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","transformPropOrder","transformProps","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","top","_bbox","left","bottom","right","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","resume","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","animation","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","oncancel","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","setWithVelocity","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","owner","HTMLElement","transformTemplate","getProps","supportsBrowserAnimation","catch","pendingTimeline","_onReject","finally","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","getValueTransition","positionalKeys","testValueType","dimensionValueTypes","findDimensionValueType","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","distance","perspective","transformPerspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","microtask","cancelMicrotask","isDragging","isDragActive","setupGesture","elementOrSelector","elements","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tagName","tabIndex","hasAttribute","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","getVelocity","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","valueTypes","getValueAsType","LazyContext","strict","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","MotionContext","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","motionComponentSymbol","Symbol","for","isRefObject","ref","useMotionRef","visualState","externalRef","useCallback","instance","onMount","mount","unmount","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","isMounted","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","reactExports","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","children","jsx","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","id","scaleCorrectors","isForcedMotionValue","isMotionValue","translateAlias","numTransforms","buildHTMLStyles","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","transformBox","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","getValueState","resolveVariantFromProps","custom","resolveMotionValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","prevProps","newValues","liveStyle","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","toUpperCase","svgMotionConfig","createMotionComponentFactory","resolveVariant","isKeyframesTarget","setMotionValue","hasValue","addValue","addValueToWillChange","willChange","WillChange","newWillChange","getOptimisedAppearId","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","all","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","useId","usePresence","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","matches","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","motion"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247]}