{"version":3,"file":"TeacherScores-pXyTYE-W.js","sources":["../../src/page/teacher/scores/Subjects.jsx","../../src/page/teacher/scores/FormData.jsx","../../src/page/teacher/scores/Tabs.jsx","../../src/page/teacher/scores/Attitude.jsx","../../src/page/teacher/scores/Attendance.jsx","../../src/page/teacher/scores/Formative.jsx","../../src/page/teacher/scores/Summative.jsx","../../src/page/teacher/scores/Recap.jsx","../../src/page/teacher/scores/TeacherScores.jsx"],"sourcesContent":["import { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Subjects = ({ subjects, user }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const goToLink = (name, id) => {\r\n    const formattedName = name.replace(/\\s+/g, \"-\");\r\n    navigate(`/guru-penilaian?subject=${formattedName}&id=${id}`);\r\n  };\r\n\r\n  const container = {\r\n    hidden: { opacity: 0 },\r\n    show: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.1,\r\n      },\r\n    },\r\n  };\r\n\r\n  const item = {\r\n    hidden: { y: 20, opacity: 0 },\r\n    show: { y: 0, opacity: 1 },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"row g-3\"\r\n      variants={container}\r\n      initial=\"hidden\"\r\n      animate=\"show\"\r\n    >\r\n      {subjects.map((subject) => (\r\n        <motion.div\r\n          key={subject.id}\r\n          className=\"col-xl-3 col-lg-4 col-md-6\"\r\n          variants={item}\r\n        >\r\n          <div\r\n            className=\"card h-100 shadow-sm border-0 hover-card rounded-3 overflow-hidden\"\r\n            onClick={() => goToLink(subject.name, subject.id)}\r\n            style={{ cursor: \"pointer\", transition: \"all 0.3s ease\" }}\r\n          >\r\n            <div className=\"position-relative\">\r\n              <img\r\n                src={\r\n                  subject.cover\r\n                    ? `${window.location.origin}${subject.cover}`\r\n                    : `/logo.png`\r\n                }\r\n                alt={subject.name}\r\n                className=\"card-img-top\"\r\n                style={{\r\n                  height: \"250px\",\r\n                  objectFit: \"cover\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"card-body p-4\">\r\n              <h5 className=\"card-title mb-3 fw-bold text-primary\">\r\n                {subject.name}\r\n              </h5>\r\n              <div className=\"d-flex align-items-center text-muted mb-3\">\r\n                <i className=\"bi bi-mortarboard-fill me-2\"></i>\r\n                <span className=\"small\">{user?.name}</span>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-primary w-100 rounded-pill py-2\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  goToLink(subject.name, subject.id);\r\n                }}\r\n              >\r\n                <i className=\"bi bi-arrow-right-circle-fill me-2\"></i>\r\n                Kelola Penilaian\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      ))}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Subjects;\r\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport ReactSelect from \"react-select\";\nimport { useGetChaptersQuery } from \"../../../controller/api/lms/ApiChapter\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\n\nconst selectStyles = {\n  menuPortal: (base) => ({ ...base, zIndex: 10 }),\n  control: (base, state) => ({\n    ...base,\n    minHeight: \"38px\",\n    \"@media (max-width: 576px)\": {\n      minHeight: \"44px\",\n    },\n  }),\n  option: (base, state) => ({\n    ...base,\n    \"@media (max-width: 576px)\": {\n      padding: \"12px 16px\",\n    },\n  }),\n};\n\nconst months = [\n  \"Januari\",\n  \"Februari\",\n  \"Maret\",\n  \"April\",\n  \"Mei\",\n  \"Juni\",\n  \"Juli\",\n  \"Agustus\",\n  \"September\",\n  \"Oktober\",\n  \"November\",\n  \"Desember\",\n];\n\nconst semesters = [\n  { label: \"Semester 1\", value: 1 },\n  { label: \"Semester 2\", value: 2 },\n];\n\nconst FormData = ({ subject, id }) => {\n  const { data } = useGetChaptersQuery(id);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // Options untuk dropdown chapter\n  const chapterOptions = useMemo(\n    () =>\n      data?.map((chapter) => ({\n        value: chapter.chapter_id,\n        label: chapter.chapter_name,\n      })) || [],\n    [data]\n  );\n\n  // Ambil dari query url\n  const chapteridParam = searchParams.get(\"chapterid\");\n  const classidParam = searchParams.get(\"classid\");\n  const monthParam = searchParams.get(\"month\");\n  const semesterParam = searchParams.get(\"semester\");\n\n  // State\n  const [selectedChapter, setSelectedChapter] = useState(null);\n  const [selectedClass, setSelectedClass] = useState(null);\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [selectedSemester, setSelectedSemester] = useState(null);\n\n  // Class options tergantung chapter terpilih\n  const classOptions = useMemo(() => {\n    if (!selectedChapter && !chapteridParam) return [];\n    const chapterId = selectedChapter ? selectedChapter.value : chapteridParam;\n    const chapter = data?.find(\n      (c) => String(c.chapter_id) === String(chapterId)\n    );\n    return (\n      chapter?.class?.map((cls) => ({ value: cls.id, label: cls.name })) || []\n    );\n  }, [data, selectedChapter, chapteridParam]);\n\n  // Month options\n  const monthOptions = useMemo(\n    () => months.map((month) => ({ value: month, label: month })),\n    []\n  );\n\n  // Semester options\n  const semesterOptions = useMemo(\n    () =>\n      semesters.map((semester) => ({\n        value: semester.value,\n        label: semester.label,\n      })),\n    []\n  );\n\n  // Sinkronisasi state dengan query param setelah data/options siap\n  useEffect(() => {\n    // Set chapter\n    if (chapteridParam && chapterOptions.length > 0) {\n      const found = chapterOptions.find(\n        (opt) => String(opt.value) === String(chapteridParam)\n      );\n      setSelectedChapter(found || null);\n    }\n  }, [chapteridParam, chapterOptions]);\n\n  useEffect(() => {\n    // Set class\n    if (classidParam && classOptions.length > 0) {\n      const found = classOptions.find(\n        (opt) => String(opt.value) === String(classidParam)\n      );\n      setSelectedClass(found || null);\n    }\n  }, [classidParam, classOptions]);\n\n  useEffect(() => {\n    // Set month\n    if (monthParam && monthOptions.length > 0) {\n      const found = monthOptions.find((opt) => opt.value === monthParam);\n      setSelectedMonth(found || null);\n    }\n  }, [monthParam, monthOptions]);\n\n  useEffect(() => {\n    // Set semester\n    if (semesterParam && semesterOptions.length > 0) {\n      const found = semesterOptions.find(\n        (opt) => String(opt.value) === String(semesterParam)\n      );\n      setSelectedSemester(found || null);\n    }\n  }, [semesterParam, semesterOptions]);\n\n  // Handler untuk update query params\n  const updateQuery = (chapter, cls, month, semester) => {\n    const params = {};\n    // Pertahankan subject dan id\n    if (subject) params.subject = subject;\n    if (id) params.id = id;\n    if (chapter) params.chapterid = chapter.value;\n    if (cls) params.classid = cls.value;\n    if (month) params.month = month.value;\n    if (semester) params.semester = semester.value;\n    setSearchParams(params);\n  };\n\n  // Handler saat chapter berubah\n  const handleChapterChange = (option) => {\n    setSelectedChapter(option);\n    setSelectedClass(null); // reset kelas jika chapter berubah\n    updateQuery(option, null, selectedMonth, selectedSemester);\n  };\n\n  // Handler saat kelas berubah\n  const handleClassChange = (option) => {\n    setSelectedClass(option);\n    updateQuery(selectedChapter, option, selectedMonth, selectedSemester);\n  };\n\n  // Handler saat bulan berubah\n  const handleMonthChange = (option) => {\n    setSelectedMonth(option);\n    updateQuery(selectedChapter, selectedClass, option, selectedSemester);\n  };\n\n  // Handler saat semester berubah\n  const handleSemesterChange = (option) => {\n    setSelectedSemester(option);\n    updateQuery(selectedChapter, selectedClass, selectedMonth, option);\n  };\n\n  return (\n    <div className=\"form-data-container\">\n      {/* Desktop Layout - Horizontal */}\n      <div className=\"d-none d-lg-flex gap-3\">\n        <div className=\"flex-fill\">\n          <ReactSelect\n            options={chapterOptions}\n            value={selectedChapter}\n            onChange={handleChapterChange}\n            placeholder=\"Pilih Chapter\"\n            menuPortalTarget={document.body}\n            styles={selectStyles}\n          />\n        </div>\n        <div className=\"flex-fill\">\n          <ReactSelect\n            options={classOptions}\n            value={selectedClass}\n            onChange={handleClassChange}\n            placeholder=\"Pilih Kelas\"\n            isDisabled={!selectedChapter}\n            menuPortalTarget={document.body}\n            styles={selectStyles}\n          />\n        </div>\n        <div className=\"flex-fill\">\n          <ReactSelect\n            options={monthOptions}\n            value={selectedMonth}\n            onChange={handleMonthChange}\n            placeholder=\"Pilih Bulan\"\n            menuPortalTarget={document.body}\n            styles={selectStyles}\n          />\n        </div>\n        <div className=\"flex-fill\">\n          <ReactSelect\n            options={semesterOptions}\n            value={selectedSemester}\n            onChange={handleSemesterChange}\n            placeholder=\"Pilih Semester\"\n            menuPortalTarget={document.body}\n            styles={selectStyles}\n          />\n        </div>\n      </div>\n\n      {/* Tablet Layout - 2x2 Grid */}\n      <div className=\"d-none d-md-block d-lg-none\">\n        <div className=\"row g-3\">\n          <div className=\"col-md-6\">\n            <ReactSelect\n              options={chapterOptions}\n              value={selectedChapter}\n              onChange={handleChapterChange}\n              placeholder=\"Pilih Chapter\"\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n          <div className=\"col-md-6\">\n            <ReactSelect\n              options={classOptions}\n              value={selectedClass}\n              onChange={handleClassChange}\n              placeholder=\"Pilih Kelas\"\n              isDisabled={!selectedChapter}\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n          <div className=\"col-md-6\">\n            <ReactSelect\n              options={monthOptions}\n              value={selectedMonth}\n              onChange={handleMonthChange}\n              placeholder=\"Pilih Bulan\"\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n          <div className=\"col-md-6\">\n            <ReactSelect\n              options={semesterOptions}\n              value={selectedSemester}\n              onChange={handleSemesterChange}\n              placeholder=\"Pilih Semester\"\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile Layout - Vertical Stack */}\n      <div className=\"d-block d-md-none\">\n        <div className=\"d-flex flex-column gap-3\">\n          <div>\n            <label className=\"form-label fw-semibold mb-2\">Chapter</label>\n            <ReactSelect\n              options={chapterOptions}\n              value={selectedChapter}\n              onChange={handleChapterChange}\n              placeholder=\"Pilih Chapter\"\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n          <div>\n            <label className=\"form-label fw-semibold mb-2\">Kelas</label>\n            <ReactSelect\n              options={classOptions}\n              value={selectedClass}\n              onChange={handleClassChange}\n              placeholder=\"Pilih Kelas\"\n              isDisabled={!selectedChapter}\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n          <div>\n            <label className=\"form-label fw-semibold mb-2\">Bulan</label>\n            <ReactSelect\n              options={monthOptions}\n              value={selectedMonth}\n              onChange={handleMonthChange}\n              placeholder=\"Pilih Bulan\"\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n          <div>\n            <label className=\"form-label fw-semibold mb-2\">Semester</label>\n            <ReactSelect\n              options={semesterOptions}\n              value={selectedSemester}\n              onChange={handleSemesterChange}\n              placeholder=\"Pilih Semester\"\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormData;\n","import React from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport \"./Scores.css\";\r\n\r\nconst Tabs = ({ tab, setTab }) => {\r\n  const [searchParams] = useSearchParams();\r\n  const subjectid = searchParams.get(\"id\");\r\n  const chapterid = searchParams.get(\"chapterid\");\r\n  const classid = searchParams.get(\"classid\");\r\n  const month = searchParams.get(\"month\");\r\n  const semester = searchParams.get(\"semester\");\r\n\r\n  const handleTabClick = (type) => {\r\n    setTab(type);\r\n  };\r\n\r\n  // Check if all required parameters are present\r\n  const hasRequiredParams =\r\n    classid && subjectid && chapterid && month && semester;\r\n\r\n  if (!hasRequiredParams) {\r\n    return (\r\n      <div className=\"alert alert-warning\">\r\n        <i className=\"bi bi-exclamation-triangle me-2\"></i>\r\n        <span className=\"d-none d-sm-inline\">\r\n          Pilih chapter, kelas, semester, dan bulan terlebih dahulu untuk\r\n          melihat data penilaian.\r\n        </span>\r\n        <span className=\"d-sm-none\">\r\n          Pilih chapter, kelas, semester, dan bulan terlebih dahulu.\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column gap-3\">\r\n      {/* Desktop Tabs */}\r\n      <ul className=\"nav nav-tabs justify-content-center d-none d-md-flex\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link pointer ${\r\n              tab === \"attendance\" ? \"active\" : \"\"\r\n            }`}\r\n            aria-current=\"page\"\r\n            onClick={() => handleTabClick(\"attendance\")}\r\n          >\r\n            Kehadiran\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link pointer ${tab === \"attitude\" ? \"active\" : \"\"}`}\r\n            aria-current=\"page\"\r\n            onClick={() => handleTabClick(\"attitude\")}\r\n          >\r\n            Sikap\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link pointer ${\r\n              tab === \"formative\" ? \"active\" : \"\"\r\n            }`}\r\n            aria-current=\"page\"\r\n            onClick={() => handleTabClick(\"formative\")}\r\n          >\r\n            Formatif\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link pointer ${\r\n              tab === \"summative\" ? \"active\" : \"\"\r\n            }`}\r\n            aria-current=\"page\"\r\n            onClick={() => handleTabClick(\"summative\")}\r\n          >\r\n            Sumatif\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link pointer ${tab === \"recap\" ? \"active\" : \"\"}`}\r\n            aria-current=\"page\"\r\n            onClick={() => handleTabClick(\"recap\")}\r\n          >\r\n            Rekapitulasi\r\n          </a>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* Mobile Tabs - Dropdown/Select */}\r\n      <div className=\"d-md-none\">\r\n        <select\r\n          className=\"form-select form-select-lg\"\r\n          value={tab}\r\n          onChange={(e) => handleTabClick(e.target.value)}\r\n          aria-label=\"Pilih jenis penilaian\"\r\n        >\r\n          <option value=\"attendance\">Kehadiran</option>\r\n          <option value=\"attitude\">Sikap</option>\r\n          <option value=\"formative\">Formatif</option>\r\n          <option value=\"summative\">Sumatif</option>\r\n          <option value=\"recap\">Rekapitulasi</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Mobile Tabs - Scrollable Horizontal */}\r\n      <div className=\"d-none d-sm-block d-md-none\">\r\n        <div className=\"nav-scroll-container\">\r\n          <ul className=\"nav nav-tabs nav-tabs-scroll\">\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className={`nav-link pointer ${\r\n                  tab === \"attendance\" ? \"active\" : \"\"\r\n                }`}\r\n                aria-current=\"page\"\r\n                onClick={() => handleTabClick(\"attendance\")}\r\n              >\r\n                Kehadiran\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className={`nav-link pointer ${\r\n                  tab === \"attitude\" ? \"active\" : \"\"\r\n                }`}\r\n                aria-current=\"page\"\r\n                onClick={() => handleTabClick(\"attitude\")}\r\n              >\r\n                Sikap\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className={`nav-link pointer ${\r\n                  tab === \"formative\" ? \"active\" : \"\"\r\n                }`}\r\n                aria-current=\"page\"\r\n                onClick={() => handleTabClick(\"formative\")}\r\n              >\r\n                Formatif\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className={`nav-link pointer ${\r\n                  tab === \"summative\" ? \"active\" : \"\"\r\n                }`}\r\n                aria-current=\"page\"\r\n                onClick={() => handleTabClick(\"summative\")}\r\n              >\r\n                Sumatif\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className={`nav-link pointer ${\r\n                  tab === \"recap\" ? \"active\" : \"\"\r\n                }`}\r\n                aria-current=\"page\"\r\n                onClick={() => handleTabClick(\"recap\")}\r\n              >\r\n                Rekapitulasi\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  useGetAttitudeQuery,\r\n  useUpsertAttitudeMutation,\r\n} from \"../../../controller/api/lms/ApiScore\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst Attitude = ({\r\n  data,\r\n  isLoading,\r\n  page,\r\n  setPage,\r\n  limit,\r\n  setLimit,\r\n  search,\r\n  setSearch,\r\n  totalData,\r\n  totalPages,\r\n}) => {\r\n  const [attitudeScores, setAttitudeScores] = useState({});\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const subjectid = searchParams.get(\"id\");\r\n  const chapterid = searchParams.get(\"chapterid\");\r\n  const classid = searchParams.get(\"classid\");\r\n  const month = searchParams.get(\"month\");\r\n  const semester = searchParams.get(\"semester\");\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const teacher_id = user?.id;\r\n\r\n  const { data: attitudeData, refetch } = useGetAttitudeQuery(\r\n    { classid, subjectid, chapterid, month, semester },\r\n    {\r\n      skip: !classid || !subjectid || !chapterid || !month || !semester,\r\n      refetchOnMountOrArgChange: true,\r\n    }\r\n  );\r\n\r\n  // Reset scores when parameters change\r\n  useEffect(() => {\r\n    setAttitudeScores({});\r\n  }, [classid, subjectid, chapterid, month, semester]);\r\n\r\n  useEffect(() => {\r\n    if (attitudeData && Array.isArray(attitudeData)) {\r\n      const mapped = {};\r\n      for (const row of attitudeData) {\r\n        mapped[row.student_id] = {\r\n          kinerja:\r\n            row.kinerja !== null && row.kinerja !== undefined\r\n              ? row.kinerja\r\n              : \"\",\r\n          kedisiplinan:\r\n            row.kedisiplinan !== null && row.kedisiplinan !== undefined\r\n              ? row.kedisiplinan\r\n              : \"\",\r\n          keaktifan:\r\n            row.keaktifan !== null && row.keaktifan !== undefined\r\n              ? row.keaktifan\r\n              : \"\",\r\n          percayaDiri:\r\n            row.percaya_diri !== null && row.percaya_diri !== undefined\r\n              ? row.percaya_diri\r\n              : \"\",\r\n          catatan: row.catatan_guru ?? \"\",\r\n        };\r\n      }\r\n      if (Object.keys(mapped).length > 0) setAttitudeScores(mapped);\r\n    }\r\n  }, [attitudeData]);\r\n\r\n  const [\r\n    upsertAttitude,\r\n    { isLoading: isSaving, isSuccess, data: upsertData, isError, error },\r\n  ] = useUpsertAttitudeMutation();\r\n\r\n  const handleScoreChange = (studentId, field, value) => {\r\n    setAttitudeScores((prev) => ({\r\n      ...prev,\r\n      [studentId]: {\r\n        ...prev[studentId],\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSave = async (student) => {\r\n    const studentScores = attitudeScores[student.student] || {};\r\n    await upsertAttitude({\r\n      student_id: student.student,\r\n      subject_id: Number(subjectid),\r\n      class_id: Number(classid),\r\n      chapter_id: Number(chapterid),\r\n      teacher_id,\r\n      month,\r\n      semester,\r\n      kinerja: studentScores.kinerja ? Number(studentScores.kinerja) : null,\r\n      kedisiplinan: studentScores.kedisiplinan\r\n        ? Number(studentScores.kedisiplinan)\r\n        : null,\r\n      keaktifan: studentScores.keaktifan\r\n        ? Number(studentScores.keaktifan)\r\n        : null,\r\n      percaya_diri: studentScores.percayaDiri\r\n        ? Number(studentScores.percayaDiri)\r\n        : null,\r\n      catatan_guru: studentScores.catatan || null,\r\n    });\r\n  };\r\n\r\n  const calculateAverage = (studentId) => {\r\n    const scores = attitudeScores[studentId];\r\n    if (!scores) return 0;\r\n\r\n    const values = [\r\n      scores.kinerja,\r\n      scores.kedisiplinan,\r\n      scores.keaktifan,\r\n      scores.percayaDiri,\r\n    ].filter((score) => score !== \"\" && score !== null && score !== undefined);\r\n\r\n    if (values.length === 0) return 0;\r\n    return (\r\n      values.reduce((sum, score) => sum + Number(score), 0) / values.length\r\n    ).toFixed(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      toast.success(upsertData.message);\r\n      // Refetch data after successful save to update the UI\r\n      refetch();\r\n    }\r\n\r\n    if (isError) {\r\n      toast.error(error.data.message);\r\n    }\r\n  }, [isSuccess, upsertData, isError, error, refetch]);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h5 className=\"card-title mb-0\">Penilaian Sikap</h5>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"table-responsive\">\r\n          <Table\r\n            isLoading={isLoading}\r\n            totalData={totalData}\r\n            totalPages={totalPages}\r\n            page={page}\r\n            limit={limit}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            setSearch={setSearch}\r\n          >\r\n            <table className=\"table table-bordered table-striped table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-center align-middle\">No</th>\r\n                  <th className=\"text-center align-middle\">NIS</th>\r\n                  <th className=\"text-center align-middle\">Nama Siswa</th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ backgroundColor: \"#fff3cd\" }}\r\n                  >\r\n                    Kinerja\r\n                  </th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ backgroundColor: \"#fff3cd\" }}\r\n                  >\r\n                    Kedisiplinan\r\n                  </th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ backgroundColor: \"#fff3cd\" }}\r\n                  >\r\n                    Keaktifan\r\n                  </th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ backgroundColor: \"#fff3cd\" }}\r\n                  >\r\n                    Percaya Diri\r\n                  </th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ backgroundColor: \"#d1ecf1\" }}\r\n                  >\r\n                    Catatan\r\n                  </th>\r\n                  <th className=\"text-center align-middle\">Rata-rata</th>\r\n                  <th className=\"text-center align-middle\">Aksi</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data?.students?.map((student, index) => (\r\n                  <tr key={student.id}>\r\n                    <td className=\"text-center align-middle\">\r\n                      {(page - 1) * limit + index + 1}\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">{student.nis}</td>\r\n                    <td className=\"align-middle\">{student.student_name}</td>\r\n                    <td className=\"text-center align-middle\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control form-control-sm text-center\"\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                        value={attitudeScores[student.student]?.kinerja ?? \"\"}\r\n                        onChange={(e) =>\r\n                          handleScoreChange(\r\n                            student.student,\r\n                            \"kinerja\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        placeholder=\"0-100\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control form-control-sm text-center\"\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                        value={\r\n                          attitudeScores[student.student]?.kedisiplinan ?? \"\"\r\n                        }\r\n                        onChange={(e) =>\r\n                          handleScoreChange(\r\n                            student.student,\r\n                            \"kedisiplinan\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        placeholder=\"0-100\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control form-control-sm text-center\"\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                        value={attitudeScores[student.student]?.keaktifan ?? \"\"}\r\n                        onChange={(e) =>\r\n                          handleScoreChange(\r\n                            student.student,\r\n                            \"keaktifan\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        placeholder=\"0-100\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control form-control-sm text-center\"\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                        value={\r\n                          attitudeScores[student.student]?.percayaDiri ?? \"\"\r\n                        }\r\n                        onChange={(e) =>\r\n                          handleScoreChange(\r\n                            student.student,\r\n                            \"percayaDiri\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        placeholder=\"0-100\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"align-middle\">\r\n                      <textarea\r\n                        className=\"form-control form-control-sm\"\r\n                        rows=\"2\"\r\n                        value={attitudeScores[student.student]?.catatan || \"\"}\r\n                        onChange={(e) =>\r\n                          handleScoreChange(\r\n                            student.student,\r\n                            \"catatan\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        placeholder=\"Catatan guru...\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">\r\n                      <span className=\"fw-bold text-primary\">\r\n                        {calculateAverage(student.student)}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-primary\"\r\n                        onClick={() => handleSave(student)}\r\n                        disabled={isSaving}\r\n                      >\r\n                        <i className=\"bi bi-check\"></i> Simpan\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Attitude;\r\n","import React, { useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useGetPresensiSummaryQuery } from \"../../../controller/api/lms/ApiPresensi\";\r\nimport LoadingScreen from \"../../../components/loader/LoadingScreen\";\r\n\r\nconst Attendance = ({\r\n  data,\r\n  isLoading,\r\n  page,\r\n  setPage,\r\n  limit,\r\n  setLimit,\r\n  search,\r\n  setSearch,\r\n  totalData,\r\n  totalPages,\r\n}) => {\r\n  const [searchParams] = useSearchParams();\r\n  const classid = searchParams.get(\"classid\");\r\n  const subjectid = searchParams.get(\"id\");\r\n  const monthName = searchParams.get(\"month\");\r\n\r\n  // Convert month name to month number\r\n  const months = [\r\n    \"Januari\",\r\n    \"Februari\",\r\n    \"Maret\",\r\n    \"April\",\r\n    \"Mei\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"Agustus\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Desember\",\r\n  ];\r\n\r\n  const selectedMonth = monthName\r\n    ? months.indexOf(monthName) + 1\r\n    : new Date().getMonth() + 1;\r\n  const selectedYear = new Date().getFullYear();\r\n\r\n  const { data: summaryData, isLoading: summaryLoading } =\r\n    useGetPresensiSummaryQuery(\r\n      {\r\n        classid,\r\n        subjectid,\r\n        month: selectedMonth,\r\n        year: selectedYear,\r\n      },\r\n      { skip: !classid || !subjectid }\r\n    );\r\n\r\n  const [attendanceScores, setAttendanceScores] = useState({});\r\n\r\n  const handleScoreChange = (studentId, value) => {\r\n    setAttendanceScores((prev) => ({\r\n      ...prev,\r\n      [studentId]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSave = (student) => {\r\n    const studentScore = attendanceScores[student.studentid] || \"\";\r\n    console.log(\"Menyimpan nilai kehadiran untuk siswa:\", {\r\n      studentId: student.studentid,\r\n      studentName: student.student_name,\r\n      score: studentScore,\r\n    });\r\n  };\r\n\r\n  if (!classid || !subjectid) {\r\n    return (\r\n      <div className=\"text-center py-5 empty-state\">\r\n        <div className=\"mb-3\">\r\n          <i className=\"bi bi-calendar-check display-1 text-muted\"></i>\r\n        </div>\r\n        <h5 className=\"fw-bold text-muted mb-2\">Pilih Data Presensi</h5>\r\n        <p className=\"text-muted mb-0\">\r\n          Silakan pilih mata pelajaran dan kelas terlebih dahulu\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (summaryLoading) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header bg-primary text-white\">\r\n        <h5 className=\"card-title mb-0\">\r\n          <i className=\"bi bi-calendar-month me-2\"></i>\r\n          Penilaian Kehadiran Bulanan\r\n        </h5>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {summaryData && summaryData.length > 0 ? (\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover table-striped\">\r\n              <thead className=\"table-dark\">\r\n                <tr>\r\n                  <th className=\"text-center\" style={{ width: \"5%\" }}>\r\n                    No\r\n                  </th>\r\n                  <th style={{ width: \"10%\" }}>NIS</th>\r\n                  <th style={{ width: \"25%\" }}>Nama Siswa</th>\r\n                  <th className=\"text-center\" style={{ width: \"10%\" }}>\r\n                    <i className=\"bi bi-check-circle text-success me-1\"></i>\r\n                    Hadir\r\n                  </th>\r\n                  <th className=\"text-center\" style={{ width: \"10%\" }}>\r\n                    <i className=\"bi bi-heart-pulse text-primary me-1\"></i>\r\n                    Sakit\r\n                  </th>\r\n                  <th className=\"text-center\" style={{ width: \"10%\" }}>\r\n                    <i className=\"bi bi-envelope-paper text-info me-1\"></i>\r\n                    Izin\r\n                  </th>\r\n                  <th className=\"text-center\" style={{ width: \"10%\" }}>\r\n                    <i className=\"bi bi-x-circle text-danger me-1\"></i>\r\n                    Alpa\r\n                  </th>\r\n                  <th className=\"text-center\" style={{ width: \"10%\" }}>\r\n                    <i className=\"bi bi-percent text-warning me-1\"></i>\r\n                    Kehadiran\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {summaryData.map((student, index) => {\r\n                  const totalDays =\r\n                    student.hadir + student.sakit + student.izin + student.alpa;\r\n                  const attendanceRate =\r\n                    totalDays > 0\r\n                      ? ((student.hadir / totalDays) * 100).toFixed(1)\r\n                      : 0;\r\n\r\n                  return (\r\n                    <tr key={student.studentid} className=\"attendance-change\">\r\n                      <td className=\"text-center align-middle\">{index + 1}</td>\r\n                      <td className=\"align-middle\">{student.nis}</td>\r\n                      <td className=\"align-middle fw-bold\">\r\n                        {student.student_name}\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge bg-success fs-6\">\r\n                          {student.hadir}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge bg-primary fs-6\">\r\n                          {student.sakit}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge bg-info fs-6\">\r\n                          {student.izin}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge bg-danger fs-6\">\r\n                          {student.alpa}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span\r\n                          className={`badge fs-6 ${\r\n                            attendanceRate >= 90\r\n                              ? \"bg-success\"\r\n                              : attendanceRate >= 80\r\n                              ? \"bg-warning\"\r\n                              : \"bg-danger\"\r\n                          }`}\r\n                        >\r\n                          {attendanceRate}%\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center py-5 empty-state\">\r\n            <div className=\"mb-3\">\r\n              <i className=\"bi bi-calendar-x display-1 text-muted\"></i>\r\n            </div>\r\n            <h5 className=\"fw-bold text-muted mb-2\">Data Tidak Tersedia</h5>\r\n            <p className=\"text-muted mb-0\">\r\n              Tidak ada data presensi untuk periode yang dipilih\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Attendance;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  useGetFormativeQuery,\r\n  useUpsertFormativeMutation,\r\n} from \"../../../controller/api/lms/ApiScore\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst Formative = ({\r\n  data,\r\n  isLoading,\r\n  page,\r\n  setPage,\r\n  limit,\r\n  setLimit,\r\n  search,\r\n  setSearch,\r\n  totalData,\r\n  totalPages,\r\n}) => {\r\n  const [formativeScores, setFormativeScores] = useState({});\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const subjectid = searchParams.get(\"id\");\r\n  const chapterid = searchParams.get(\"chapterid\");\r\n  const classid = searchParams.get(\"classid\");\r\n  const month = searchParams.get(\"month\");\r\n  const semester = searchParams.get(\"semester\");\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const { data: formativeData, refetch } = useGetFormativeQuery(\r\n    { classid, subjectid, chapterid, month, semester },\r\n    {\r\n      skip: !classid || !subjectid || !chapterid || !month || !semester,\r\n      refetchOnMountOrArgChange: true,\r\n    }\r\n  );\r\n\r\n  // Reset scores when parameters change\r\n  useEffect(() => {\r\n    setFormativeScores({});\r\n  }, [classid, subjectid, chapterid, month, semester]);\r\n\r\n  useEffect(() => {\r\n    if (formativeData && Array.isArray(formativeData)) {\r\n      const mapped = {};\r\n      for (const row of formativeData) {\r\n        mapped[row.student_id] = {\r\n          tugas1: row.f_1 !== null && row.f_1 !== undefined ? row.f_1 : \"\",\r\n          tugas2: row.f_2 !== null && row.f_2 !== undefined ? row.f_2 : \"\",\r\n          tugas3: row.f_3 !== null && row.f_3 !== undefined ? row.f_3 : \"\",\r\n          tugas4: row.f_4 !== null && row.f_4 !== undefined ? row.f_4 : \"\",\r\n          tugas5: row.f_5 !== null && row.f_5 !== undefined ? row.f_5 : \"\",\r\n          tugas6: row.f_6 !== null && row.f_6 !== undefined ? row.f_6 : \"\",\r\n          tugas7: row.f_7 !== null && row.f_7 !== undefined ? row.f_7 : \"\",\r\n          tugas8: row.f_8 !== null && row.f_8 !== undefined ? row.f_8 : \"\",\r\n        };\r\n      }\r\n      if (Object.keys(mapped).length > 0) setFormativeScores(mapped);\r\n    }\r\n  }, [formativeData]);\r\n\r\n  const [\r\n    upsertFormative,\r\n    { isLoading: isSaving, isSuccess, data: upsertData, isError, error },\r\n  ] = useUpsertFormativeMutation();\r\n\r\n  const handleScoreChange = (studentId, taskNumber, value) => {\r\n    setFormativeScores((prev) => ({\r\n      ...prev,\r\n      [studentId]: {\r\n        ...prev[studentId],\r\n        [`tugas${taskNumber}`]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSave = async (student) => {\r\n    const s = formativeScores[student.student] || {};\r\n    await upsertFormative({\r\n      student_id: student.student,\r\n      subject_id: Number(subjectid),\r\n      class_id: Number(classid),\r\n      chapter_id: Number(chapterid),\r\n      month,\r\n      semester,\r\n      F_1: s.tugas1 ? Number(s.tugas1) : null,\r\n      F_2: s.tugas2 ? Number(s.tugas2) : null,\r\n      F_3: s.tugas3 ? Number(s.tugas3) : null,\r\n      F_4: s.tugas4 ? Number(s.tugas4) : null,\r\n      F_5: s.tugas5 ? Number(s.tugas5) : null,\r\n      F_6: s.tugas6 ? Number(s.tugas6) : null,\r\n      F_7: s.tugas7 ? Number(s.tugas7) : null,\r\n      F_8: s.tugas8 ? Number(s.tugas8) : null,\r\n    });\r\n  };\r\n\r\n  const calculateAverage = (studentId) => {\r\n    const scores = formativeScores[studentId];\r\n    if (!scores) return 0;\r\n\r\n    const values = [];\r\n    for (let i = 1; i <= 8; i++) {\r\n      const score = scores[`tugas${i}`];\r\n      if (score !== \"\" && score !== null && score !== undefined) {\r\n        values.push(Number(score));\r\n      }\r\n    }\r\n\r\n    if (values.length === 0) return 0;\r\n    return (\r\n      values.reduce((sum, score) => sum + score, 0) / values.length\r\n    ).toFixed(1);\r\n  };\r\n\r\n  const renderTaskColumns = () => {\r\n    const columns = [];\r\n    for (let i = 1; i <= 8; i++) {\r\n      columns.push(\r\n        <th\r\n          key={i}\r\n          className=\"text-center align-middle\"\r\n          style={{ backgroundColor: \"#dc3545\", color: \"white\" }}\r\n        >\r\n          f_{i}\r\n        </th>\r\n      );\r\n    }\r\n    return columns;\r\n  };\r\n\r\n  const renderTaskInputs = (student) => {\r\n    const inputs = [];\r\n    for (let i = 1; i <= 8; i++) {\r\n      inputs.push(\r\n        <td key={i} className=\"text-center align-middle\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm text-center\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={formativeScores[student.student]?.[`tugas${i}`] ?? \"\"}\r\n            onChange={(e) =>\r\n              handleScoreChange(student.student, i, e.target.value)\r\n            }\r\n            placeholder=\"0-100\"\r\n          />\r\n        </td>\r\n      );\r\n    }\r\n    return inputs;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      toast.success(upsertData.message);\r\n      // Refetch data after successful save to update the UI\r\n      refetch();\r\n    }\r\n\r\n    if (isError) {\r\n      toast.error(error.data.message);\r\n    }\r\n  }, [isSuccess, upsertData, isError, error, refetch]);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h5 className=\"card-title mb-0\">Penilaian Formatif</h5>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"table-responsive\">\r\n          <Table\r\n            isLoading={isLoading}\r\n            totalData={totalData}\r\n            totalPages={totalPages}\r\n            page={page}\r\n            limit={limit}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            setSearch={setSearch}\r\n          >\r\n            <table className=\"table table-bordered table-striped table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-center align-middle\">No</th>\r\n                  <th className=\"text-center align-middle\">NIS</th>\r\n                  <th className=\"text-center align-middle\">Nama Siswa</th>\r\n                  {renderTaskColumns()}\r\n                  <th className=\"text-center align-middle\">Rata2</th>\r\n                  <th className=\"text-center align-middle\">Aksi</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data?.students?.map((student, index) => (\r\n                  <tr key={student.id}>\r\n                    <td className=\"text-center align-middle\">\r\n                      {(page - 1) * limit + index + 1}\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">{student.nis}</td>\r\n                    <td className=\"align-middle\">{student.student_name}</td>\r\n                    {renderTaskInputs(student)}\r\n                    <td className=\"text-center align-middle\">\r\n                      <span className=\"fw-bold text-primary\">\r\n                        {calculateAverage(student.student)}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-primary\"\r\n                        onClick={() => handleSave(student)}\r\n                        disabled={isSaving}\r\n                      >\r\n                        <i className=\"bi bi-check\"></i> Simpan\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Formative;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  useGetSummativeQuery,\r\n  useUpsertSummativeMutation,\r\n} from \"../../../controller/api/lms/ApiScore\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst Summative = ({\r\n  data,\r\n  isLoading,\r\n  page,\r\n  setPage,\r\n  limit,\r\n  setLimit,\r\n  search,\r\n  setSearch,\r\n  totalData,\r\n  totalPages,\r\n}) => {\r\n  const [summativeScores, setSummativeScores] = useState({});\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const subjectid = searchParams.get(\"id\");\r\n  const chapterid = searchParams.get(\"chapterid\");\r\n  const classid = searchParams.get(\"classid\");\r\n  const month = searchParams.get(\"month\");\r\n  const semester = searchParams.get(\"semester\");\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const { data: summativeData, refetch } = useGetSummativeQuery(\r\n    { classid, subjectid, chapterid, month, semester },\r\n    {\r\n      skip: !classid || !subjectid || !chapterid || !month || !semester,\r\n      refetchOnMountOrArgChange: true,\r\n    }\r\n  );\r\n\r\n  // Reset scores when parameters change\r\n  useEffect(() => {\r\n    setSummativeScores({});\r\n  }, [classid, subjectid, chapterid, month, semester]);\r\n\r\n  useEffect(() => {\r\n    if (summativeData && Array.isArray(summativeData)) {\r\n      const mapped = {};\r\n      for (const row of summativeData) {\r\n        mapped[row.student_id] = {\r\n          sumatif1: row.s_1 !== null && row.s_1 !== undefined ? row.s_1 : \"\",\r\n          sumatif2: row.s_2 !== null && row.s_2 !== undefined ? row.s_2 : \"\",\r\n          sumatif3: row.s_3 !== null && row.s_3 !== undefined ? row.s_3 : \"\",\r\n          sumatif4: row.s_4 !== null && row.s_4 !== undefined ? row.s_4 : \"\",\r\n          sumatif5: row.s_5 !== null && row.s_5 !== undefined ? row.s_5 : \"\",\r\n          sumatif6: row.s_6 !== null && row.s_6 !== undefined ? row.s_6 : \"\",\r\n          sumatif7: row.s_7 !== null && row.s_7 !== undefined ? row.s_7 : \"\",\r\n          sumatif8: row.s_8 !== null && row.s_8 !== undefined ? row.s_8 : \"\",\r\n        };\r\n      }\r\n      if (Object.keys(mapped).length > 0) setSummativeScores(mapped);\r\n    }\r\n  }, [summativeData]);\r\n\r\n  const [\r\n    upsertSummative,\r\n    { isLoading: isSaving, isSuccess, data: upsertData, isError, error },\r\n  ] = useUpsertSummativeMutation();\r\n\r\n  const handleScoreChange = (studentId, taskNumber, value) => {\r\n    setSummativeScores((prev) => ({\r\n      ...prev,\r\n      [studentId]: {\r\n        ...prev[studentId],\r\n        [`sumatif${taskNumber}`]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSave = async (student) => {\r\n    const s = summativeScores[student.student] || {};\r\n    await upsertSummative({\r\n      student_id: student.student,\r\n      subject_id: Number(subjectid),\r\n      class_id: Number(classid),\r\n      chapter_id: Number(chapterid),\r\n      month,\r\n      semester,\r\n      S_1: s.sumatif1 ? Number(s.sumatif1) : null,\r\n      S_2: s.sumatif2 ? Number(s.sumatif2) : null,\r\n      S_3: s.sumatif3 ? Number(s.sumatif3) : null,\r\n      S_4: s.sumatif4 ? Number(s.sumatif4) : null,\r\n      S_5: s.sumatif5 ? Number(s.sumatif5) : null,\r\n      S_6: s.sumatif6 ? Number(s.sumatif6) : null,\r\n      S_7: s.sumatif7 ? Number(s.sumatif7) : null,\r\n      S_8: s.sumatif8 ? Number(s.sumatif8) : null,\r\n    });\r\n  };\r\n\r\n  const calculateAverage = (studentId) => {\r\n    const scores = summativeScores[studentId];\r\n    if (!scores) return 0;\r\n\r\n    const values = [];\r\n    for (let i = 1; i <= 8; i++) {\r\n      const score = scores[`sumatif${i}`];\r\n      if (score !== \"\" && score !== null && score !== undefined) {\r\n        values.push(Number(score));\r\n      }\r\n    }\r\n\r\n    if (values.length === 0) return 0;\r\n    return (\r\n      values.reduce((sum, score) => sum + score, 0) / values.length\r\n    ).toFixed(1);\r\n  };\r\n\r\n  const renderSumatifColumns = () => {\r\n    const columns = [];\r\n    for (let i = 1; i <= 8; i++) {\r\n      columns.push(\r\n        <th\r\n          key={i}\r\n          className=\"text-center align-middle\"\r\n          style={{ backgroundColor: \"#fff3cd\" }}\r\n        >\r\n          <div>s_{i}</div>\r\n        </th>\r\n      );\r\n    }\r\n    return columns;\r\n  };\r\n\r\n  const renderSumatifInputs = (student) => {\r\n    const inputs = [];\r\n    for (let i = 1; i <= 8; i++) {\r\n      inputs.push(\r\n        <td key={i} className=\"text-center align-middle\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm text-center\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={summativeScores[student.student]?.[`sumatif${i}`] ?? \"\"}\r\n            onChange={(e) =>\r\n              handleScoreChange(student.student, i, e.target.value)\r\n            }\r\n            placeholder=\"0-100\"\r\n          />\r\n        </td>\r\n      );\r\n    }\r\n    return inputs;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      toast.success(upsertData.message);\r\n      // Refetch data after successful save to update the UI\r\n      refetch();\r\n    }\r\n\r\n    if (isError) {\r\n      toast.error(error.data.message);\r\n    }\r\n  }, [isSuccess, upsertData, isError, error, refetch]);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h5 className=\"card-title mb-0\">Penilaian Sumatif</h5>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"table-responsive\">\r\n          <Table\r\n            isLoading={isLoading}\r\n            totalData={totalData}\r\n            totalPages={totalPages}\r\n            page={page}\r\n            limit={limit}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            setSearch={setSearch}\r\n          >\r\n            <table className=\"table table-bordered table-striped table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-center align-middle\">No</th>\r\n                  <th className=\"text-center align-middle\">NIS</th>\r\n                  <th className=\"text-center align-middle\">Nama Siswa</th>\r\n                  {renderSumatifColumns()}\r\n                  <th className=\"text-center align-middle\">Rata2</th>\r\n                  <th className=\"text-center align-middle\">Aksi</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data?.students?.map((student, index) => (\r\n                  <tr key={student.id}>\r\n                    <td className=\"text-center align-middle\">\r\n                      {(page - 1) * limit + index + 1}\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">{student.nis}</td>\r\n                    <td className=\"align-middle\">{student.student_name}</td>\r\n                    {renderSumatifInputs(student)}\r\n                    <td className=\"text-center align-middle\">\r\n                      <span className=\"fw-bold text-primary\">\r\n                        {calculateAverage(student.student)}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-primary\"\r\n                        onClick={() => handleSave(student)}\r\n                        disabled={isSaving}\r\n                      >\r\n                        <i className=\"bi bi-check\"></i> Simpan\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summative;\r\n","import React from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useGetRecapQuery } from \"../../../controller/api/lms/ApiScore\";\r\nimport Table from \"../../../components/table/Table\";\r\n\r\nconst Recap = ({\r\n  data,\r\n  isLoading: studentsLoading,\r\n  page,\r\n  setPage,\r\n  limit,\r\n  setLimit,\r\n  search,\r\n  setSearch,\r\n  totalData,\r\n  totalPages,\r\n}) => {\r\n  const [searchParams] = useSearchParams();\r\n  const classid = searchParams.get(\"classid\");\r\n  const subjectid = searchParams.get(\"id\");\r\n  const chapterid = searchParams.get(\"chapterid\");\r\n  const month = searchParams.get(\"month\");\r\n  const semester = searchParams.get(\"semester\");\r\n\r\n  // Fetch recap data\r\n  const { data: recapData, isLoading: recapLoading } = useGetRecapQuery(\r\n    {\r\n      classid,\r\n      subjectid,\r\n      chapterid,\r\n      month,\r\n      semester,\r\n    },\r\n    {\r\n      skip: !classid || !subjectid || !chapterid || !month || !semester,\r\n    }\r\n  );\r\n\r\n  const isLoading = studentsLoading || recapLoading;\r\n\r\n  // Create a map of student data for easy lookup\r\n  const recapMap = new Map();\r\n  if (recapData && Array.isArray(recapData)) {\r\n    recapData.forEach((item) => {\r\n      recapMap.set(item.student_id, item);\r\n    });\r\n  }\r\n\r\n  // Calculate averages for summary row\r\n  const calculateAverages = () => {\r\n    if (!recapData || !Array.isArray(recapData) || recapData.length === 0)\r\n      return null;\r\n\r\n    const totals = recapData.reduce(\r\n      (acc, item) => {\r\n        acc.kehadiran += parseFloat(item.kehadiran) || 0;\r\n        acc.sikap += parseFloat(item.sikap) || 0;\r\n        acc.formatif += parseFloat(item.formatif) || 0;\r\n        acc.sumatif += parseFloat(item.sumatif) || 0;\r\n        return acc;\r\n      },\r\n      { kehadiran: 0, sikap: 0, formatif: 0, sumatif: 0 }\r\n    );\r\n\r\n    const count = recapData.length;\r\n    return {\r\n      kehadiran: (totals.kehadiran / count).toFixed(2),\r\n      sikap: (totals.sikap / count).toFixed(2),\r\n      formatif: (totals.formatif / count).toFixed(2),\r\n      sumatif: (totals.sumatif / count).toFixed(2),\r\n    };\r\n  };\r\n\r\n  const averages = calculateAverages();\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h5 className=\"card-title mb-0\">Rekap Nilai</h5>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"table-responsive\">\r\n          <Table\r\n            isLoading={isLoading}\r\n            totalData={totalData}\r\n            totalPages={totalPages}\r\n            page={page}\r\n            limit={limit}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            setSearch={setSearch}\r\n          >\r\n            <table className=\"table table-bordered table-striped table-hover\">\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    No\r\n                  </th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ width: \"100px\" }}\r\n                  >\r\n                    NIS\r\n                  </th>\r\n                  <th className=\"text-center align-middle\">Siswa</th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ width: \"100px\" }}\r\n                  >\r\n                    Kehadiran\r\n                  </th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ width: \"80px\" }}\r\n                  >\r\n                    Sikap\r\n                  </th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ width: \"100px\" }}\r\n                  >\r\n                    Formatif\r\n                  </th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ width: \"100px\" }}\r\n                  >\r\n                    Sumatif\r\n                  </th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ width: \"300px\" }}\r\n                  >\r\n                    Catatan\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data?.students?.map((student, index) => {\r\n                  const recap = recapMap.get(student.student);\r\n\r\n                  return (\r\n                    <tr key={student.id}>\r\n                      <td className=\"text-center align-middle fw-bold\">\r\n                        {(page - 1) * limit + index + 1}\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        {student.nis}\r\n                      </td>\r\n                      <td className=\"align-middle fw-medium\">\r\n                        {student.student_name}\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        {recap && parseFloat(recap.kehadiran) > 0 ? (\r\n                          <span\r\n                            className={`badge ${\r\n                              parseFloat(recap.kehadiran) >= 80\r\n                                ? \"bg-success\"\r\n                                : parseFloat(recap.kehadiran) >= 60\r\n                                ? \"bg-warning\"\r\n                                : \"bg-danger\"\r\n                            }`}\r\n                          >\r\n                            {recap.kehadiran}%\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"text-muted\">-</span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        {recap && parseFloat(recap.sikap) > 0 ? (\r\n                          <span\r\n                            className={`fw-bold ${\r\n                              parseFloat(recap.sikap) >= 80\r\n                                ? \"text-success\"\r\n                                : parseFloat(recap.sikap) >= 60\r\n                                ? \"text-warning\"\r\n                                : \"text-danger\"\r\n                            }`}\r\n                          >\r\n                            {recap.sikap}\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"text-muted\">-</span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        {recap && parseFloat(recap.formatif) > 0 ? (\r\n                          <span\r\n                            className={`fw-bold ${\r\n                              parseFloat(recap.formatif) >= 80\r\n                                ? \"text-success\"\r\n                                : parseFloat(recap.formatif) >= 60\r\n                                ? \"text-warning\"\r\n                                : \"text-danger\"\r\n                            }`}\r\n                          >\r\n                            {recap.formatif}\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"text-muted\">-</span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        {recap && parseFloat(recap.sumatif) > 0 ? (\r\n                          <span\r\n                            className={`fw-bold ${\r\n                              parseFloat(recap.sumatif) >= 80\r\n                                ? \"text-success\"\r\n                                : parseFloat(recap.sumatif) >= 60\r\n                                ? \"text-warning\"\r\n                                : \"text-danger\"\r\n                            }`}\r\n                          >\r\n                            {recap.sumatif}\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"text-muted\">-</span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"align-middle\">\r\n                        <small className=\"text-muted\">\r\n                          {recap?.catatan || \"-\"}\r\n                        </small>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n              {averages && (\r\n                <tfoot className=\"table-info\">\r\n                  <tr>\r\n                    <td\r\n                      colSpan=\"3\"\r\n                      className=\"text-center align-middle fw-bold\"\r\n                    >\r\n                      RATA-RATA KELAS\r\n                    </td>\r\n                    <td className=\"text-center align-middle fw-bold\">\r\n                      {averages.kehadiran}%\r\n                    </td>\r\n                    <td className=\"text-center align-middle fw-bold\">\r\n                      {averages.sikap}\r\n                    </td>\r\n                    <td className=\"text-center align-middle fw-bold\">\r\n                      {averages.formatif}\r\n                    </td>\r\n                    <td className=\"text-center align-middle fw-bold\">\r\n                      {averages.sumatif}\r\n                    </td>\r\n                    <td className=\"align-middle\">\r\n                      <small className=\"text-muted\">-</small>\r\n                    </td>\r\n                  </tr>\r\n                </tfoot>\r\n              )}\r\n            </table>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recap;\r\n","import { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/layout/Layout\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Subjects from \"./Subjects\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport FormData from \"./FormData\";\r\nimport Tabs from \"./Tabs\";\r\nimport Attitude from \"./Attitude\";\r\nimport Attendance from \"./Attendance\";\r\nimport Formative from \"./Formative\";\r\nimport Summative from \"./Summative\";\r\nimport Recap from \"./Recap\";\r\nimport { useGetStudentsInClassQuery } from \"../../../controller/api/admin/ApiClass\";\r\n\r\nconst TeacherScores = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const subject = searchParams.get(\"subject\");\r\n  const subjectid = searchParams.get(\"id\");\r\n  const chapterid = searchParams.get(\"chapterid\");\r\n  const classid = searchParams.get(\"classid\");\r\n  const month = searchParams.get(\"month\");\r\n  const semester = searchParams.get(\"semester\");\r\n\r\n  const [tab, setTab] = useState(\"attendance\");\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const subjects = user?.subjects;\r\n\r\n  const isSubjectsEmpty = !subjects || subjects.length === 0;\r\n\r\n  // Check if all required parameters are present\r\n  const hasRequiredParams =\r\n    classid && subjectid && chapterid && month && semester;\r\n\r\n  // Reset tab when parameters change\r\n  useEffect(() => {\r\n    setTab(\"attendance\");\r\n  }, [classid, subjectid, chapterid, month, semester]);\r\n\r\n  // Reset pagination when parameters change\r\n  useEffect(() => {\r\n    setPage(1);\r\n    setSearch(\"\");\r\n  }, [classid, subjectid, chapterid, month, semester]);\r\n\r\n  // Students data\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const { data, isLoading } = useGetStudentsInClassQuery(\r\n    {\r\n      page,\r\n      limit,\r\n      search,\r\n      classid,\r\n    },\r\n    { skip: !classid }\r\n  );\r\n\r\n  if (subject && subjectid) {\r\n    return (\r\n      <Layout title=\"Penilaian\" levels={[\"teacher\"]}>\r\n        <div className=\"d-flex flex-column gap-3\">\r\n          <FormData subject={subject} id={subjectid} />\r\n\r\n          <Tabs tab={tab} setTab={setTab} />\r\n\r\n          {/* Only render components when required parameters are available */}\r\n          {hasRequiredParams && (\r\n            <>\r\n              {tab === \"attitude\" && (\r\n                <Attitude\r\n                  key={`attitude-${classid}-${subjectid}-${chapterid}-${month}-${semester}`}\r\n                  data={data}\r\n                  isLoading={isLoading}\r\n                  page={page}\r\n                  setPage={setPage}\r\n                  limit={limit}\r\n                  setLimit={setLimit}\r\n                  search={search}\r\n                  setSearch={setSearch}\r\n                  totalData={data?.totalData}\r\n                  totalPages={data?.totalPages}\r\n                />\r\n              )}\r\n              {tab === \"attendance\" && (\r\n                <Attendance\r\n                  key={`attendance-${classid}-${subjectid}-${chapterid}-${month}-${semester}`}\r\n                  data={data}\r\n                  isLoading={isLoading}\r\n                  page={page}\r\n                  setPage={setPage}\r\n                  limit={limit}\r\n                  setLimit={setLimit}\r\n                  search={search}\r\n                  setSearch={setSearch}\r\n                  totalData={data?.totalData}\r\n                  totalPages={data?.totalPages}\r\n                />\r\n              )}\r\n              {tab === \"formative\" && (\r\n                <Formative\r\n                  key={`formative-${classid}-${subjectid}-${chapterid}-${month}-${semester}`}\r\n                  data={data}\r\n                  isLoading={isLoading}\r\n                  page={page}\r\n                  setPage={setPage}\r\n                  limit={limit}\r\n                  setLimit={setLimit}\r\n                  search={search}\r\n                  setSearch={setSearch}\r\n                  totalData={data?.totalData}\r\n                  totalPages={data?.totalPages}\r\n                />\r\n              )}\r\n              {tab === \"summative\" && (\r\n                <Summative\r\n                  key={`summative-${classid}-${subjectid}-${chapterid}-${month}-${semester}`}\r\n                  data={data}\r\n                  isLoading={isLoading}\r\n                  page={page}\r\n                  setPage={setPage}\r\n                  limit={limit}\r\n                  setLimit={setLimit}\r\n                  search={search}\r\n                  setSearch={setSearch}\r\n                  totalData={data?.totalData}\r\n                  totalPages={data?.totalPages}\r\n                />\r\n              )}\r\n              {tab === \"recap\" && (\r\n                <Recap\r\n                  key={`recap-${classid}-${subjectid}-${chapterid}-${month}-${semester}`}\r\n                  data={data}\r\n                  isLoading={isLoading}\r\n                  page={page}\r\n                  setPage={setPage}\r\n                  limit={limit}\r\n                  setLimit={setLimit}\r\n                  search={search}\r\n                  setSearch={setSearch}\r\n                  totalData={data?.totalData}\r\n                  totalPages={data?.totalPages}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout title=\"Penilaian\" levels={[\"teacher\"]}>\r\n      {isSubjectsEmpty ? (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"row justify-content-center\"\r\n        >\r\n          <div className=\"col-md-6 text-center\">\r\n            <div className=\"py-5\">\r\n              <div\r\n                className=\"bg-light rounded-circle mx-auto mb-4 d-flex align-items-center justify-content-center\"\r\n                style={{ width: \"100px\", height: \"100px\" }}\r\n              >\r\n                <i className=\"bi bi-journal-x display-4 text-primary\"></i>\r\n              </div>\r\n              <h4 className=\"fw-bold mb-3\">Belum Ada Mata Pelajaran</h4>\r\n              <p className=\"text-muted mb-0\">\r\n                Anda belum ditugaskan untuk mengajar mata pelajaran apapun saat\r\n                ini\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      ) : (\r\n        <Subjects subjects={subjects} user={user} />\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TeacherScores;\r\n"],"names":["Subjects","subjects","user","navigate","useNavigate","goToLink","name","id","formattedName","replace","item","hidden","y","opacity","show","jsxRuntimeExports","jsx","motion","div","className","variants","transition","staggerChildren","initial","animate","children","map","subject","jsxs","onClick","style","cursor","src","cover","window","location","origin","alt","height","objectFit","e","stopPropagation","selectStyles","menuPortal","base","zIndex","control","state","minHeight","option","padding","months","semesters","label","value","FormData","data","useGetChaptersQuery","searchParams","setSearchParams","useSearchParams","chapterOptions","useMemo","chapter","chapter_id","chapter_name","chapteridParam","get","classidParam","monthParam","semesterParam","selectedChapter","setSelectedChapter","useState","selectedClass","setSelectedClass","selectedMonth","setSelectedMonth","selectedSemester","setSelectedSemester","classOptions","chapterId","find","c","String","_a","class","cls","monthOptions","month","semesterOptions","semester","useEffect","length","found","opt","updateQuery","params","chapterid","classid","handleChapterChange","handleClassChange","handleMonthChange","handleSemesterChange","ReactSelect","options","onChange","placeholder","menuPortalTarget","document","body","styles","isDisabled","Tabs","tab","setTab","subjectid","handleTabClick","type","target","Attitude","isLoading","page","setPage","limit","setLimit","search","setSearch","totalData","totalPages","attitudeScores","setAttitudeScores","useSelector","auth","teacher_id","attitudeData","refetch","useGetAttitudeQuery","skip","refetchOnMountOrArgChange","Array","isArray","mapped","row","student_id","kinerja","kedisiplinan","keaktifan","percayaDiri","percaya_diri","catatan","catatan_guru","Object","keys","upsertAttitude","isSaving","isSuccess","upsertData","isError","error","useUpsertAttitudeMutation","handleScoreChange","studentId","field","prev","calculateAverage","scores","values","filter","score","reduce","sum","Number","toFixed","success","message","Table","backgroundColor","students","student","index","nis","student_name","min","max","_b","_c","_d","rows","_e","async","studentScores","subject_id","class_id","handleSave","disabled","Attendance","monthName","indexOf","Date","getMonth","selectedYear","getFullYear","summaryData","summaryLoading","useGetPresensiSummaryQuery","year","LoadingScreen","width","totalDays","hadir","sakit","izin","alpa","attendanceRate","studentid","Formative","formativeScores","setFormativeScores","formativeData","useGetFormativeQuery","tugas1","f_1","tugas2","f_2","tugas3","f_3","tugas4","f_4","tugas5","f_5","tugas6","f_6","tugas7","f_7","tugas8","f_8","upsertFormative","useUpsertFormativeMutation","i","push","renderTaskInputs","inputs","taskNumber","columns","color","renderTaskColumns","s","F_1","F_2","F_3","F_4","F_5","F_6","F_7","F_8","Summative","summativeScores","setSummativeScores","summativeData","useGetSummativeQuery","sumatif1","s_1","sumatif2","s_2","sumatif3","s_3","sumatif4","s_4","sumatif5","s_5","sumatif6","s_6","sumatif7","s_7","sumatif8","s_8","upsertSummative","useUpsertSummativeMutation","renderSumatifInputs","renderSumatifColumns","S_1","S_2","S_3","S_4","S_5","S_6","S_7","S_8","Recap","studentsLoading","recapData","recapLoading","useGetRecapQuery","recapMap","Map","forEach","set","averages","totals","acc","kehadiran","parseFloat","sikap","formatif","sumatif","count","calculateAverages","recap","colSpan","TeacherScores","isSubjectsEmpty","hasRequiredParams","useGetStudentsInClassQuery","Layout","title","levels","Fragment"],"mappings":"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"}