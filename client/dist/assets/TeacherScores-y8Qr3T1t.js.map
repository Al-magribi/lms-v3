{"version":3,"file":"TeacherScores-y8Qr3T1t.js","sources":["../../src/page/teacher/scores/Subjects.jsx","../../src/page/teacher/scores/FormData.jsx","../../src/page/teacher/scores/TableScoring.jsx","../../src/page/teacher/scores/TeacherScores.jsx"],"sourcesContent":["import { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Subjects = ({ subjects, user }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const goToLink = (name, id) => {\r\n    const formattedName = name.replace(/\\s+/g, \"-\");\r\n    navigate(`/guru-penilaian?subject=${formattedName}&id=${id}`);\r\n  };\r\n\r\n  const container = {\r\n    hidden: { opacity: 0 },\r\n    show: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.1,\r\n      },\r\n    },\r\n  };\r\n\r\n  const item = {\r\n    hidden: { y: 20, opacity: 0 },\r\n    show: { y: 0, opacity: 1 },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"row g-3\"\r\n      variants={container}\r\n      initial=\"hidden\"\r\n      animate=\"show\"\r\n    >\r\n      {subjects.map((subject) => (\r\n        <motion.div\r\n          key={subject.id}\r\n          className=\"col-xl-3 col-lg-4 col-md-6\"\r\n          variants={item}\r\n        >\r\n          <div\r\n            className=\"card h-100 shadow-sm border-0 hover-card rounded-3 overflow-hidden\"\r\n            onClick={() => goToLink(subject.name, subject.id)}\r\n            style={{ cursor: \"pointer\", transition: \"all 0.3s ease\" }}\r\n          >\r\n            <div className=\"position-relative\">\r\n              <img\r\n                src={\r\n                  subject.cover\r\n                    ? `${window.location.origin}${subject.cover}`\r\n                    : `/logo.png`\r\n                }\r\n                alt={subject.name}\r\n                className=\"card-img-top\"\r\n                style={{\r\n                  height: \"250px\",\r\n                  objectFit: \"cover\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"card-body p-4\">\r\n              <h5 className=\"card-title mb-3 fw-bold text-primary\">\r\n                {subject.name}\r\n              </h5>\r\n              <div className=\"d-flex align-items-center text-muted mb-3\">\r\n                <i className=\"bi bi-mortarboard-fill me-2\"></i>\r\n                <span className=\"small\">{user?.name}</span>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-primary w-100 rounded-pill py-2\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  goToLink(subject.name, subject.id);\r\n                }}\r\n              >\r\n                <i className=\"bi bi-arrow-right-circle-fill me-2\"></i>\r\n                Kelola Penilaian\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      ))}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Subjects;\r\n","import React, { useState, useMemo, useEffect } from \"react\";\r\nimport ReactSelect from \"react-select\";\r\nimport { useGetChaptersQuery } from \"../../../controller/api/lms/ApiChapter\";\r\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst selectStyles = {\r\n  menuPortal: (base) => ({ ...base, zIndex: 10 }),\r\n};\r\n\r\nconst months = [\r\n  \"Januari\",\r\n  \"Februari\",\r\n  \"Maret\",\r\n  \"April\",\r\n  \"Mei\",\r\n  \"Juni\",\r\n  \"Juli\",\r\n  \"Agustus\",\r\n  \"September\",\r\n  \"Oktober\",\r\n  \"November\",\r\n  \"Desember\",\r\n];\r\n\r\nconst FormData = ({ subject, id }) => {\r\n  const { data } = useGetChaptersQuery(id);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  // Options untuk dropdown chapter\r\n  const chapterOptions = useMemo(\r\n    () =>\r\n      data?.map((chapter) => ({\r\n        value: chapter.chapter_id,\r\n        label: chapter.chapter_name,\r\n      })) || [],\r\n    [data]\r\n  );\r\n\r\n  // Ambil dari query url\r\n  const chapteridParam = searchParams.get(\"chapterid\");\r\n  const classidParam = searchParams.get(\"classid\");\r\n  const monthParam = searchParams.get(\"month\");\r\n\r\n  // State\r\n  const [selectedChapter, setSelectedChapter] = useState(null);\r\n  const [selectedClass, setSelectedClass] = useState(null);\r\n  const [selectedMonth, setSelectedMonth] = useState(null);\r\n\r\n  // Class options tergantung chapter terpilih\r\n  const classOptions = useMemo(() => {\r\n    if (!selectedChapter && !chapteridParam) return [];\r\n    const chapterId = selectedChapter ? selectedChapter.value : chapteridParam;\r\n    const chapter = data?.find(\r\n      (c) => String(c.chapter_id) === String(chapterId)\r\n    );\r\n    return (\r\n      chapter?.class?.map((cls) => ({ value: cls.id, label: cls.name })) || []\r\n    );\r\n  }, [data, selectedChapter, chapteridParam]);\r\n\r\n  // Month options\r\n  const monthOptions = useMemo(\r\n    () => months.map((month) => ({ value: month, label: month })),\r\n    []\r\n  );\r\n\r\n  // Sinkronisasi state dengan query param setelah data/options siap\r\n  useEffect(() => {\r\n    // Set chapter\r\n    if (chapteridParam && chapterOptions.length > 0) {\r\n      const found = chapterOptions.find(\r\n        (opt) => String(opt.value) === String(chapteridParam)\r\n      );\r\n      setSelectedChapter(found || null);\r\n    }\r\n  }, [chapteridParam, chapterOptions]);\r\n\r\n  useEffect(() => {\r\n    // Set class\r\n    if (classidParam && classOptions.length > 0) {\r\n      const found = classOptions.find(\r\n        (opt) => String(opt.value) === String(classidParam)\r\n      );\r\n      setSelectedClass(found || null);\r\n    }\r\n  }, [classidParam, classOptions]);\r\n\r\n  useEffect(() => {\r\n    // Set month\r\n    if (monthParam && monthOptions.length > 0) {\r\n      const found = monthOptions.find((opt) => opt.value === monthParam);\r\n      setSelectedMonth(found || null);\r\n    }\r\n  }, [monthParam, monthOptions]);\r\n\r\n  // Handler untuk update query params\r\n  const updateQuery = (chapter, cls, month) => {\r\n    const params = {};\r\n    // Pertahankan subject dan id\r\n    if (subject) params.subject = subject;\r\n    if (id) params.id = id;\r\n    if (chapter) params.chapterid = chapter.value;\r\n    if (cls) params.classid = cls.value;\r\n    if (month) params.month = month.value;\r\n    setSearchParams(params);\r\n  };\r\n\r\n  // Handler saat chapter berubah\r\n  const handleChapterChange = (option) => {\r\n    setSelectedChapter(option);\r\n    setSelectedClass(null); // reset kelas jika chapter berubah\r\n    updateQuery(option, null, selectedMonth);\r\n  };\r\n\r\n  // Handler saat kelas berubah\r\n  const handleClassChange = (option) => {\r\n    setSelectedClass(option);\r\n    updateQuery(selectedChapter, option, selectedMonth);\r\n  };\r\n\r\n  // Handler saat bulan berubah\r\n  const handleMonthChange = (option) => {\r\n    setSelectedMonth(option);\r\n    updateQuery(selectedChapter, selectedClass, option);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex gap-3\">\r\n      <ReactSelect\r\n        options={chapterOptions}\r\n        value={selectedChapter}\r\n        onChange={handleChapterChange}\r\n        placeholder=\"Pilih Chapter\"\r\n        menuPortalTarget={document.body}\r\n        styles={selectStyles}\r\n      />\r\n      <ReactSelect\r\n        options={classOptions}\r\n        value={selectedClass}\r\n        onChange={handleClassChange}\r\n        placeholder=\"Pilih Kelas\"\r\n        isDisabled={!selectedChapter}\r\n        menuPortalTarget={document.body}\r\n        styles={selectStyles}\r\n      />\r\n      <ReactSelect\r\n        options={monthOptions}\r\n        value={selectedMonth}\r\n        onChange={handleMonthChange}\r\n        placeholder=\"Pilih Bulan\"\r\n        menuPortalTarget={document.body}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormData;\r\n","import React from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst TableScoring = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const subjectid = searchParams.get(\"id\");\r\n  const chapterid = searchParams.get(\"chapterid\");\r\n  const classid = searchParams.get(\"classid\");\r\n  const month = searchParams.get(\"month\");\r\n\r\n  return <div className=\"mt-3\">TableScoring</div>;\r\n};\r\n\r\nexport default TableScoring;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/layout/Layout\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Subjects from \"./Subjects\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport FormData from \"./FormData\";\r\nimport TableScoring from \"./TableScoring\";\r\n\r\nconst TeacherScores = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const subject = searchParams.get(\"subject\");\r\n  const id = searchParams.get(\"id\");\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const subjects = user?.subjects;\r\n\r\n  const isSubjectsEmpty = !subjects || subjects.length === 0;\r\n\r\n  if (subject && id) {\r\n    return (\r\n      <Layout title=\"Penilaian\" levels={[\"teacher\"]}>\r\n        <FormData subject={subject} id={id} />\r\n\r\n        <TableScoring />\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout title=\"Penilaian\" levels={[\"teacher\"]}>\r\n      {isSubjectsEmpty ? (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"row justify-content-center\"\r\n        >\r\n          <div className=\"col-md-6 text-center\">\r\n            <div className=\"py-5\">\r\n              <div\r\n                className=\"bg-light rounded-circle mx-auto mb-4 d-flex align-items-center justify-content-center\"\r\n                style={{ width: \"100px\", height: \"100px\" }}\r\n              >\r\n                <i className=\"bi bi-journal-x display-4 text-primary\"></i>\r\n              </div>\r\n              <h4 className=\"fw-bold mb-3\">Belum Ada Mata Pelajaran</h4>\r\n              <p className=\"text-muted mb-0\">\r\n                Anda belum ditugaskan untuk mengajar mata pelajaran apapun saat\r\n                ini\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      ) : (\r\n        <Subjects subjects={subjects} user={user} />\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TeacherScores;\r\n"],"names":["Subjects","subjects","user","navigate","useNavigate","goToLink","name","id","formattedName","replace","item","hidden","y","opacity","show","jsxRuntimeExports","jsx","motion","div","className","variants","transition","staggerChildren","initial","animate","children","map","subject","jsxs","onClick","style","cursor","src","cover","window","location","origin","alt","height","objectFit","e","stopPropagation","selectStyles","menuPortal","base","zIndex","months","FormData","data","useGetChaptersQuery","searchParams","setSearchParams","useSearchParams","chapterOptions","useMemo","chapter","value","chapter_id","label","chapter_name","chapteridParam","get","classidParam","monthParam","selectedChapter","setSelectedChapter","useState","selectedClass","setSelectedClass","selectedMonth","setSelectedMonth","classOptions","chapterId","find","c","String","_a","class","cls","monthOptions","month","useEffect","length","found","opt","updateQuery","params","chapterid","classid","ReactSelect","options","onChange","option","placeholder","menuPortalTarget","document","body","styles","isDisabled","TableScoring","TeacherScores","useSelector","state","auth","isSubjectsEmpty","Layout","title","levels","width"],"mappings":"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"}