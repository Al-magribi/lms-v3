{"version":3,"file":"StudentAcademic-olWSKZ0V.js","sources":["../../src/module/student/report/academic/StudentAcademic.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Flex,\r\n  Select,\r\n  Typography,\r\n  Card,\r\n  Empty,\r\n  Spin,\r\n  Alert,\r\n  Collapse,\r\n  List,\r\n  Tag,\r\n  Divider,\r\n  Descriptions,\r\n  Statistic,\r\n  Row,\r\n  Col,\r\n  Grid,\r\n  Form,\r\n} from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  CalendarOutlined,\r\n  ReadOutlined,\r\n  HomeOutlined,\r\n  TeamOutlined,\r\n  RiseOutlined,\r\n  FallOutlined,\r\n  BookOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MainLayout from \"../../../../components/layout/MainLayout\";\r\nimport { useGetMonthlyRecapQuery } from \"../../../../service/api/lms/ApiRecap\";\r\n\r\nconst { Title, Text, Paragraph } = Typography;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst SubjectDetail = ({ detail }) => {\r\n  // Pastikan detail adalah array dan memiliki panjang yang cukup\r\n  const attendanceDetail = detail?.[0]?.attendance || [];\r\n  const attitudeDetail = detail?.[1]?.attitude || [];\r\n  const assessmentDetail = detail?.[2] || { summative: [], formative: [] };\r\n\r\n  return (\r\n    <Row gutter={[16, 16]}>\r\n      <Col xs={24} md={12} lg={6}>\r\n        <Card size=\"small\" title=\"Attendance\">\r\n          <List\r\n            dataSource={attendanceDetail}\r\n            renderItem={(item) => {\r\n              const key = Object.keys(item)[0];\r\n              const value = item[key];\r\n              return (\r\n                <List.Item>\r\n                  <Text style={{ textTransform: \"capitalize\" }}>{key}</Text>\r\n                  <Text strong>\r\n                    {key === \"presentase\" ? `${value}%` : value}\r\n                  </Text>\r\n                </List.Item>\r\n              );\r\n            }}\r\n          />\r\n        </Card>\r\n      </Col>\r\n      <Col xs={24} md={12} lg={6}>\r\n        <Card size=\"small\" title=\"Attitude\">\r\n          <List\r\n            dataSource={attitudeDetail}\r\n            renderItem={(item) => {\r\n              const key = Object.keys(item)[0];\r\n              const value = item[key];\r\n              return (\r\n                <List.Item>\r\n                  <Text style={{ textTransform: \"capitalize\" }}>{key}</Text>\r\n                  <Statistic\r\n                    value={value}\r\n                    precision={2}\r\n                    valueStyle={{ fontSize: \"1rem\" }}\r\n                  />\r\n                </List.Item>\r\n              );\r\n            }}\r\n          />\r\n        </Card>\r\n      </Col>\r\n      <Col xs={24} md={12} lg={8}>\r\n        <Card size=\"small\" title=\"Summative\">\r\n          <List\r\n            dataSource={assessmentDetail.summative}\r\n            renderItem={(item) => {\r\n              const key = Object.keys(item)[0];\r\n              const value = item[key];\r\n              return (\r\n                <List.Item>\r\n                  <Text style={{ textTransform: \"capitalize\" }}>{key}</Text>\r\n                  <Statistic\r\n                    value={value}\r\n                    precision={2}\r\n                    valueStyle={{ fontSize: \"1rem\" }}\r\n                  />\r\n                </List.Item>\r\n              );\r\n            }}\r\n          />\r\n        </Card>\r\n      </Col>\r\n      <Col xs={24} md={12} lg={4}>\r\n        <Card size=\"small\" title=\"Formative\">\r\n          <List\r\n            dataSource={assessmentDetail.formative}\r\n            renderItem={(item) => <List.Item>{item}</List.Item>}\r\n            locale={{ emptyText: \"-\" }}\r\n          />\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst StudentAcademic = () => {\r\n  const months = [\r\n    \"Januari\",\r\n    \"Februari\",\r\n    \"Maret\",\r\n    \"April\",\r\n    \"Mei\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"Agustus\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Desember\",\r\n  ];\r\n  const monthOpts = months.map((month) => ({ label: month, value: month }));\r\n\r\n  const [month, setMonth] = useState(null);\r\n  const [form] = Form.useForm();\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const studentId = user?.id;\r\n  const periode = user?.periode;\r\n\r\n  useEffect(() => {\r\n    const today = new Date();\r\n    const currentMonthIndex = today.getMonth();\r\n    // Default ke bulan sebelumnya, atau Desember jika bulan ini Januari\r\n    const previousMonthName =\r\n      months[currentMonthIndex === 0 ? 11 : currentMonthIndex - 1];\r\n    setMonth(previousMonthName);\r\n    form.setFieldsValue({ month: previousMonthName });\r\n  }, [user, form]); // Dependency array should include months if it were dynamic\r\n\r\n  const { data, error, isFetching } = useGetMonthlyRecapQuery(\r\n    { studentId, month, periode },\r\n    { skip: !studentId || !month || !periode }\r\n  );\r\n\r\n  const screens = useBreakpoint();\r\n  const recapData = data?.[0];\r\n\r\n  const renderSubjectList = (subjects) => (\r\n    <List\r\n      itemLayout=\"vertical\"\r\n      dataSource={subjects}\r\n      renderItem={(subject) => (\r\n        <List.Item key={`${subject.name}-${subject.teacher}`}>\r\n          <Card>\r\n            <Flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              wrap=\"wrap\"\r\n              gap=\"small\"\r\n            >\r\n              <div>\r\n                <Title level={5} style={{ marginBottom: 0 }}>\r\n                  {subject.name}\r\n                </Title>\r\n                <Text type=\"secondary\">\r\n                  <UserOutlined /> Guru: {subject.teacher}\r\n                </Text>\r\n              </div>\r\n              <Statistic\r\n                title=\"Nilai Akhir\"\r\n                value={subject.score}\r\n                precision={2}\r\n                valueStyle={{\r\n                  color: subject.score >= 75 ? \"#3f8600\" : \"#cf1322\",\r\n                }}\r\n                prefix={\r\n                  subject.score >= 75 ? <RiseOutlined /> : <FallOutlined />\r\n                }\r\n              />\r\n            </Flex>\r\n\r\n            {subject.chapters && subject.chapters.length > 0 && (\r\n              <>\r\n                <Divider orientation=\"left\" plain>\r\n                  <BookOutlined /> Chapter Bulan Ini\r\n                </Divider>\r\n                <List\r\n                  size=\"small\"\r\n                  dataSource={subject.chapters}\r\n                  renderItem={(chapter) => (\r\n                    <List.Item>{chapter.name}</List.Item>\r\n                  )}\r\n                />\r\n              </>\r\n            )}\r\n\r\n            <Divider orientation=\"left\" plain>\r\n              Detail Penilaian\r\n            </Divider>\r\n            <SubjectDetail detail={subject.detail} />\r\n\r\n            {subject.note && (\r\n              <>\r\n                <Divider orientation=\"left\" plain>\r\n                  Catatan Guru\r\n                </Divider>\r\n                <Paragraph italic>\"{subject.note}\"</Paragraph>\r\n              </>\r\n            )}\r\n          </Card>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <MainLayout title={`Laporan Akademik ${user?.name}`} levels={[\"student\"]}>\r\n      <Flex vertical gap=\"large\">\r\n        <Card>\r\n          <Form form={form} layout=\"vertical\">\r\n            <Form.Item\r\n              name=\"month\"\r\n              label={\r\n                <Title level={4} style={{ margin: 0 }}>\r\n                  Pilih Bulan Laporan\r\n                </Title>\r\n              }\r\n            >\r\n              <Select\r\n                placeholder=\"Pilih Bulan\"\r\n                onChange={(value) => setMonth(value)}\r\n                options={monthOpts}\r\n              />\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n\r\n        {isFetching && (\r\n          <div style={{ textAlign: \"center\", marginTop: 50 }}>\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        )}\r\n        {error && (\r\n          <Alert\r\n            message=\"Terjadi Kesalahan\"\r\n            description={error?.data?.message || \"Gagal memuat data.\"}\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n        )}\r\n        {!isFetching && recapData && (\r\n          <Card>\r\n            <Descriptions bordered column={screens.md ? 2 : 1} size=\"small\">\r\n              <Descriptions.Item\r\n                label={\r\n                  <>\r\n                    <UserOutlined /> Nama Siswa\r\n                  </>\r\n                }\r\n                span={2}\r\n              >\r\n                <Text strong>\r\n                  {recapData.name} ({recapData.nis})\r\n                </Text>\r\n              </Descriptions.Item>\r\n              <Descriptions.Item\r\n                label={\r\n                  <>\r\n                    <HomeOutlined /> Homebase\r\n                  </>\r\n                }\r\n              >\r\n                {recapData.homebase}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item\r\n                label={\r\n                  <>\r\n                    <ReadOutlined /> Kelas\r\n                  </>\r\n                }\r\n              >\r\n                {recapData.grade} - {recapData.class}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item\r\n                label={\r\n                  <>\r\n                    <TeamOutlined /> Wali Kelas\r\n                  </>\r\n                }\r\n              >\r\n                {recapData.teacher_homeroom}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item\r\n                label={\r\n                  <>\r\n                    <CalendarOutlined /> Periode Laporan\r\n                  </>\r\n                }\r\n              >\r\n                <Text strong>\r\n                  {recapData.periode} - {recapData.month}\r\n                </Text>\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n            <Divider />\r\n            <Collapse\r\n              accordion\r\n              defaultActiveKey={[\"0\"]}\r\n              ghost\r\n              items={recapData.category.map((cat, index) => ({\r\n                key: index,\r\n                label: <Title level={5}>{cat.name}</Title>,\r\n                children:\r\n                  cat.name === \"Diniyah\" && cat.branch ? (\r\n                    <Collapse\r\n                      items={cat.branch.map((branch, branchIndex) => ({\r\n                        key: branchIndex,\r\n                        label: (\r\n                          <Flex\r\n                            justify=\"space-between\"\r\n                            style={{ width: \"100%\" }}\r\n                          >\r\n                            <Text strong>{branch.name}</Text>\r\n                            <Tag color=\"blue\">\r\n                              Rata-rata Nilai: {branch.score}\r\n                            </Tag>\r\n                          </Flex>\r\n                        ),\r\n                        children: renderSubjectList(branch.subjects),\r\n                      }))}\r\n                    />\r\n                  ) : (\r\n                    renderSubjectList(cat.subjects)\r\n                  ),\r\n              }))}\r\n            />\r\n          </Card>\r\n        )}\r\n        {!isFetching && !recapData && month && !error && (\r\n          <Card>\r\n            <Empty description=\"Data laporan untuk bulan yang dipilih tidak tersedia.\" />\r\n          </Card>\r\n        )}\r\n      </Flex>\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default StudentAcademic;\r\n"],"names":["Title","Text","Paragraph","Typography","useBreakpoint","Grid","SubjectDetail","detail","attendanceDetail","attendance","attitudeDetail","attitude","assessmentDetail","summative","formative","Row","gutter","children","jsx","Col","xs","md","lg","Card","size","title","List","dataSource","renderItem","item","key","Object","keys","value","jsxs","Item","style","textTransform","strong","Statistic","precision","valueStyle","fontSize","locale","emptyText","StudentAcademic","months","monthOpts","map","month","label","setMonth","useState","form","Form","useForm","user","useSelector","state","auth","studentId","id","periode","useEffect","currentMonthIndex","Date","getMonth","previousMonthName","setFieldsValue","data","error","isFetching","useGetMonthlyRecapQuery","skip","screens","recapData","renderSubjectList","subjects","itemLayout","subject","Flex","justify","align","wrap","gap","level","marginBottom","name","type","UserOutlined","teacher","score","color","prefix","RiseOutlined","FallOutlined","chapters","length","Fragment","Divider","orientation","plain","BookOutlined","chapter","note","italic","MainLayout","levels","vertical","layout","margin","Select","placeholder","onChange","options","textAlign","marginTop","Spin","Alert","message","description","showIcon","Descriptions","bordered","column","span","nis","HomeOutlined","homebase","ReadOutlined","grade","class","TeamOutlined","teacher_homeroom","CalendarOutlined","Collapse","accordion","defaultActiveKey","ghost","items","category","cat","index","branch","branchIndex","width","Tag","Empty"],"mappings":"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"}