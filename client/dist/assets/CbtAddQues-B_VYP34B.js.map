{"version":3,"file":"CbtAddQues-B_VYP34B.js","sources":["../../src/page/cbt/bank/CbtAddQues.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Layout from \"../../../components/layout/Layout\";\r\nimport Editor from \"../../../components/editor/Editor\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  useAddQuestionMutation,\r\n  useGetQuestionQuery,\r\n} from \"../../../controller/api/cbt/ApiBank\";\r\nconst CbtAddQues = () => {\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const { subject, name, bankid, questionid } = params;\r\n  const [type, setType] = useState(1);\r\n  const [key, setKey] = useState(\"\");\r\n  const [poin, setPoin] = useState(\"\");\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [choices, setChoices] = useState({\r\n    choiceA: \"\",\r\n    choiceB: \"\",\r\n    choiceC: \"\",\r\n    choiceD: \"\",\r\n    choiceE: \"\",\r\n  });\r\n\r\n  const { data: detail } = useGetQuestionQuery(questionid, {\r\n    skip: !questionid,\r\n  });\r\n\r\n  const [addQuestion, { isSuccess, isLoading, isError, reset }] =\r\n    useAddQuestionMutation();\r\n\r\n  const handleChoiceChange = (choice) => (content) => {\r\n    setChoices((prevChoices) => ({\r\n      ...prevChoices,\r\n      [choice]: content,\r\n    }));\r\n  };\r\n\r\n  const addHandler = () => {\r\n    if (!question) {\r\n      toast.error(\"Pertanyaan tidak boleh kosong\");\r\n      return;\r\n    }\r\n\r\n    if (type == 1 && !key) {\r\n      toast.error(\"Kunci jawaban tidak boleh kosong\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      id: questionid || \"\",\r\n      bank: bankid,\r\n      qtype: parseInt(type),\r\n      qkey: key,\r\n      poin: parseInt(poin),\r\n      question: question,\r\n      a: choices.choiceA,\r\n      b: choices.choiceB,\r\n      c: choices.choiceC,\r\n      d: choices.choiceD,\r\n      e: choices.choiceE,\r\n    };\r\n\r\n    toast.promise(\r\n      addQuestion(data)\r\n        .unwrap()\r\n        .then((res) => res.message),\r\n      {\r\n        loading: \"Memuat data ...\",\r\n        success: (message) => message,\r\n        error: (error) => error.data.message,\r\n      }\r\n    );\r\n  };\r\n\r\n  const goToLink = () => {\r\n    const nameFormat = name.replace(/[\\s/]/g, \"-\");\r\n    const subjectFormat = subject.replace(/[\\s/]/g, \"-\");\r\n    navigate(`/admin-cbt-bank/${subjectFormat}/${nameFormat}/${bankid}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setType(1);\r\n      setKey(\"\");\r\n      setPoin(\"\");\r\n      setQuestion(\"\");\r\n      setChoices({\r\n        choiceA: \"\",\r\n        choiceB: \"\",\r\n        choiceC: \"\",\r\n        choiceD: \"\",\r\n        choiceE: \"\",\r\n      });\r\n      reset();\r\n      goToLink();\r\n    }\r\n\r\n    if (isError) {\r\n      reset();\r\n    }\r\n  }, [isSuccess, isError]);\r\n\r\n  useEffect(() => {\r\n    if (detail) {\r\n      setType(detail?.qtype);\r\n      setKey(detail?.qkey);\r\n      setPoin(detail?.poin);\r\n      setQuestion(detail?.question);\r\n      setChoices({\r\n        choiceA: detail?.a,\r\n        choiceB: detail?.b,\r\n        choiceC: detail?.c,\r\n        choiceD: detail?.d,\r\n        choiceE: detail?.e,\r\n      });\r\n    }\r\n  }, [detail]);\r\n\r\n  return (\r\n    <Layout title={\"Tambah Soal\"} levels={[\"admin\", \"teacher\"]}>\r\n      <div className=\"row g-2\">\r\n        <div className=\"col-lg-3 col-12\">\r\n          <select\r\n            name=\"type\"\r\n            id=\"type\"\r\n            className=\"form-select shadow\"\r\n            required\r\n            value={type}\r\n            onChange={(e) => setType(e.target.value)}\r\n          >\r\n            <option value={1}>PG</option>\r\n            <option value={2}>Essay</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"col-lg-3 col-12\">\r\n          <select\r\n            name=\"key\"\r\n            id=\"key\"\r\n            className=\"form-select shadow\"\r\n            required\r\n            value={key}\r\n            onChange={(e) => setKey(e.target.value)}\r\n          >\r\n            <option value=\"\" hidden>\r\n              Kunci Jawaban\r\n            </option>\r\n            <option value=\"A\">A</option>\r\n            <option value=\"B\">B</option>\r\n            <option value=\"C\">C</option>\r\n            <option value=\"D\">D</option>\r\n            <option value=\"E\">E</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"col-lg-3 col-12\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"poin\"\r\n            id=\"poin\"\r\n            className=\"form-control shadow\"\r\n            placeholder=\"Nilai\"\r\n            value={poin || \"\"}\r\n            onChange={(e) => setPoin(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-3 col-12 d-flex align-items-center justify-content-start\">\r\n          <button\r\n            className=\"btn btn-sm btn-success shadow\"\r\n            disabled={isLoading}\r\n            onClick={addHandler}\r\n          >\r\n            Simpan\r\n          </button>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Editor\r\n            placeholder=\"Ketikan pertanyaan di sini ...\"\r\n            value={question}\r\n            onChange={(html) => setQuestion(html)}\r\n            classname=\"shadow\"\r\n            height={300}\r\n          />\r\n        </div>\r\n        {type == 1 &&\r\n          Object.keys(choices).map((choice, index) => (\r\n            <div key={index} className=\"col-12\">\r\n              <Editor\r\n                placeholder={`Jawaban ${choice.charAt(choice.length - 1)}`}\r\n                value={choices[choice]}\r\n                onChange={handleChoiceChange(choice)}\r\n                classname=\"shadow\"\r\n                height={300}\r\n              />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CbtAddQues;\r\n"],"names":["CbtAddQues","navigate","useNavigate","params","useParams","subject","name","bankid","questionid","type","setType","useState","key","setKey","poin","setPoin","question","setQuestion","choices","setChoices","choiceA","choiceB","choiceC","choiceD","choiceE","data","detail","useGetQuestionQuery","skip","addQuestion","isSuccess","isLoading","isError","reset","useAddQuestionMutation","handleChoiceChange","choice","content","prevChoices","useEffect","nameFormat","replace","subjectFormat","goToLink","qtype","qkey","a","b","c","d","e","jsx","Layout","title","levels","children","jsxs","className","jsxRuntimeExports","id","required","value","onChange","target","hidden","placeholder","disabled","onClick","toast","error","bank","parseInt","promise","unwrap","then","res","message","loading","success","Editor","html","classname","height","Object","keys","map","index","charAt","length"],"mappings":"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"}