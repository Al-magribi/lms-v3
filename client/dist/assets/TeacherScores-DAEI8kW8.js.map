{"version":3,"file":"TeacherScores-DAEI8kW8.js","sources":["../../src/page/teacher/scores/Subjects.jsx","../../src/page/teacher/scores/FormData.jsx","../../src/page/teacher/scores/TableScoring.jsx","../../src/page/teacher/scores/TeacherScores.jsx"],"sourcesContent":["import { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Subjects = ({ subjects, user }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const goToLink = (name, id) => {\r\n    const formattedName = name.replace(/\\s+/g, \"-\");\r\n    navigate(`/guru-penilaian?subject=${formattedName}&id=${id}`);\r\n  };\r\n\r\n  const container = {\r\n    hidden: { opacity: 0 },\r\n    show: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.1,\r\n      },\r\n    },\r\n  };\r\n\r\n  const item = {\r\n    hidden: { y: 20, opacity: 0 },\r\n    show: { y: 0, opacity: 1 },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"row g-3\"\r\n      variants={container}\r\n      initial=\"hidden\"\r\n      animate=\"show\"\r\n    >\r\n      {subjects.map((subject) => (\r\n        <motion.div\r\n          key={subject.id}\r\n          className=\"col-xl-3 col-lg-4 col-md-6\"\r\n          variants={item}\r\n        >\r\n          <div\r\n            className=\"card h-100 shadow-sm border-0 hover-card rounded-3 overflow-hidden\"\r\n            onClick={() => goToLink(subject.name, subject.id)}\r\n            style={{ cursor: \"pointer\", transition: \"all 0.3s ease\" }}\r\n          >\r\n            <div className=\"position-relative\">\r\n              <img\r\n                src={\r\n                  subject.cover\r\n                    ? `${window.location.origin}${subject.cover}`\r\n                    : `/logo.png`\r\n                }\r\n                alt={subject.name}\r\n                className=\"card-img-top\"\r\n                style={{\r\n                  height: \"250px\",\r\n                  objectFit: \"cover\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"card-body p-4\">\r\n              <h5 className=\"card-title mb-3 fw-bold text-primary\">\r\n                {subject.name}\r\n              </h5>\r\n              <div className=\"d-flex align-items-center text-muted mb-3\">\r\n                <i className=\"bi bi-mortarboard-fill me-2\"></i>\r\n                <span className=\"small\">{user?.name}</span>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-primary w-100 rounded-pill py-2\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  goToLink(subject.name, subject.id);\r\n                }}\r\n              >\r\n                <i className=\"bi bi-arrow-right-circle-fill me-2\"></i>\r\n                Kelola Penilaian\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      ))}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Subjects;\r\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport ReactSelect from \"react-select\";\nimport { useGetChaptersQuery } from \"../../../controller/api/lms/ApiChapter\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\n\nconst selectStyles = {\n  menuPortal: (base) => ({ ...base, zIndex: 10 }),\n};\n\nconst months = [\n  \"Januari\",\n  \"Februari\",\n  \"Maret\",\n  \"April\",\n  \"Mei\",\n  \"Juni\",\n  \"Juli\",\n  \"Agustus\",\n  \"September\",\n  \"Oktober\",\n  \"November\",\n  \"Desember\",\n];\n\nconst FormData = ({ subject, id }) => {\n  const { data } = useGetChaptersQuery(id);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // Options untuk dropdown chapter\n  const chapterOptions = useMemo(\n    () =>\n      data?.map((chapter) => ({\n        value: chapter.chapter_id,\n        label: chapter.chapter_name,\n      })) || [],\n    [data]\n  );\n\n  // Ambil dari query url\n  const chapteridParam = searchParams.get(\"chapterid\");\n  const classidParam = searchParams.get(\"classid\");\n  const monthParam = searchParams.get(\"month\");\n\n  // State\n  const [selectedChapter, setSelectedChapter] = useState(null);\n  const [selectedClass, setSelectedClass] = useState(null);\n  const [selectedMonth, setSelectedMonth] = useState(null);\n\n  // Class options tergantung chapter terpilih\n  const classOptions = useMemo(() => {\n    if (!selectedChapter && !chapteridParam) return [];\n    const chapterId = selectedChapter ? selectedChapter.value : chapteridParam;\n    const chapter = data?.find(\n      (c) => String(c.chapter_id) === String(chapterId)\n    );\n    return (\n      chapter?.class?.map((cls) => ({ value: cls.id, label: cls.name })) || []\n    );\n  }, [data, selectedChapter, chapteridParam]);\n\n  // Month options\n  const monthOptions = useMemo(\n    () => months.map((month) => ({ value: month, label: month })),\n    []\n  );\n\n  // Sinkronisasi state dengan query param setelah data/options siap\n  useEffect(() => {\n    // Set chapter\n    if (chapteridParam && chapterOptions.length > 0) {\n      const found = chapterOptions.find(\n        (opt) => String(opt.value) === String(chapteridParam)\n      );\n      setSelectedChapter(found || null);\n    }\n  }, [chapteridParam, chapterOptions]);\n\n  useEffect(() => {\n    // Set class\n    if (classidParam && classOptions.length > 0) {\n      const found = classOptions.find(\n        (opt) => String(opt.value) === String(classidParam)\n      );\n      setSelectedClass(found || null);\n    }\n  }, [classidParam, classOptions]);\n\n  useEffect(() => {\n    // Set month\n    if (monthParam && monthOptions.length > 0) {\n      const found = monthOptions.find((opt) => opt.value === monthParam);\n      setSelectedMonth(found || null);\n    }\n  }, [monthParam, monthOptions]);\n\n  // Handler untuk update query params\n  const updateQuery = (chapter, cls, month) => {\n    const params = {};\n    // Pertahankan subject dan id\n    if (subject) params.subject = subject;\n    if (id) params.id = id;\n    if (chapter) params.chapterid = chapter.value;\n    if (cls) params.classid = cls.value;\n    if (month) params.month = month.value;\n    setSearchParams(params);\n  };\n\n  // Handler saat chapter berubah\n  const handleChapterChange = (option) => {\n    setSelectedChapter(option);\n    setSelectedClass(null); // reset kelas jika chapter berubah\n    updateQuery(option, null, selectedMonth);\n  };\n\n  // Handler saat kelas berubah\n  const handleClassChange = (option) => {\n    setSelectedClass(option);\n    updateQuery(selectedChapter, option, selectedMonth);\n  };\n\n  // Handler saat bulan berubah\n  const handleMonthChange = (option) => {\n    setSelectedMonth(option);\n    updateQuery(selectedChapter, selectedClass, option);\n  };\n\n  return (\n    <div className=\"d-flex gap-3\">\n      <ReactSelect\n        options={chapterOptions}\n        value={selectedChapter}\n        onChange={handleChapterChange}\n        placeholder=\"Pilih Chapter\"\n        menuPortalTarget={document.body}\n        styles={selectStyles}\n      />\n      <ReactSelect\n        options={classOptions}\n        value={selectedClass}\n        onChange={handleClassChange}\n        placeholder=\"Pilih Kelas\"\n        isDisabled={!selectedChapter}\n        menuPortalTarget={document.body}\n        styles={selectStyles}\n      />\n      <ReactSelect\n        options={monthOptions}\n        value={selectedMonth}\n        onChange={handleMonthChange}\n        placeholder=\"Pilih Bulan\"\n        menuPortalTarget={document.body}\n      />\n    </div>\n  );\n};\n\nexport default FormData;\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useGetChaptersQuery } from \"../../../controller/api/lms/ApiChapter\";\r\nimport {\r\n  useGetReportsQuery,\r\n  useCreateReportMutation,\r\n  useUpdateReportMutation,\r\n} from \"../../../controller/api/lms/ApiScore\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst scoreFields = [\r\n  { key: \"taks_score\", label: \"Tugas\" },\r\n  { key: \"writing_score\", label: \"Menulis\" },\r\n  { key: \"speaking_score\", label: \"Berbicara\" },\r\n  { key: \"lab_score\", label: \"Lab\" },\r\n  { key: \"note\", label: \"Catatan Materi\" },\r\n];\r\n\r\nconst abcdOptions = [\r\n  { value: \"A\", label: \"A\" },\r\n  { value: \"B\", label: \"B\" },\r\n  { value: \"C\", label: \"C\" },\r\n];\r\n\r\nconst TableScoring = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const subjectid = searchParams.get(\"id\");\r\n  const chapterid = searchParams.get(\"chapterid\");\r\n  const classid = searchParams.get(\"classid\");\r\n  const month = searchParams.get(\"month\");\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  // State for report data per student\r\n  const [reports, setReports] = useState({}); // { [studentid]: { ...report, scores: [...] } }\r\n  const [saving, setSaving] = useState({}); // { [studentid]: true/false }\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch chapter (to get chapters/materials)\r\n  const { data: chaptersData, isLoading: loadingChapters } =\r\n    useGetChaptersQuery(subjectid, { skip: !subjectid });\r\n\r\n  // Get selected chapter's chapters\r\n  const selectedChapter = useMemo(\r\n    () => chaptersData?.find((c) => String(c.chapter_id) === String(chapterid)),\r\n    [chaptersData, chapterid]\r\n  );\r\n  const chapters =\r\n    selectedChapter?.contents?.map((c) => ({\r\n      chapter_id: c.content_id,\r\n      chapter_title: c.content_title,\r\n      ...c,\r\n    })) || [];\r\n\r\n  // Fetch students + reports from /reports\r\n  const {\r\n    data: studentsData,\r\n    isLoading: loadingReports,\r\n    refetch: refetchReports,\r\n  } = useGetReportsQuery(\r\n    { classid, subjectid, month, chapterid },\r\n    { skip: !classid || !subjectid || !chapterid || !month }\r\n  );\r\n\r\n  // Only set reports if studentsData or chapters change meaningfully\r\n  useEffect(() => {\r\n    if (!studentsData || !chapters) return;\r\n    // Only set if reports is empty or studentsData/chapters length changes\r\n    if (\r\n      Object.keys(reports).length === 0 ||\r\n      Object.keys(reports).length !== studentsData.length ||\r\n      (studentsData.length > 0 &&\r\n        (!reports[studentsData[0].studentid] ||\r\n          reports[studentsData[0].studentid].scores?.length !==\r\n            chapters.length))\r\n    ) {\r\n      const newReports = {};\r\n      studentsData.forEach((student) => {\r\n        newReports[student.studentid] = {\r\n          ...student,\r\n          scores:\r\n            student.scores && student.scores.length > 0\r\n              ? student.scores\r\n              : chapters.map((chapter) => ({\r\n                  chapterid: chapter.chapter_id,\r\n                  taks_score: \"\",\r\n                  writing_score: \"\",\r\n                  speaking_score: \"\",\r\n                  lab_score: \"\",\r\n                  note: \"\",\r\n                })),\r\n        };\r\n      });\r\n      setReports(newReports);\r\n    }\r\n  }, [studentsData, chapters]);\r\n\r\n  // Mutations\r\n  const [createReport] = useCreateReportMutation();\r\n  const [updateReport] = useUpdateReportMutation();\r\n\r\n  // Handle input change\r\n  const handleInputChange = (studentid, field, value) => {\r\n    setReports((prev) => ({\r\n      ...prev,\r\n      [studentid]: {\r\n        ...prev[studentid],\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  // Handle score change\r\n  const handleScoreChange = (studentid, chapterid, field, value) => {\r\n    setReports((prev) => ({\r\n      ...prev,\r\n      [studentid]: {\r\n        ...prev[studentid],\r\n        scores: prev[studentid].scores.map((score) =>\r\n          score.chapterid === chapterid ? { ...score, [field]: value } : score\r\n        ),\r\n      },\r\n    }));\r\n  };\r\n\r\n  // Save or update report for a student\r\n  const handleSave = async (student, idx) => {\r\n    const report = reports[student.studentid];\r\n    if (!report) return;\r\n    setSaving((prev) => ({ ...prev, [student.studentid]: true }));\r\n    setError(null);\r\n    try {\r\n      const body = {\r\n        classid,\r\n        subjectid,\r\n        studentid: student.studentid,\r\n        teacherid: user.id,\r\n        type_report: \"bulanan\",\r\n        month,\r\n        performance: report.performance,\r\n        discipline: report.discipline,\r\n        activeness: report.activeness,\r\n        confidence: report.confidence,\r\n        teacher_note: report.teacher_note,\r\n        note: report.note,\r\n        scores: report.scores,\r\n      };\r\n      if (report.id) {\r\n        // Update\r\n        await updateReport({ id: report.id, body }).unwrap();\r\n      } else {\r\n        // Create\r\n        await createReport(body).unwrap();\r\n      }\r\n      setSaving((prev) => ({ ...prev, [student.studentid]: false }));\r\n      refetchReports();\r\n    } catch (err) {\r\n      setSaving((prev) => ({ ...prev, [student.studentid]: false }));\r\n      setError(\r\n        \"Gagal menyimpan laporan: \" + (err?.data?.message || err.message)\r\n      );\r\n    }\r\n  };\r\n\r\n  if (loadingChapters || loadingReports) return <div>Loading...</div>;\r\n  if (!classid || !subjectid || !chapterid || !month)\r\n    return <div>Pilih chapter, kelas, dan bulan terlebih dahulu.</div>;\r\n  if (!studentsData || studentsData.length === 0)\r\n    return <div>Tidak ada siswa di kelas ini.</div>;\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered align-middle\">\r\n          <thead>\r\n            <tr>\r\n              <th rowSpan={2}>#</th>\r\n              <th rowSpan={2}>Nama Siswa</th>\r\n              {chapters.map((chapter) => (\r\n                <th\r\n                  key={chapter.chapter_id}\r\n                  colSpan={scoreFields.length}\r\n                  className=\"text-center\"\r\n                >\r\n                  {chapter.chapter_title}\r\n                </th>\r\n              ))}\r\n              <th rowSpan={2}>Kinerja</th>\r\n              <th rowSpan={2}>Disiplin</th>\r\n              <th rowSpan={2}>Keaktifan</th>\r\n              <th rowSpan={2}>Kepercayaan Diri</th>\r\n              <th rowSpan={2}>Catatan Guru</th>\r\n              <th rowSpan={2}>Catatan Umum</th>\r\n              <th rowSpan={2}>Aksi</th>\r\n            </tr>\r\n            <tr>\r\n              {chapters.map((chapter) =>\r\n                scoreFields.map((field) => (\r\n                  <th key={chapter.chapter_id + field.key}>{field.label}</th>\r\n                ))\r\n              )}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {studentsData.map((student, idx) => {\r\n              const report = reports[student.studentid] || {};\r\n              return (\r\n                <tr key={student.studentid}>\r\n                  <td>{idx + 1}</td>\r\n                  <td>{student.name}</td>\r\n                  {chapters.map((chapter) => {\r\n                    const score =\r\n                      (report.scores || []).find(\r\n                        (s) => s.chapterid === chapter.chapter_id\r\n                      ) || {};\r\n                    return scoreFields.map((field) => (\r\n                      <td key={chapter.chapter_id + field.key}>\r\n                        <input\r\n                          type={field.key === \"note\" ? \"text\" : \"number\"}\r\n                          className=\"form-control form-control-sm\"\r\n                          value={score[field.key] || \"\"}\r\n                          onChange={(e) =>\r\n                            handleScoreChange(\r\n                              student.studentid,\r\n                              chapter.chapter_id,\r\n                              field.key,\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                        />\r\n                      </td>\r\n                    ));\r\n                  })}\r\n                  <td>\r\n                    <select\r\n                      className=\"form-select form-select-sm\"\r\n                      value={report.performance || \"\"}\r\n                      onChange={(e) =>\r\n                        handleInputChange(\r\n                          student.studentid,\r\n                          \"performance\",\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                    >\r\n                      <option value=\"\">-</option>\r\n                      {abcdOptions.map((opt) => (\r\n                        <option key={opt.value} value={opt.value}>\r\n                          {opt.label}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </td>\r\n                  <td>\r\n                    <select\r\n                      className=\"form-select form-select-sm\"\r\n                      value={report.discipline || \"\"}\r\n                      onChange={(e) =>\r\n                        handleInputChange(\r\n                          student.studentid,\r\n                          \"discipline\",\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                    >\r\n                      <option value=\"\">-</option>\r\n                      {abcdOptions.map((opt) => (\r\n                        <option key={opt.value} value={opt.value}>\r\n                          {opt.label}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </td>\r\n                  <td>\r\n                    <select\r\n                      className=\"form-select form-select-sm\"\r\n                      value={report.activeness || \"\"}\r\n                      onChange={(e) =>\r\n                        handleInputChange(\r\n                          student.studentid,\r\n                          \"activeness\",\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                    >\r\n                      <option value=\"\">-</option>\r\n                      {abcdOptions.map((opt) => (\r\n                        <option key={opt.value} value={opt.value}>\r\n                          {opt.label}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </td>\r\n                  <td>\r\n                    <select\r\n                      className=\"form-select form-select-sm\"\r\n                      value={report.confidence || \"\"}\r\n                      onChange={(e) =>\r\n                        handleInputChange(\r\n                          student.studentid,\r\n                          \"confidence\",\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                    >\r\n                      <option value=\"\">-</option>\r\n                      {abcdOptions.map((opt) => (\r\n                        <option key={opt.value} value={opt.value}>\r\n                          {opt.label}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control form-control-sm\"\r\n                      value={report.teacher_note || \"\"}\r\n                      onChange={(e) =>\r\n                        handleInputChange(\r\n                          student.studentid,\r\n                          \"teacher_note\",\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control form-control-sm\"\r\n                      value={report.note || \"\"}\r\n                      onChange={(e) =>\r\n                        handleInputChange(\r\n                          student.studentid,\r\n                          \"note\",\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-success btn-sm\"\r\n                      disabled={saving[student.studentid]}\r\n                      onClick={() => handleSave(student, idx)}\r\n                    >\r\n                      {saving[student.studentid]\r\n                        ? \"Menyimpan...\"\r\n                        : report.id\r\n                        ? \"Update\"\r\n                        : \"Simpan\"}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableScoring;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/layout/Layout\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Subjects from \"./Subjects\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport FormData from \"./FormData\";\r\nimport TableScoring from \"./TableScoring\";\r\n\r\nconst TeacherScores = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const subject = searchParams.get(\"subject\");\r\n  const id = searchParams.get(\"id\");\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const subjects = user?.subjects;\r\n\r\n  const isSubjectsEmpty = !subjects || subjects.length === 0;\r\n\r\n  if (subject && id) {\r\n    return (\r\n      <Layout title=\"Penilaian\" levels={[\"teacher\"]}>\r\n        <FormData subject={subject} id={id} />\r\n\r\n        <TableScoring />\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout title=\"Penilaian\" levels={[\"teacher\"]}>\r\n      {isSubjectsEmpty ? (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"row justify-content-center\"\r\n        >\r\n          <div className=\"col-md-6 text-center\">\r\n            <div className=\"py-5\">\r\n              <div\r\n                className=\"bg-light rounded-circle mx-auto mb-4 d-flex align-items-center justify-content-center\"\r\n                style={{ width: \"100px\", height: \"100px\" }}\r\n              >\r\n                <i className=\"bi bi-journal-x display-4 text-primary\"></i>\r\n              </div>\r\n              <h4 className=\"fw-bold mb-3\">Belum Ada Mata Pelajaran</h4>\r\n              <p className=\"text-muted mb-0\">\r\n                Anda belum ditugaskan untuk mengajar mata pelajaran apapun saat\r\n                ini\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      ) : (\r\n        <Subjects subjects={subjects} user={user} />\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TeacherScores;\r\n"],"names":["Subjects","subjects","user","navigate","useNavigate","goToLink","name","id","formattedName","replace","item","hidden","y","opacity","show","jsxRuntimeExports","jsx","motion","div","className","variants","transition","staggerChildren","initial","animate","children","map","subject","jsxs","onClick","style","cursor","src","cover","window","location","origin","alt","height","objectFit","e","stopPropagation","selectStyles","menuPortal","base","zIndex","months","FormData","data","useGetChaptersQuery","searchParams","setSearchParams","useSearchParams","chapterOptions","useMemo","chapter","value","chapter_id","label","chapter_name","chapteridParam","get","classidParam","monthParam","selectedChapter","setSelectedChapter","useState","selectedClass","setSelectedClass","selectedMonth","setSelectedMonth","classOptions","chapterId","find","c","String","_a","class","cls","monthOptions","month","useEffect","length","found","opt","updateQuery","params","chapterid","classid","ReactSelect","options","onChange","option","placeholder","menuPortalTarget","document","body","styles","isDisabled","scoreFields","key","abcdOptions","TableScoring","subjectid","useSelector","state","auth","reports","setReports","saving","setSaving","error","setError","chaptersData","isLoading","loadingChapters","skip","chapters","contents","content_id","chapter_title","content_title","studentsData","loadingReports","refetch","refetchReports","useGetReportsQuery","Object","keys","studentid","scores","newReports","forEach","student","taks_score","writing_score","speaking_score","lab_score","note","createReport","useCreateReportMutation","updateReport","useUpdateReportMutation","handleInputChange","field","prev","rowSpan","colSpan","idx","report","score","s","type","handleScoreChange","target","performance","discipline","activeness","confidence","teacher_note","disabled","async","teacherid","type_report","unwrap","err","message","handleSave","TeacherScores","isSubjectsEmpty","Layout","title","levels","width"],"mappings":"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"}