{"version":3,"file":"AdminData-C2Pk5GGe.js","sources":["../../src/module/admin/data/periode/TableData.jsx","../../src/module/admin/data/periode/FormPeriode.jsx","../../src/module/admin/data/periode/DataPeriode.jsx","../../src/module/admin/data/major/TableData.jsx","../../src/module/admin/data/major/FormMajor.jsx","../../src/module/admin/data/major/DataMajor.jsx","../../src/module/admin/data/grade/FormGrade.jsx","../../src/module/admin/data/grade/TableData.jsx","../../src/module/admin/data/grade/DataGrade.jsx","../../src/module/admin/data/class/FormClass.jsx","../../src/module/admin/data/class/Students.jsx","../../src/module/admin/data/class/TableData.jsx","../../src/module/admin/data/class/UploadStudents.jsx","../../src/module/admin/data/class/DataClass.jsx","../../src/module/admin/data/AdminData.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {\r\n  useChangeStatusMutation,\r\n  useDeletePeriodeMutation,\r\n  useGetPeriodesQuery,\r\n} from \"../../../../service/api/main/ApiPeriode\";\r\nimport { useGetStudentsQuery } from \"../../../../service/api/main/ApiStudent\";\r\nimport { useGetClassQuery } from \"../../../../service/api/main/ApiClass\";\r\nimport { Button, Dropdown, Popconfirm, Switch, message } from \"antd\";\r\nimport TableLayout from \"../../../../components/table/TableLayout\";\r\nimport Edit from \"../../../../components/buttons/Edit\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nconst TableData = ({ onEdit }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const { data, isLoading } = useGetPeriodesQuery({ page, limit, search });\r\n\r\n  const [\r\n    changeStatus,\r\n    {\r\n      data: changeMessge,\r\n      isLoading: changeLoading,\r\n      isSuccess: changeSuccess,\r\n      error: changeError,\r\n    },\r\n  ] = useChangeStatusMutation();\r\n  const [\r\n    deletePeriode,\r\n    { data: delMessage, isLoading: delLoading, isSuccess, error },\r\n  ] = useDeletePeriodeMutation();\r\n  const { refetch: studentRefetch } = useGetStudentsQuery({\r\n    page,\r\n    limit,\r\n    search,\r\n  });\r\n  const { refetch: classRefetch } = useGetClassQuery({ page, limit, search });\r\n\r\n  //   Functions\r\n  const handleSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(1);\r\n  };\r\n\r\n  const handleTableChange = (pagination) => {\r\n    setPage(pagination.current);\r\n    setLimit(pagination.pageSize);\r\n  };\r\n\r\n  const handleEdit = (record) => {\r\n    onEdit(record);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const confirm = window.confirm(\r\n      \"Apakah anda yakin akan menghapus data ini?!\"\r\n    );\r\n\r\n    if (confirm) {\r\n      deletePeriode(id);\r\n    } else {\r\n      message.warning(\"Aksi dibatalkan\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (id) => {\r\n    changeStatus(id);\r\n  };\r\n\r\n  const handleSelect = (record, { key }) => {\r\n    switch (key) {\r\n      case \"edit\":\r\n        handleEdit(record);\r\n        break;\r\n\r\n      case \"delete\":\r\n        handleDelete(record.id);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  //   Effects\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      message.success(delMessage.message);\r\n    }\r\n\r\n    if (error) {\r\n      message.error(error.data.message);\r\n    }\r\n  }, [delMessage, isSuccess, error]);\r\n\r\n  useEffect(() => {\r\n    if (changeSuccess) {\r\n      studentRefetch();\r\n      classRefetch();\r\n      message.success(changeMessge.message);\r\n    }\r\n\r\n    if (changeError) {\r\n      message.error(changeError.data.message);\r\n    }\r\n  }, [changeSuccess, changeError, changeMessge]);\r\n\r\n  const columns = [\r\n    { title: \"_id\", dataIndex: \"id\", key: \"id\" },\r\n    { title: \"Periode\", dataIndex: \"name\", key: \"name\" },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"isactive\",\r\n      key: \"isactive\",\r\n      render: (text, record) => (\r\n        <Switch\r\n          checked={text}\r\n          checkedChildren=\"Aktif\"\r\n          unCheckedChildren=\"Non-aktif\"\r\n          onChange={() => handleChange(record.id)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Aksi\",\r\n      key: \"action\",\r\n      render: (record) => (\r\n        <Dropdown.Button\r\n          menu={{\r\n            items: [\r\n              {\r\n                key: \"edit\",\r\n                label: \"Edit\",\r\n              },\r\n              {\r\n                key: \"delete\",\r\n                label: \"Hapus\",\r\n              },\r\n            ],\r\n\r\n            onClick: ({ key }) => handleSelect(record, { key }),\r\n          }}\r\n        >\r\n          Pilihan Aksi\r\n        </Dropdown.Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <TableLayout\r\n      onSearch={handleSearch}\r\n      isLoading={isLoading || changeLoading || delLoading}\r\n      columns={columns}\r\n      source={data?.periodes}\r\n      rowKey=\"id\"\r\n      page={page}\r\n      limit={limit}\r\n      totalData={data?.totalData}\r\n      onChange={handleTableChange}\r\n    >\r\n      TableData\r\n    </TableLayout>\r\n  );\r\n};\r\n\r\nexport default TableData;\r\n","import { Form, Input, Modal, Spin, message } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport Cancel from \"../../../../components/buttons/Cancel\";\r\nimport { useAddPeriodeMutation } from \"../../../../service/api/main/ApiPeriode\";\r\nimport Save from \"../../../../components/buttons/Save\";\r\n\r\nconst FormPeriode = ({ title, open, setOpen, periode, setPeriode }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [addPeriode, { isLoading, data, isSuccess, error }] =\r\n    useAddPeriodeMutation();\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setPeriode();\r\n    form.resetFields();\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    if (periode) {\r\n      const data = { ...values, id: periode.id };\r\n      addPeriode(data);\r\n    } else {\r\n      form.resetFields();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      form.resetFields();\r\n\r\n      if (periode) {\r\n        form.setFieldsValue({ name: periode.name });\r\n      } else {\r\n        form.resetFields();\r\n      }\r\n    }\r\n  }, [periode, open]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      message.success(data.message);\r\n      handleClose();\r\n    }\r\n\r\n    if (error) {\r\n      message.error(error.data.message);\r\n    }\r\n  }, [data, isSuccess, error]);\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      title={title}\r\n      destroyOnHidden\r\n      onCancel={handleClose}\r\n      style={{ top: 20 }}\r\n      footer={[\r\n        <Cancel key=\"cancel\" onClick={handleClose} />,\r\n        <Save key=\"add\" onClick={() => form.submit()} />,\r\n      ]}\r\n    >\r\n      <Spin spinning={isLoading} tip=\"Memuat data...\">\r\n        <Form form={form} onFinish={handleSubmit} layout=\"vertical\">\r\n          <Form.Item\r\n            name=\"name\"\r\n            label=\"Nama Periode\"\r\n            rules={[{ required: true, message: \"Kolom wajib diisi\" }]}\r\n          >\r\n            <Input placeholder=\"Nama Periode\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Spin>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default FormPeriode;\r\n","import { Flex, Space, Typography } from \"antd\";\r\nimport Add from \"../../../../components/buttons/Add\";\r\nimport TableData from \"./TableData\";\r\nimport { useState } from \"react\";\r\nimport FormPeriode from \"./FormPeriode\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst DataPeriode = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [periode, setPeriode] = useState({});\r\n\r\n  const handleEdit = (record) => {\r\n    setPeriode(record);\r\n    setOpen(true);\r\n    setIsEdit(true);\r\n  };\r\n  return (\r\n    <Flex vertical gap=\"middle\">\r\n      <Flex align=\"center\" justify=\"space-between\">\r\n        <Title style={{ margin: 0 }} level={5}>\r\n          Mangement Periode\r\n        </Title>\r\n\r\n        <Add onClick={() => setOpen(true)} />\r\n      </Flex>\r\n\r\n      <TableData onEdit={handleEdit} />\r\n\r\n      <FormPeriode\r\n        open={open}\r\n        title={isEdit ? \"Edit Periode\" : \"Tambah Periode\"}\r\n        periode={periode}\r\n        setPeriode={() => setPeriode({})}\r\n        setOpen={() => setOpen(false)}\r\n      />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default DataPeriode;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Dropdown, message } from \"antd\";\r\nimport TableLayout from \"../../../../components/table/TableLayout\";\r\nimport {\r\n  useDeleteMajorMutation,\r\n  useGetMajorQuery,\r\n} from \"../../../../service/api/main/ApiMajor\";\r\n\r\nconst TableData = ({ onEdit }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const { data, isLoading } = useGetMajorQuery({ page, limit, search });\r\n\r\n  const [\r\n    deleteMajor,\r\n    { data: delMessage, isLoading: delLoading, isSuccess, error },\r\n  ] = useDeleteMajorMutation();\r\n\r\n  //   Functions\r\n  const handleSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(1);\r\n  };\r\n\r\n  const handleTableChange = (pagination) => {\r\n    setPage(pagination.current);\r\n    setLimit(pagination.pageSize);\r\n  };\r\n\r\n  const handleEdit = (record) => {\r\n    onEdit(record);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const confirm = window.confirm(\r\n      \"Apakah anda yakin akan menghapus data ini?!\"\r\n    );\r\n\r\n    if (confirm) {\r\n      deleteMajor(id);\r\n    } else {\r\n      message.warning(\"Aksi dibatalkan\");\r\n    }\r\n  };\r\n\r\n  const handleSelect = (record, { key }) => {\r\n    switch (key) {\r\n      case \"edit\":\r\n        handleEdit(record);\r\n        break;\r\n\r\n      case \"delete\":\r\n        handleDelete(record.id);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  //   Effects\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      message.success(delMessage.message);\r\n    }\r\n\r\n    if (error) {\r\n      message.error(error.data.message);\r\n    }\r\n  }, [delMessage, isSuccess, error]);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"No\",\r\n      key: \"no\",\r\n      render: (text, record, index) => (page - 1) * limit + index + 1,\r\n    },\r\n    { title: \"Jurusan\", dataIndex: \"name\", key: \"name\" },\r\n    {\r\n      title: \"Aksi\",\r\n      key: \"action\",\r\n      render: (record) => (\r\n        <Dropdown.Button\r\n          menu={{\r\n            items: [\r\n              {\r\n                key: \"edit\",\r\n                label: \"Edit\",\r\n              },\r\n              {\r\n                key: \"delete\",\r\n                label: \"Hapus\",\r\n              },\r\n            ],\r\n\r\n            onClick: ({ key }) => handleSelect(record, { key }),\r\n          }}\r\n        >\r\n          Pilihan Aksi\r\n        </Dropdown.Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <TableLayout\r\n      onSearch={handleSearch}\r\n      isLoading={isLoading || delLoading}\r\n      columns={columns}\r\n      source={data?.majors}\r\n      rowKey=\"id\"\r\n      page={page}\r\n      limit={limit}\r\n      totalData={data?.totalData}\r\n      onChange={handleTableChange}\r\n    >\r\n      TableData\r\n    </TableLayout>\r\n  );\r\n};\r\n\r\nexport default TableData;\r\n","import { Form, Input, Modal, Spin, message } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport Cancel from \"../../../../components/buttons/Cancel\";\r\nimport { useAddMajorMutation } from \"../../../../service/api/main/ApiMajor\";\r\nimport Save from \"../../../../components/buttons/Save\";\r\n\r\nconst FormMajor = ({ title, open, setOpen, major, setMajor }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [addMajor, { isLoading, isSuccess, error, data }] =\r\n    useAddMajorMutation();\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setMajor();\r\n    form.resetFields();\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    if (major) {\r\n      const data = { ...values, id: major.id };\r\n      console.log(data);\r\n      addMajor(data);\r\n    } else {\r\n      form.resetFields();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      form.resetFields();\r\n\r\n      if (major) {\r\n        form.setFieldsValue({ name: major.name });\r\n      } else {\r\n        form.resetFields();\r\n      }\r\n    }\r\n  }, [major, open]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      message.success(data.message);\r\n      handleClose();\r\n    }\r\n\r\n    if (error) {\r\n      message.error(error.data.message);\r\n    }\r\n  }, [data, isSuccess, error]);\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      title={title}\r\n      destroyOnHidden\r\n      onCancel={handleClose}\r\n      style={{ top: 20 }}\r\n      footer={[\r\n        <Cancel key=\"cancel\" onClick={handleClose} />,\r\n        <Save key=\"add\" onClick={() => form.submit()} />,\r\n      ]}\r\n    >\r\n      <Spin spinning={isLoading} tip=\"Memuat data...\">\r\n        <Form form={form} onFinish={handleSubmit} layout=\"vertical\">\r\n          <Form.Item\r\n            name=\"name\"\r\n            label=\"Nama Jurusan\"\r\n            rules={[{ required: true, message: \"Kolom wajib diisi\" }]}\r\n          >\r\n            <Input placeholder=\"Nama Jurusan\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Spin>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default FormMajor;\r\n","import { Flex, Typography } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport Add from \"../../../../components/buttons/Add\";\r\nimport TableData from \"./TableData\";\r\nimport FormMajor from \"./FormMajor\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst DataMajor = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [major, setMajor] = useState({});\r\n\r\n  const handleEdit = (record) => {\r\n    setMajor(record);\r\n    setIsEdit(true);\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Flex vertical gap={\"middle\"}>\r\n      <Flex align=\"center\" justify=\"space-between\">\r\n        <Title style={{ margin: 0 }} level={5}>\r\n          Management Jurusan\r\n        </Title>\r\n\r\n        <Add onClick={() => setOpen(true)} />\r\n      </Flex>\r\n\r\n      <TableData onEdit={handleEdit} />\r\n\r\n      <FormMajor\r\n        title={isEdit ? \"Edit Jurusan\" : \"Tambah Jurusan\"}\r\n        open={open}\r\n        setOpen={() => setOpen(false)}\r\n        major={major}\r\n        setMajor={() => setMajor({})}\r\n      />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default DataMajor;\r\n","import { Form, Input, Modal, Spin, message } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport Cancel from \"../../../../components/buttons/Cancel\";\r\nimport Save from \"../../../../components/buttons/Save\";\r\nimport { useAddGradeMutation } from \"../../../../service/api/main/ApiGrade\";\r\n\r\nconst FormGrade = ({ title, open, setOpen, grade, setGrade }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [addGrade, { isLoading, isSuccess, error, data }] =\r\n    useAddGradeMutation();\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setGrade();\r\n    form.resetFields();\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    if (grade) {\r\n      const data = { ...values, id: grade.id };\r\n\r\n      addGrade(data);\r\n    } else {\r\n      form.resetFields();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      form.resetFields();\r\n\r\n      if (grade) {\r\n        form.setFieldsValue({ name: grade.name });\r\n      } else {\r\n        form.resetFields();\r\n      }\r\n    }\r\n  }, [grade, open]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      message.success(data.message);\r\n      handleClose();\r\n    }\r\n\r\n    if (error) {\r\n      console.log(error);\r\n      message.error(error.data.message);\r\n    }\r\n  }, [data, isSuccess, error]);\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      title={title}\r\n      destroyOnHidden\r\n      onCancel={handleClose}\r\n      style={{ top: 20 }}\r\n      footer={[\r\n        <Cancel key=\"cancel\" onClick={handleClose} />,\r\n        <Save key=\"add\" onClick={() => form.submit()} />,\r\n      ]}\r\n    >\r\n      <Spin spinning={isLoading} tip=\"Memuat data...\">\r\n        <Form form={form} onFinish={handleSubmit} layout=\"vertical\">\r\n          <Form.Item\r\n            name=\"name\"\r\n            label=\"Nama Tingkat\"\r\n            rules={[{ required: true, message: \"Kolom wajib diisi\" }]}\r\n          >\r\n            <Input type=\"number\" placeholder=\"Nama Tingkat\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Spin>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default FormGrade;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Dropdown, message } from \"antd\";\r\nimport TableLayout from \"../../../../components/table/TableLayout\";\r\nimport {\r\n  useDeleteGradeMutation,\r\n  useGetGradeQuery,\r\n} from \"../../../../service/api/main/ApiGrade\";\r\n\r\nconst TableData = ({ onEdit }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const { data, isLoading } = useGetGradeQuery({ page, limit, search });\r\n\r\n  const [\r\n    deleteGrade,\r\n    { data: delMessage, isLoading: delLoading, isSuccess, error },\r\n  ] = useDeleteGradeMutation();\r\n\r\n  //   Functions\r\n  const handleSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(1);\r\n  };\r\n\r\n  const handleTableChange = (pagination) => {\r\n    setPage(pagination.current);\r\n    setLimit(pagination.pageSize);\r\n  };\r\n\r\n  const handleEdit = (record) => {\r\n    onEdit(record);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const confirm = window.confirm(\r\n      \"Apakah anda yakin akan menghapus data ini?!\"\r\n    );\r\n\r\n    if (confirm) {\r\n      deleteGrade(id);\r\n    } else {\r\n      message.warning(\"Aksi dibatalkan\");\r\n    }\r\n  };\r\n\r\n  const handleSelect = (record, { key }) => {\r\n    switch (key) {\r\n      case \"edit\":\r\n        handleEdit(record);\r\n        break;\r\n\r\n      case \"delete\":\r\n        handleDelete(record.id);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  //   Effects\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      message.success(delMessage.message);\r\n    }\r\n\r\n    if (error) {\r\n      message.error(error.data.message);\r\n    }\r\n  }, [delMessage, isSuccess, error]);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"No\",\r\n      key: \"no\",\r\n      render: (text, record, index) => (page - 1) * limit + index + 1,\r\n    },\r\n    { title: \"Tingkat\", dataIndex: \"name\", key: \"name\" },\r\n    {\r\n      title: \"Aksi\",\r\n      key: \"action\",\r\n      render: (record) => (\r\n        <Dropdown.Button\r\n          menu={{\r\n            items: [\r\n              {\r\n                key: \"edit\",\r\n                label: \"Edit\",\r\n              },\r\n              {\r\n                key: \"delete\",\r\n                label: \"Hapus\",\r\n              },\r\n            ],\r\n\r\n            onClick: ({ key }) => handleSelect(record, { key }),\r\n          }}\r\n        >\r\n          Pilihan Aksi\r\n        </Dropdown.Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <TableLayout\r\n      onSearch={handleSearch}\r\n      isLoading={isLoading || delLoading}\r\n      columns={columns}\r\n      source={data?.grades}\r\n      rowKey=\"id\"\r\n      page={page}\r\n      limit={limit}\r\n      totalData={data?.totalData}\r\n      onChange={handleTableChange}\r\n    >\r\n      TableData\r\n    </TableLayout>\r\n  );\r\n};\r\n\r\nexport default TableData;\r\n","import { Flex, Typography } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport Add from \"../../../../components/buttons/Add\";\r\nimport FormGrade from \"./FormGrade\";\r\nimport TableData from \"./TableData\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst DataGrade = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [grade, setGrade] = useState({});\r\n\r\n  const handleEdit = (record) => {\r\n    setGrade(record);\r\n    setIsEdit(true);\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Flex vertical gap={\"middle\"}>\r\n      <Flex align=\"center\" justify=\"space-between\">\r\n        <Title style={{ margin: 0 }} level={5}>\r\n          Management Tingkat\r\n        </Title>\r\n\r\n        <Add onClick={() => setOpen(true)} />\r\n      </Flex>\r\n\r\n      <TableData onEdit={handleEdit} />\r\n\r\n      <FormGrade\r\n        title={isEdit ? \"Edit Tingkat\" : \"Tambah Tingkat\"}\r\n        open={open}\r\n        setOpen={() => setOpen(false)}\r\n        grade={grade}\r\n        setGrade={() => setGrade({})}\r\n      />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default DataGrade;\r\n","import { Form, Input, Modal, Select, Spin, message } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport Cancel from \"../../../../components/buttons/Cancel\";\r\nimport Save from \"../../../../components/buttons/Save\";\r\nimport { useAddClassMutation } from \"../../../../service/api/main/ApiClass\";\r\nimport { useGetGradeQuery } from \"../../../../service/api/main/ApiGrade\";\r\nimport { useGetMajorQuery } from \"../../../../service/api/main/ApiMajor\";\r\n\r\nconst page = \"\";\r\nconst limit = \"\";\r\nconst search = \"\";\r\n\r\nconst FormClass = ({ title, open, setOpen, classData, setClassData }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const { data: grades } = useGetGradeQuery({ page, limit, search });\r\n  const { data: majors } = useGetMajorQuery({ page, limit, search });\r\n\r\n  const gradeOptions = grades?.map((item) => ({\r\n    value: item.id,\r\n    label: item.name,\r\n  }));\r\n  const majorOptions = majors?.map((item) => ({\r\n    value: item.id,\r\n    label: item.name,\r\n  }));\r\n\r\n  const [addClass, { isLoading, isSuccess, error, data }] =\r\n    useAddClassMutation();\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setClassData();\r\n    form.resetFields();\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    if (classData) {\r\n      const data = { ...values, id: classData.id };\r\n\r\n      addClass(data);\r\n    } else {\r\n      form.resetFields();\r\n    }\r\n  };\r\n\r\n  const handleSelectGrade = (value) => {\r\n    form.setFieldsValue({ gradeId: value });\r\n  };\r\n\r\n  const handleSelectMajor = (value) => {\r\n    form.setFieldsValue({ majorId: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      form.resetFields();\r\n\r\n      if (classData) {\r\n        form.setFieldsValue({\r\n          name: classData.name,\r\n          gradeId: classData.grade,\r\n          majorId: classData.major,\r\n        });\r\n      } else {\r\n        form.resetFields();\r\n      }\r\n    }\r\n  }, [classData, open]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      message.success(data.message);\r\n      handleClose();\r\n    }\r\n\r\n    if (error) {\r\n      message.error(error.data.message);\r\n    }\r\n  }, [data, isSuccess, error]);\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      title={title}\r\n      destroyOnHidden\r\n      onCancel={handleClose}\r\n      style={{ top: 20 }}\r\n      okText='Simpan'\r\n      cancelText='Tutup'\r\n      onOk={() => form.submit()}\r\n      confirmLoading={isLoading}\r\n      loading={isLoading}\r\n    >\r\n      <Spin spinning={isLoading} tip='Memuat data...'>\r\n        <Form form={form} onFinish={handleSubmit} layout='vertical'>\r\n          <Form.Item\r\n            name='gradeId'\r\n            label='Pilih Tingkat'\r\n            rules={[{ required: true, message: \"Wajid diisi\" }]}\r\n          >\r\n            <Select\r\n              placeholder='Pilih Tingkat'\r\n              options={gradeOptions}\r\n              onChange={handleSelectGrade}\r\n              allowClear\r\n              showSearch\r\n              filterOption={(input, option) =>\r\n                option.label.toLowerCase().includes(input.toLowerCase())\r\n              }\r\n              getPopupContainer={(triggerNode) => triggerNode.parentNode}\r\n              virtual={false}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item name='majorId' label='Pilih Jurusan'>\r\n            <Select\r\n              placeholder='Pilih Jurusan'\r\n              options={majorOptions}\r\n              onChange={handleSelectMajor}\r\n              allowClear\r\n              showSearch\r\n              filterOption={(input, option) =>\r\n                option.label.toLowerCase().includes(input.toLowerCase())\r\n              }\r\n              getPopupContainer={(triggerNode) => triggerNode.parentNode}\r\n              virtual={false}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name='name'\r\n            label='Nama Kelas'\r\n            rules={[{ required: true, message: \"Kolom wajib diisi\" }]}\r\n          >\r\n            <Input placeholder='Nama Kelas' />\r\n          </Form.Item>\r\n        </Form>\r\n      </Spin>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default FormClass;\r\n","import {\r\n  CloseOutlined,\r\n  DeleteOutlined,\r\n  ExclamationCircleFilled,\r\n  SaveOutlined, // 1. Impor ikon yang dibutuhkan\r\n} from \"@ant-design/icons\";\r\nimport { Button, Flex, Input, Modal, Space, Typography, message } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\"; // 2. Impor useEffect\r\nimport {\r\n  useAddStudentMutation,\r\n  useDeleteStudentMutation,\r\n  useGetStudentsInClassQuery,\r\n} from \"../../../../service/api/main/ApiClass\";\r\nimport TableLayout from \"../../../../components/table/TableLayout\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst Students = ({ open, onClose, classname, classid }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [nis, setNis] = useState(\"\");\r\n\r\n  const { data, isLoading, refetch } = useGetStudentsInClassQuery(\r\n    { page, limit, search, classid },\r\n    { skip: !classid }\r\n  );\r\n\r\n  const [\r\n    addStudent,\r\n    {\r\n      isLoading: addLoading,\r\n      isSuccess: addSuccess,\r\n      data: addData,\r\n      error: addError,\r\n    },\r\n  ] = useAddStudentMutation();\r\n\r\n  const [\r\n    deleteStudent,\r\n    { data: delMessage, isLoading: delLoading, isSuccess, error },\r\n  ] = useDeleteStudentMutation();\r\n\r\n  const handleAdd = () => {\r\n    addStudent({ nis, classid });\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    console.log(id);\r\n    deleteStudent(id);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(1);\r\n  };\r\n\r\n  const handleTableChange = (pagination) => {\r\n    setPage(pagination.current);\r\n    setLimit(pagination.pageSize);\r\n  };\r\n\r\n  const showConfirm = (record) => {\r\n    Modal.confirm({\r\n      title: `Yakin ingin menghapus siswa ini?`,\r\n      icon: <ExclamationCircleFilled />,\r\n      content: (\r\n        <Text strong>\r\n          {record.student_name} ({record.nis})\r\n        </Text>\r\n      ),\r\n      okText: \"Hapus\",\r\n      okButtonProps: { danger: true },\r\n      cancelText: \"Batal\",\r\n      onOk() {\r\n        handleDelete(record.student);\r\n      },\r\n      onCancel() {\r\n        message.info(\"Aksi dibatalkan\");\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (addSuccess) {\r\n      message.success(addData.message);\r\n      setNis(\"\");\r\n    }\r\n\r\n    if (addError) {\r\n      message.error(addError.data.message);\r\n    }\r\n  }, [addSuccess, addError, addData]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      message.success(delMessage?.message);\r\n      refetch();\r\n    }\r\n    if (error) {\r\n      message.error(error?.data?.message);\r\n    }\r\n  }, [isSuccess, error, delMessage, refetch]);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"No\",\r\n      key: \"no\",\r\n      render: (text, record, index) => (page - 1) * limit + index + 1,\r\n    },\r\n    {\r\n      title: \"Nama Siswa\",\r\n      dataIndex: \"student_name\",\r\n      key: \"student_name\",\r\n      render: (text, record) => (\r\n        <Space direction=\"vertical\" size={0}>\r\n          <Text>{record.student_name}</Text>\r\n          <Text type=\"secondary\" style={{ fontSize: \"12px\" }}>\r\n            NIS: {record.nis}\r\n          </Text>\r\n        </Space>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Aksi\",\r\n      key: \"action\",\r\n      // 5. Ubah render props untuk menerima `record` dan hubungkan ke `showConfirm`\r\n      render: (record) => (\r\n        <Button\r\n          danger\r\n          icon={<DeleteOutlined />}\r\n          onClick={() => showConfirm(record)}\r\n          loading={delLoading}\r\n        >\r\n          Hapus\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      title={`Daftar Siswa Kelas ${classname}`}\r\n      onCancel={onClose}\r\n      footer={[\r\n        <Button key=\"close\" onClick={onClose}>\r\n          Tutup\r\n        </Button>,\r\n      ]}\r\n      width={800}\r\n      style={{ top: 20 }}\r\n    >\r\n      <Flex vertical gap={\"middle\"}>\r\n        <Space.Compact>\r\n          <Input\r\n            placeholder=\"Masukan NIS\"\r\n            onChange={(e) => setNis(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<SaveOutlined />}\r\n            onClick={handleAdd}\r\n            disabled={addLoading}\r\n          ></Button>\r\n        </Space.Compact>\r\n\r\n        <TableLayout\r\n          onSearch={handleSearch}\r\n          isLoading={isLoading || delLoading}\r\n          columns={columns}\r\n          source={data?.students}\r\n          rowKey=\"student\"\r\n          page={page}\r\n          limit={limit}\r\n          totalData={data?.totalData}\r\n          onChange={handleTableChange}\r\n        />\r\n      </Flex>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Students;\r\n","import { useEffect, useState } from \"react\";\r\n// 1. Import Modal from 'antd'\r\nimport { Dropdown, Flex, Typography, message, Modal } from \"antd\";\r\nimport TableLayout from \"../../../../components/table/TableLayout\";\r\nimport {\r\n  useDeleteClassMutation,\r\n  useGetClassQuery,\r\n} from \"../../../../service/api/main/ApiClass\";\r\nimport Students from \"./Students\";\r\n\r\nconst { Text } = Typography;\r\n// Destructure confirm for easier use\r\nconst { confirm } = Modal;\r\n\r\nconst TableData = ({ onEdit }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [classData, setClassData] = useState(\"\");\r\n\r\n  const { data, isLoading } = useGetClassQuery({ page, limit, search });\r\n\r\n  const [\r\n    deleteClass,\r\n    { data: delMessage, isLoading: delLoading, isSuccess, error },\r\n  ] = useDeleteClassMutation();\r\n\r\n  //   Functions\r\n  const handleSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(1);\r\n  };\r\n\r\n  const handleTableChange = (pagination) => {\r\n    setPage(pagination.current);\r\n    setLimit(pagination.pageSize);\r\n  };\r\n\r\n  const handleEdit = (record) => {\r\n    onEdit(record);\r\n  };\r\n\r\n  // 2. Updated handleDelete function\r\n  const handleDelete = (id) => {\r\n    confirm({\r\n      title: \"Konfirmasi Hapus Data\",\r\n      content: \"Apakah anda yakin akan menghapus data ini?!\",\r\n      okText: \"Ya, Hapus\",\r\n      okType: \"danger\",\r\n      cancelText: \"Batal\",\r\n      onOk() {\r\n        // This function is called when the user clicks 'OK'\r\n        deleteClass(id);\r\n      },\r\n      onCancel() {\r\n        // This function is called when the user clicks 'Cancel' or closes the modal\r\n        message.warning(\"Aksi dibatalkan\");\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleOpen = (record) => {\r\n    setClassData(record);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setClassData({});\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSelect = (record, { key }) => {\r\n    switch (key) {\r\n      case \"edit\":\r\n        handleEdit(record);\r\n        break;\r\n\r\n      case \"detail\":\r\n        handleOpen(record);\r\n        break;\r\n\r\n      case \"delete\":\r\n        handleDelete(record.id);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  //   Effects\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      message.success(delMessage.message);\r\n    }\r\n\r\n    if (error) {\r\n      message.error(error.data.message);\r\n    }\r\n  }, [delMessage, isSuccess, error]);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"No\",\r\n      key: \"no\",\r\n      render: (text, record, index) => (page - 1) * limit + index + 1,\r\n    },\r\n    { title: \"Tingkat\", dataIndex: \"grade_name\", key: \"grade_name\" },\r\n    { title: \"Jurusan\", dataIndex: \"major_name\", key: \"major_name\" },\r\n    {\r\n      title: \"Kelas\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (record, text) => (\r\n        <Flex vertical gap={\"small\"}>\r\n          <Text>{record}</Text>\r\n          <small>id : {text.id}</small>\r\n        </Flex>\r\n      ),\r\n    },\r\n    { title: \"Jumlah Siswa\", dataIndex: \"students\", key: \"students\" },\r\n    {\r\n      title: \"Aksi\",\r\n      key: \"action\",\r\n      render: (record) => (\r\n        <Dropdown.Button\r\n          menu={{\r\n            items: [\r\n              {\r\n                key: \"edit\",\r\n                label: \"Edit\",\r\n              },\r\n              {\r\n                key: \"detail\",\r\n                label: \"Detail\",\r\n              },\r\n              {\r\n                key: \"delete\",\r\n                label: \"Hapus\",\r\n                danger: true,\r\n              },\r\n            ],\r\n\r\n            onClick: ({ key }) => handleSelect(record, { key }),\r\n          }}\r\n        >\r\n          Pilihan Aksi\r\n        </Dropdown.Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TableLayout\r\n        onSearch={handleSearch}\r\n        isLoading={isLoading || delLoading}\r\n        columns={columns}\r\n        source={data?.classes}\r\n        rowKey=\"id\"\r\n        page={page}\r\n        limit={limit}\r\n        totalData={data?.totalData}\r\n        onChange={handleTableChange}\r\n      />\r\n\r\n      <Students\r\n        open={open}\r\n        onClose={() => handleClose()}\r\n        classname={classData?.name}\r\n        classid={classData?.id}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableData;\r\n","import {\r\n  Alert,\r\n  Button,\r\n  Flex,\r\n  Modal,\r\n  Space,\r\n  Table,\r\n  Tag,\r\n  Typography,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { useUploadStudentsMutation } from \"../../../../service/api/main/ApiClass\";\r\nimport {\r\n  CloseCircleOutlined,\r\n  FileExcelOutlined,\r\n  InboxOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { Text, Title } = Typography;\r\n\r\nconst UploadStudents = ({ open, onClose }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [bulk, setBulk] = useState([]);\r\n  const [uploadStudents, { isLoading, isSuccess, error, data }] =\r\n    useUploadStudentsMutation();\r\n\r\n  const previewColumns = [\r\n    { title: \"TAHUN MASUK\", dataIndex: 0, key: \"tahunMasuk\" },\r\n    { title: \"NIS\", dataIndex: 1, key: \"nis\" },\r\n    { title: \"NAMA LENGKAP\", dataIndex: 2, key: \"nama\" },\r\n    { title: \"Kelamin\", dataIndex: 3, key: \"kelamin\" },\r\n    { title: \"Kelas\", dataIndex: 4, key: \"kelas\" },\r\n  ];\r\n\r\n  const handleDownload = () => {\r\n    window.open(\"/template/template_siswa.xlsx\", \"_blank\");\r\n  };\r\n\r\n  const handleFile = () => {\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        try {\r\n          const data = new Uint8Array(e.target.result);\r\n          const workbook = XLSX.read(data, { type: \"array\" });\r\n          const sheetName = workbook.SheetNames[0];\r\n          const sheet = workbook.Sheets[sheetName];\r\n          const jsonData = XLSX.utils.sheet_to_json(sheet, {\r\n            header: 1,\r\n            range: 1,\r\n          });\r\n\r\n          const filteredData = jsonData\r\n            .map((row) => row.slice(0, 5))\r\n            .filter((row) =>\r\n              row.some(\r\n                (cell) => cell !== null && cell !== undefined && cell !== \"\"\r\n              )\r\n            );\r\n\r\n          if (filteredData.length === 0) {\r\n            message.error(\"Tidak ada data dalam file atau template salah.\");\r\n            setFile(null);\r\n            return;\r\n          }\r\n\r\n          setBulk(filteredData);\r\n          message.success(`Jumlah data terbaca ${filteredData.length} siswa.`);\r\n        } catch (error) {\r\n          message.error(\r\n            \"Gagal memproses data. Pastikan template yang digunakan benar\"\r\n          );\r\n          console.error(\"Error parsing Excel file:\", error);\r\n        }\r\n      };\r\n      reader.readAsArrayBuffer(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (bulk.length === 0) {\r\n      message.warning(\"Tidak ada data yang diupload, pastikan template sesuai\");\r\n      return;\r\n    } else {\r\n      uploadStudents(bulk);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setFile(null);\r\n    setBulk([]);\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (file) {\r\n      handleFile();\r\n    } else {\r\n      setBulk([]);\r\n    }\r\n  }, [file]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      message.success(data.message);\r\n      setFile(null);\r\n      setBulk([]);\r\n      onClose();\r\n    }\r\n\r\n    if (error) {\r\n      message.error(error.data.message);\r\n    }\r\n  }, [isSuccess, data, error]);\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Bulk Upload Students\"\r\n      open={open}\r\n      onCancel={handleCancel}\r\n      destroyOnHidden\r\n      width={700}\r\n      style={{ top: 20 }}\r\n      okText=\"Simpan\"\r\n      cancelText=\"Tutup\"\r\n      onOk={handleSubmit}\r\n      confirmLoading={isLoading}\r\n      loading={isLoading}\r\n    >\r\n      <Space direction=\"vertical\" style={{ width: \"100%\" }} size=\"large\">\r\n        <Alert\r\n          message=\"Follow these steps\"\r\n          description={\r\n            <Space direction=\"vertical\" size={2}>\r\n              <Text>1. Unduh template excel yang sudah disediakan.</Text>\r\n              <Text>2. Isikan data siswa berdasarkan kolom yang tersedia.</Text>\r\n              <Text>3. Upload kembali file yang sudah diisi.</Text>\r\n\r\n              <Button type=\"primary\" size=\"small\" onClick={handleDownload}>\r\n                Download Template\r\n              </Button>\r\n            </Space>\r\n          }\r\n          type=\"info\"\r\n          showIcon\r\n        />\r\n\r\n        {!file ? (\r\n          <Dragger\r\n            name=\"file\"\r\n            accept=\".xlsx, .xls, .csv\"\r\n            beforeUpload={(selectedFile) => {\r\n              setFile(selectedFile);\r\n              return false;\r\n            }}\r\n          >\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <InboxOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">\r\n              Click or drag file to this area to upload\r\n            </p>\r\n            <p className=\"ant-upload-hint\">\r\n              Ensure the file matches the template format.\r\n            </p>\r\n          </Dragger>\r\n        ) : (\r\n          <Space direction=\"vertical\" style={{ width: \"100%\" }}>\r\n            <Flex\r\n              align=\"center\"\r\n              justify=\"space-between\"\r\n              style={{\r\n                background: \"#f0f0f0\",\r\n                padding: \"8px 12px\",\r\n                borderRadius: \"6px\",\r\n              }}\r\n            >\r\n              <Flex align=\"center\" gap=\"small\">\r\n                <FileExcelOutlined style={{ color: \"#217346\", fontSize: 20 }} />\r\n                <Text strong>{file.name}</Text>\r\n                <Tag color=\"green\">{bulk.length} records found</Tag>\r\n              </Flex>\r\n              <Button\r\n                type=\"text\"\r\n                danger\r\n                icon={<CloseCircleOutlined />}\r\n                onClick={() => setFile(null)}\r\n              >\r\n                Change File\r\n              </Button>\r\n            </Flex>\r\n\r\n            {bulk.length > 0 && (\r\n              <>\r\n                <Title level={5} style={{ marginTop: 16 }}>\r\n                  Data Preview\r\n                </Title>\r\n                <Table\r\n                  columns={previewColumns}\r\n                  dataSource={bulk.map((row, index) => ({\r\n                    key: index,\r\n                    ...row,\r\n                  }))}\r\n                  size=\"small\"\r\n                  pagination={{ pageSize: 5, showSizeChanger: false }}\r\n                  scroll={{ y: 240 }}\r\n                />\r\n              </>\r\n            )}\r\n          </Space>\r\n        )}\r\n      </Space>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UploadStudents;\r\n","import { Flex, Space, Typography } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport Add from \"../../../../components/buttons/Add\";\r\nimport FormClass from \"./FormClass\";\r\nimport TableData from \"./TableData\";\r\nimport Upload from \"../../../../components/buttons/Upload\";\r\nimport UploadStudents from \"./UploadStudents\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst DataClass = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [classData, setClassData] = useState({});\r\n  const [upload, setUpload] = useState(false);\r\n\r\n  const handleEdit = (record) => {\r\n    setClassData(record);\r\n    setIsEdit(true);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setUpload(false);\r\n  };\r\n\r\n  return (\r\n    <Flex vertical gap={\"middle\"}>\r\n      <Flex align=\"center\" justify=\"space-between\">\r\n        <Title style={{ margin: 0 }} level={5}>\r\n          Management Kelas\r\n        </Title>\r\n\r\n        <Space>\r\n          <Add onClick={() => setOpen(true)} />\r\n\r\n          <Upload onClick={() => setUpload(true)} />\r\n        </Space>\r\n      </Flex>\r\n\r\n      <TableData onEdit={handleEdit} />\r\n\r\n      <FormClass\r\n        title={isEdit ? \"Edit Kelas\" : \"Tambah Kelas\"}\r\n        open={open}\r\n        setOpen={() => setOpen(false)}\r\n        classData={classData}\r\n        setClassData={() => setClassData({})}\r\n      />\r\n\r\n      <UploadStudents open={upload} onClose={() => setUpload(false)} />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default DataClass;\r\n","import React from \"react\";\r\nimport MainLayout from \"../../../components/layout/MainLayout\";\r\nimport { Tabs } from \"antd\";\r\nimport DataPeriode from \"./periode/DataPeriode\";\r\nimport DataMajor from \"./major/DataMajor\";\r\nimport DataGrade from \"./grade/DataGrade\";\r\nimport DataClass from \"./class/DataClass\";\r\n\r\nconst AdminData = () => {\r\n  const items = [\r\n    { label: \"Periode\", key: \"1\", children: <DataPeriode /> },\r\n    { label: \"Jurusan\", key: \"2\", children: <DataMajor /> },\r\n    { label: \"Tingkat\", key: \"3\", children: <DataGrade /> },\r\n    { label: \"Kelas\", key: \"4\", children: <DataClass /> },\r\n  ];\r\n  return (\r\n    <MainLayout title={\"Management Data pokok\"} levels={[\"admin\"]}>\r\n      <Tabs defaultActiveKey=\"1\" centered items={items} />\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default AdminData;\r\n"],"names":["TableData","onEdit","page","setPage","useState","limit","setLimit","search","setSearch","data","isLoading","useGetPeriodesQuery","changeStatus","changeMessge","changeLoading","isSuccess","changeSuccess","error","changeError","useChangeStatusMutation","deletePeriode","delMessage","delLoading","useDeletePeriodeMutation","refetch","studentRefetch","useGetStudentsQuery","classRefetch","useGetClassQuery","handleSelect","record","key","handleEdit","id","window","confirm","message","warning","useEffect","success","columns","title","dataIndex","render","text","jsx","Switch","checked","checkedChildren","unCheckedChildren","onChange","handleChange","Dropdown","Button","menu","items","label","onClick","children","TableLayout","onSearch","value","source","periodes","rowKey","totalData","pagination","current","pageSize","FormPeriode","open","setOpen","periode","setPeriode","form","Form","useForm","addPeriode","useAddPeriodeMutation","handleClose","resetFields","setFieldsValue","name","Modal","destroyOnHidden","onCancel","style","top","footer","Cancel","Save","submit","Spin","spinning","tip","onFinish","values","layout","Item","rules","required","Input","placeholder","Title","Typography","DataPeriode","isEdit","setIsEdit","jsxs","Flex","vertical","gap","align","justify","margin","level","Add","useGetMajorQuery","deleteMajor","useDeleteMajorMutation","index","majors","FormMajor","major","setMajor","addMajor","useAddMajorMutation","console","log","DataMajor","FormGrade","grade","setGrade","addGrade","useAddGradeMutation","type","useGetGradeQuery","deleteGrade","useDeleteGradeMutation","grades","DataGrade","FormClass","classData","setClassData","gradeOptions","map","item","majorOptions","addClass","useAddClassMutation","gradeId","majorId","okText","cancelText","onOk","confirmLoading","loading","Select","options","allowClear","showSearch","filterOption","input","option","toLowerCase","includes","getPopupContainer","triggerNode","parentNode","virtual","Text","Students","onClose","classname","classid","nis","setNis","useGetStudentsInClassQuery","skip","addStudent","addLoading","addSuccess","addData","addError","useAddStudentMutation","deleteStudent","useDeleteStudentMutation","showConfirm","icon","ExclamationCircleFilled","content","strong","student_name","okButtonProps","danger","student","info","Space","direction","size","fontSize","DeleteOutlined","width","Compact","e","target","SaveOutlined","disabled","students","deleteClass","useDeleteClassMutation","handleOpen","okType","Fragment","classes","Dragger","Upload","UploadStudents","file","setFile","bulk","setBulk","uploadStudents","useUploadStudentsMutation","reader","FileReader","onload","Uint8Array","result","workbook","XLSX.read","sheetName","SheetNames","sheet","Sheets","filteredData","XLSX.utils","sheet_to_json","header","range","row","slice","filter","some","cell","length","readAsArrayBuffer","handleFile","async","Alert","description","showIcon","background","padding","borderRadius","FileExcelOutlined","color","Tag","CloseCircleOutlined","marginTop","Table","dataSource","showSizeChanger","scroll","y","accept","beforeUpload","selectedFile","className","InboxOutlined","DataClass","upload","setUpload","AdminData","MainLayout","levels","Tabs","defaultActiveKey","centered"],"mappings":"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"}