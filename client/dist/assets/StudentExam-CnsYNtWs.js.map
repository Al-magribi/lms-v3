{"version":3,"file":"StudentExam-CnsYNtWs.js","sources":["../../src/module/cbt/student/exam/ExamList.jsx","../../src/module/student/exam/StudentExam.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useGetExamsByClassQuery } from \"../../../../service/api/cbt/ApiExam\";\r\nimport {\r\n  List,\r\n  Card,\r\n  Input,\r\n  Tag,\r\n  Space,\r\n  Button,\r\n  Typography,\r\n  Flex,\r\n  Tooltip,\r\n  Pagination,\r\n  Skeleton,\r\n  Grid, // Gunakan Skeleton untuk loading state yang lebih baik\r\n} from \"antd\";\r\nimport {\r\n  ClockCircleOutlined,\r\n  UserOutlined,\r\n  CheckCircleOutlined,\r\n  CloseCircleOutlined,\r\n  KeyOutlined,\r\n  LoginOutlined, // Ikon untuk tombol \"Ikuti Ujian\"\r\n} from \"@ant-design/icons\";\r\n\r\nconst { screen } = Grid;\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Search } = Input;\r\n\r\nconst ExamList = ({ classid }) => {\r\n  // State untuk manajemen paginasi dan pencarian\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(9); // Sesuaikan limit agar pas dengan grid (misal kelipatan 3)\r\n  const [search, setSearch] = useState(\"\");\r\n  const [debounced, setDebounced] = useState(\"\");\r\n\r\n  // RTK Query hook\r\n  const { data, isLoading, isFetching } = useGetExamsByClassQuery(\r\n    { classid, page, limit, search: debounced },\r\n    { skip: !classid }\r\n  );\r\n\r\n  // Efek untuk debouncing\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setDebounced(search);\r\n      setPage(1);\r\n    }, 500);\r\n    return () => clearTimeout(timeout);\r\n  }, [search]);\r\n\r\n  // Handler untuk paginasi\r\n  const handlePageChange = (newPage, newPageSize) => {\r\n    setPage(newPage);\r\n    setLimit(newPageSize);\r\n  };\r\n\r\n  const loading = isLoading || isFetching;\r\n\r\n  return (\r\n    <Space direction=\"vertical\" size=\"large\" style={{ width: \"100%\" }}>\r\n      {/* Header: Judul dan Pencarian */}\r\n      <Card>\r\n        <Flex justify=\"space-between\" align=\"center\">\r\n          <Title level={5} style={{ margin: 0 }}>\r\n            Daftar Ujian Tersedia\r\n          </Title>\r\n          <Search\r\n            placeholder=\"Cari nama ujian...\"\r\n            allowClear\r\n            onSearch={(value) => setSearch(value)}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            style={{ width: 200 }}\r\n            value={search}\r\n          />\r\n        </Flex>\r\n      </Card>\r\n\r\n      {/* Daftar Ujian dalam Bentuk Kartu */}\r\n      <List\r\n        loading={loading}\r\n        grid={{\r\n          gutter: 16,\r\n          xs: 1, // 1 kolom di layar extra small\r\n          sm: 2, // 2 kolom di layar small\r\n          md: 2, // 2 kolom di layar medium\r\n          lg: 3, // 3 kolom di layar large\r\n          xl: 3, // 3 kolom di layar extra large\r\n          xxl: 3, // 3 kolom di layar extra extra large\r\n        }}\r\n        dataSource={data?.exams || []}\r\n        renderItem={(exam) => (\r\n          <List.Item>\r\n            <Card\r\n              hoverable\r\n              title={\r\n                <Flex justify=\"space-between\" align=\"center\">\r\n                  <Text style={{ fontWeight: \"bold\" }} ellipsis>\r\n                    {exam.name}\r\n                  </Text>\r\n                  <Tag\r\n                    icon={\r\n                      exam.isactive ? (\r\n                        <CheckCircleOutlined />\r\n                      ) : (\r\n                        <CloseCircleOutlined />\r\n                      )\r\n                    }\r\n                    color={exam.isactive ? \"success\" : \"error\"}\r\n                  >\r\n                    {exam.isactive ? \"Aktif\" : \"Selesai\"}\r\n                  </Tag>\r\n                </Flex>\r\n              }\r\n              actions={[\r\n                <Tooltip\r\n                  key=\"take-exam\"\r\n                  title={\r\n                    !exam.isactive\r\n                      ? \"Ujian ini tidak sedang aktif\"\r\n                      : \"Masuk ke ruang ujian\"\r\n                  }\r\n                >\r\n                  {/* Tombol akan nonaktif jika ujian tidak aktif */}\r\n                  <Button\r\n                    type=\"primary\"\r\n                    icon={<LoginOutlined />}\r\n                    disabled={!exam.isactive}\r\n                    style={{ width: \"90%\" }}\r\n                  >\r\n                    Ikuti Ujian\r\n                  </Button>\r\n                </Tooltip>,\r\n              ]}\r\n            >\r\n              <Space direction=\"vertical\" style={{ width: \"100%\" }}>\r\n                <Text type=\"secondary\">\r\n                  <UserOutlined style={{ marginRight: 8 }} />\r\n                  {exam.teacher_name}\r\n                </Text>\r\n                <Text type=\"secondary\">\r\n                  <ClockCircleOutlined style={{ marginRight: 8 }} />\r\n                  Durasi: {exam.duration} menit\r\n                </Text>\r\n              </Space>\r\n            </Card>\r\n          </List.Item>\r\n        )}\r\n      />\r\n\r\n      {/* Paginasi di Bawah Daftar */}\r\n      {!loading && data?.totalData > 0 && (\r\n        <Flex justify=\"center\">\r\n          <Pagination\r\n            current={page}\r\n            pageSize={limit}\r\n            total={data?.totalData || 0}\r\n            onChange={handlePageChange}\r\n            showSizeChanger\r\n            showTotal={(total, range) =>\r\n              `${range[0]}-${range[1]} dari ${total} Ujian`\r\n            }\r\n          />\r\n        </Flex>\r\n      )}\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default ExamList;\r\n","import { useSelector } from \"react-redux\";\r\nimport MainLayout from \"../../../components/layout/MainLayout\";\r\nimport ExamList from \"../../cbt/student/exam/ExamList\";\r\n\r\nconst StudentExam = () => {\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  return (\r\n    <MainLayout title={`Daftr Ujian Kelas ${user?.class}`} levels={[\"student\"]}>\r\n      <ExamList classid={user?.class_id} />\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default StudentExam;\r\n"],"names":["Title","Text","Typography","Search","Input","ExamList","classid","page","setPage","useState","limit","setLimit","search","setSearch","debounced","setDebounced","data","isLoading","isFetching","useGetExamsByClassQuery","skip","useEffect","timeout","setTimeout","clearTimeout","loading","jsxs","Space","direction","size","style","width","children","jsx","Card","Flex","justify","align","level","margin","placeholder","allowClear","onSearch","value","onChange","e","target","List","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","exams","renderItem","exam","Item","hoverable","title","fontWeight","ellipsis","name","Tag","icon","isactive","CheckCircleOutlined","CloseCircleOutlined","color","actions","Tooltip","Button","type","LoginOutlined","disabled","UserOutlined","marginRight","teacher_name","ClockCircleOutlined","duration","totalData","Pagination","current","pageSize","total","newPage","newPageSize","showSizeChanger","showTotal","range","StudentExam","user","useSelector","state","auth","MainLayout","class","levels","class_id"],"mappings":"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"}