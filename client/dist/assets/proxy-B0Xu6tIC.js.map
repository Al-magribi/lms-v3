{"version":3,"file":"proxy-B0Xu6tIC.js","sources":["../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/motion-utils/dist/es/array.mjs","../../node_modules/motion-utils/dist/es/clamp.mjs","../../node_modules/motion-utils/dist/es/global-config.mjs","../../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/pipe.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/subscription-manager.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../../node_modules/motion-utils/dist/es/easing/back.mjs","../../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../../node_modules/motion-utils/dist/es/easing/circ.mjs","../../node_modules/motion-utils/dist/es/easing/ease.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../../node_modules/motion-dom/dist/es/frameloop/order.mjs","../../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../../node_modules/motion-dom/dist/es/animation/drivers/driver-frameloop.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../../node_modules/motion-dom/dist/es/value/types/test.mjs","../../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../../node_modules/motion-dom/dist/es/value/types/auto.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../../node_modules/motion-dom/dist/es/value/types/int.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/motion-dom/dist/es/value/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.count = 0;\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this.count++;\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n    }\n    teardown() {\n        this.notifyFinished();\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForced = false) {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForced);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n        /**\n         * TODO: In a breaking change, we should replace this with `.notifyCancel()`\n         */\n        this.animation.oncancel = () => this.notifyFinished();\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!motionValue ||\n        !motionValue.owner ||\n        !(motionValue.owner.current instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            else {\n                this.keyframeResolver?.cancel();\n            }\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        this.animation.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (target instanceof HTMLElement) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.9.1\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { transformPropOrder } from 'motion-dom';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { warnOnce } from 'motion-utils';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.9.2\", `Attempting to mix Motion versions ${nextValue.version} with 12.9.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["LayoutGroupContext","createContext","useConstant","init","ref","useRef","current","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","PresenceContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","usePresence","subscribe","context","useContext","isPresent","onExitComplete","register","id","useId","safeToRemove","useCallback","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","clamp","min","max","v","MotionGlobalConfig","isNumericalString","test","isZeroValueString","memo","callback","result","noop","any","combineFunctions","a","b","pipe","transformers","reduce","progress","from","to","value","toFromDifference","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","c","numSubscriptions","length","i","getSize","clear","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","easeIn","easeOut","easeInOut","isBezierDefinition","Array","isArray","easingLookup","linear","easingDefinitionToFunction","definition","x1","y1","x2","y2","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","has","step","schedule","keepAlive","immediate","queue","cancel","delete","process","frameData","forEach","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","time","set","newTime","queueMicrotask","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","number","parse","parseFloat","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","_a","_b","getAnimatableNone","parsed","transformer","map","hueToRgb","q","mixImmediate","mixNumber","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","start","stop","generateLinearEasing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","optionsOrVisualDuration","visualDuration","keyframes","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","interpolate","input","isClamp","ease","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","applyToOptions","generatorOptions","createGenerator","createGeneratorEasing","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","transition","WithPromise","count","updateFinished","finished","_finished","Promise","resolve","notifyFinished","then","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","currentTime","holdTime","playbackSpeed","motionValue","updatedAt","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","transformPropOrder","transformProps","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","top","_bbox","left","bottom","right","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","resume","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","animation","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","oncancel","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","setWithVelocity","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","owner","HTMLElement","transformTemplate","getProps","supportsBrowserAnimation","catch","pendingTimeline","_onReject","finally","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","getValueTransition","positionalKeys","testValueType","dimensionValueTypes","findDimensionValueType","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","distance","perspective","transformPerspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","microtask","cancelMicrotask","isDragging","isDragActive","setupGesture","elementOrSelector","elements","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tagName","tabIndex","hasAttribute","MotionValue","version","canTrackVelocity","events","updateAndNotify","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","getVelocity","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","valueTypes","getValueAsType","LazyContext","strict","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","MotionContext","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","initial","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","visualState","externalRef","instance","onMount","mount","unmount","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","isMounted","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","reactExports","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","children","jsx","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","scaleCorrectors","isForcedMotionValue","isMotionValue","translateAlias","numTransforms","buildHTMLStyles","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","transformBox","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","getValueState","resolveVariantFromProps","custom","resolveMotionValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","prevProps","newValues","liveStyle","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","toUpperCase","svgMotionConfig","createMotionComponentFactory","resolveVariant","isKeyframesTarget","setMotionValue","hasValue","addValue","addValueToWillChange","willChange","WillChange","newWillChange","getOptimisedAppearId","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","all","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","prevAnimate","arguments","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","matches","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","motion"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247]}