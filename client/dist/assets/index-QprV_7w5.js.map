{"version":3,"file":"index-QprV_7w5.js","sources":["../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/react-chartjs-2/dist/index.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.8\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(props, ref) {\n    const { height = 150, width = 300, redraw = false, datasetIdKey, type, data, options, plugins = [], fallbackContent, updateMode, ...canvasProps } = props;\n    const canvasRef = useRef(null);\n    const chartRef = useRef(null);\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options: options && {\n                ...options\n            },\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update(updateMode);\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets,\n        updateMode\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        destroyChart();\n        setTimeout(renderChart);\n    }, [\n        type\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart();\n    }, []);\n    return /*#__PURE__*/ React.createElement(\"canvas\", {\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width,\n        ...canvasProps\n    }, fallbackContent);\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return /*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, {\n            ...props,\n            ref: ref,\n            type: type\n        }));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","toRadians","degrees","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","array","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","property","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","count","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","__publicField","BarController","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","animationsDisabled","pointCount","distanceToDefinedLo","findIndex","distanceToDefinedHi","_getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","_scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart$1","_a","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","Chart","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_fullLoop","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","getPointPositionForValue","_getTargetValue","getDistanceFromCenterForValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","_setMinAndMaxByKey","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","destroyChart","useEffect","nextOptions","setOptions","React","createElement","role","reactExports","forwardRef","createTypedChart","registerables","Line","Bar","Doughnut","Pie"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}