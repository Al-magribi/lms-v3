{"version":3,"file":"ExamReport-uWfOLoWz.js","sources":["../../src/page/cbt/exam/report/Filters.jsx","../../src/page/cbt/exam/report/components/ScoreSummary.jsx","../../src/page/cbt/exam/report/components/StudentInfo.jsx","../../src/page/cbt/exam/report/components/AnswerItem.jsx","../../src/page/cbt/exam/report/AnswerSheet.jsx","../../src/page/cbt/exam/report/printAnswerSheet.js","../../src/page/cbt/exam/report/TableData.jsx","../../src/page/cbt/exam/report/ScoreChart.jsx","../../src/page/cbt/exam/report/ScoreList.jsx","../../src/page/cbt/exam/report/ExamReport.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useGetFilterQuery } from \"../../../../controller/api/log/ApiLog\";\r\n\r\nconst Filters = ({\r\n  classid,\r\n  setClassid,\r\n  examid,\r\n  name,\r\n  token,\r\n  onRefetch,\r\n  activeView,\r\n  setActiveView,\r\n  onExport,\r\n}) => {\r\n  const [lastUpdateTime, setLastUpdateTime] = useState(null);\r\n  const { data: classes, refetch: refetchClasses } = useGetFilterQuery(\r\n    { exam: examid },\r\n    { skip: !examid }\r\n  );\r\n\r\n  const handleRefetch = () => {\r\n    setLastUpdateTime(new Date().toLocaleString());\r\n    // Refetch all data\r\n    refetchClasses();\r\n    onRefetch();\r\n  };\r\n\r\n  return (\r\n    <div className='card my-1'>\r\n      <div className='card-body d-flex justify-content-between align-items-center'>\r\n        <div className='d-flex flex-column gap-1 align-items-start'>\r\n          <div className='d-flex gap-2 align-items-center'>\r\n            <p className='m-0 h5'>{name?.replace(/-/g, \" \")}</p>\r\n            <span className='badge bg-primary m-0'>{token}</span>\r\n          </div>\r\n\r\n          {lastUpdateTime && (\r\n            <span className='badge bg-danger'>\r\n              Terakhir diperbarui: {lastUpdateTime}\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        <div className='btn-group'>\r\n          <button\r\n            className={`btn btn-sm ${\r\n              activeView === \"table\" ? \"btn-success\" : \"btn-outline-success\"\r\n            }`}\r\n            onClick={() => setActiveView(\"table\")}>\r\n            <i className='bi bi-person-lines-fill'></i>\r\n          </button>\r\n          <button\r\n            className={`btn btn-sm ${\r\n              activeView === \"chart\" ? \"btn-success\" : \"btn-outline-success\"\r\n            }`}\r\n            onClick={() => setActiveView(\"chart\")}>\r\n            <i className='bi bi-bar-chart'></i>\r\n          </button>\r\n          <button\r\n            className={`btn btn-sm ${\r\n              activeView === \"list\" ? \"btn-success\" : \"btn-outline-success\"\r\n            }`}\r\n            onClick={() => setActiveView(\"list\")}>\r\n            <i className='bi bi-file-earmark-excel'></i>\r\n          </button>\r\n\r\n          {(activeView === \"table\" || activeView === \"list\") && (\r\n            <button\r\n              className='btn btn-sm btn-primary'\r\n              onClick={onExport}\r\n              title='Export to Excel'>\r\n              <i className='bi bi-file-earmark-arrow-down'></i>\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <div className='btn-group'>\r\n          {classes?.map((item) => (\r\n            <button\r\n              key={item.id}\r\n              className={`btn btn-sm ${\r\n                classid === item.id ? \"btn-secondary\" : \"btn-outline-secondary\"\r\n              }`}\r\n              onClick={() => setClassid(item.id)}>\r\n              {item.name}\r\n            </button>\r\n          ))}\r\n          <button\r\n            className='btn btn-sm btn-dark'\r\n            onClick={() => setClassid(\"\")}>\r\n            <i className='bi bi-recycle'></i>\r\n          </button>\r\n\r\n          <button className='btn btn-sm btn-danger' onClick={handleRefetch}>\r\n            <i className='bi bi-repeat'></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\n\r\nconst ScoreSummary = ({ studentData }) => {\r\n  return (\r\n    <div className='card mb-3'>\r\n      <div className='card-body'>\r\n        <h5 className='card-title mb-3'>Ringkasan Nilai</h5>\r\n        <div className='row'>\r\n          <div className='col-md-4'>\r\n            <div className='d-flex justify-content-between mb-2'>\r\n              <span>Jawaban Benar:</span>\r\n              <span className='badge bg-success'>{studentData.correct}</span>\r\n            </div>\r\n            <div className='d-flex justify-content-between mb-2'>\r\n              <span>Jawaban Salah:</span>\r\n              <span className='badge bg-danger'>{studentData.incorrect}</span>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-4'>\r\n            <div className='d-flex justify-content-between mb-2'>\r\n              <span>Nilai PG:</span>\r\n              <span className='badge bg-primary'>{studentData.pg_score}</span>\r\n            </div>\r\n            <div className='d-flex justify-content-between mb-2'>\r\n              <span>Nilai Essay:</span>\r\n              <span className='badge bg-info'>{studentData.essay_score}</span>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-4'>\r\n            <div className='d-flex justify-content-between mb-2'>\r\n              <span>Total Nilai:</span>\r\n              <span className='badge bg-success fs-5'>{studentData.score}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreSummary;\r\n","import React from \"react\";\r\n\r\nconst StudentInfo = ({ studentData, name }) => {\r\n  return (\r\n    <div className='card mb-3'>\r\n      <div className='card-body'>\r\n        <h5 className='card-title mb-3'>Lembar Jawaban</h5>\r\n        <table className='table table-sm table-borderless mb-0'>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <strong>NIS</strong>\r\n              </td>\r\n              <td>: {studentData.student_nis}</td>\r\n              <td>\r\n                <strong>Tingkat</strong>\r\n              </td>\r\n              <td>: {studentData.student_grade}</td>\r\n              <td>\r\n                <strong>Ujian</strong>\r\n              </td>\r\n              <td>: {name.replace(/-/g, \" \")}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <strong>Nama</strong>\r\n              </td>\r\n              <td>: {studentData.student_name}</td>\r\n              <td>\r\n                <strong>Kelas</strong>\r\n              </td>\r\n              <td>: {studentData.student_class}</td>\r\n              <td>\r\n                <strong>Tanggal</strong>\r\n              </td>\r\n              <td>\r\n                :{\" \"}\r\n                {studentData.log_exam\r\n                  ? new Date(studentData.log_exam).toLocaleString(\"id-ID\", {\r\n                      weekday: \"long\",\r\n                      day: \"2-digit\",\r\n                      month: \"long\",\r\n                      year: \"numeric\",\r\n                      hour: \"2-digit\",\r\n                      minute: \"2-digit\",\r\n                      hour12: false,\r\n                    })\r\n                  : \"-\"}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentInfo;\r\n","import React from \"react\";\r\n\r\nconst AnswerItem = ({\r\n  answer,\r\n  index,\r\n  isTeacherOrAdmin,\r\n  gradingAnswers,\r\n  setGradingAnswers,\r\n  handleGradeEssay,\r\n  isGrading,\r\n}) => {\r\n  return (\r\n    <div className='card mb-3'>\r\n      <div className='card-body'>\r\n        <div className='d-flex justify-content-between align-items-center mb-2'>\r\n          <h6 className='card-title mb-0'>\r\n            <span className='badge bg-primary'>Pertanyaan {index + 1}</span>\r\n          </h6>\r\n          <span\r\n            className={`badge ${answer.point > 0 ? \"bg-success\" : \"bg-danger\"}`}\r\n          >\r\n            {answer.point} Poin\r\n          </span>\r\n        </div>\r\n        <p\r\n          className='card-text'\r\n          dangerouslySetInnerHTML={{ __html: answer.question_text }}\r\n        ></p>\r\n        <div className='mt-3'>\r\n          {answer.answer ? (\r\n            <div className='d-flex gap-4'>\r\n              <p\r\n                className={`m-0 badge ${\r\n                  answer.point > 0 ? \"bg-success\" : \"bg-danger\"\r\n                }`}\r\n              >\r\n                Jawaban Siswa: <strong>{answer.answer.toUpperCase()}</strong>\r\n              </p>\r\n              <p className='m-0 badge bg-success'>\r\n                Jawaban Benar: <strong>{answer.correct}</strong>\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div className='card bg-light'>\r\n              <div className='card-body'>\r\n                <h6 className='card-subtitle mb-2 text-muted'>Jawaban Essay</h6>\r\n                <p className='card-text'>{answer.essay || \"-\"}</p>\r\n\r\n                {isTeacherOrAdmin && (\r\n                  <div className='mt-3'>\r\n                    <div className='d-flex align-items-center gap-2'>\r\n                      <input\r\n                        type='number'\r\n                        className='form-control form-control-sm'\r\n                        style={{ width: \"80px\" }}\r\n                        placeholder='Nilai'\r\n                        min='0'\r\n                        max={answer.max_point || 100}\r\n                        value={gradingAnswers[answer.id] || \"\"}\r\n                        onChange={(e) =>\r\n                          setGradingAnswers({\r\n                            ...gradingAnswers,\r\n                            [answer.id]: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                      <button\r\n                        className='btn btn-sm btn-primary'\r\n                        onClick={() =>\r\n                          handleGradeEssay(answer.id, answer.max_point || 100)\r\n                        }\r\n                        disabled={isGrading}\r\n                      >\r\n                        {isGrading ? \"Menyimpan...\" : \"Simpan Nilai\"}\r\n                      </button>\r\n                    </div>\r\n                    <small className='text-muted'>\r\n                      Maksimal nilai: {answer.max_point || 100}\r\n                    </small>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnswerItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  useGetStudentAnswerQuery,\r\n  useGradeEssayMutation,\r\n} from \"../../../../controller/api/cbt/ApiAnswer\";\r\nimport { printAnswerSheet } from \"./printAnswerSheet\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport ScoreSummary from \"./components/ScoreSummary\";\r\nimport StudentInfo from \"./components/StudentInfo\";\r\nimport AnswerItem from \"./components/AnswerItem\";\r\n\r\nconst AnswerSheet = ({ detail }) => {\r\n  const { examid, name } = useParams();\r\n  const [isPrintReady, setIsPrintReady] = useState(false);\r\n  const { user } = useSelector((state) => state.auth);\r\n  const isTeacherOrAdmin = user?.level === \"teacher\" || user?.level === \"admin\";\r\n  const [gradingAnswers, setGradingAnswers] = useState({});\r\n\r\n  const { data, isLoading, isError, error, refetch } = useGetStudentAnswerQuery(\r\n    {\r\n      student: detail.student_id,\r\n      exam: examid,\r\n    },\r\n    {\r\n      skip: !detail.student_id,\r\n    }\r\n  );\r\n\r\n  const [gradeEssay, { isLoading: isGrading }] = useGradeEssayMutation();\r\n\r\n  const studentData = data?.[0];\r\n\r\n  useEffect(() => {\r\n    if (studentData) {\r\n      setIsPrintReady(true);\r\n    }\r\n  }, [studentData]);\r\n\r\n  const handlePrint = () => {\r\n    if (!studentData) return;\r\n    printAnswerSheet(studentData, name, detail);\r\n  };\r\n\r\n  const handleGradeEssay = async (answerId, maxPoint) => {\r\n    const point = gradingAnswers[answerId];\r\n\r\n    if (point === undefined || point === \"\") {\r\n      toast.error(\"Nilai tidak boleh kosong\");\r\n      return;\r\n    }\r\n\r\n    if (point < 0 || point > maxPoint) {\r\n      toast.error(`Nilai harus antara 0 dan ${maxPoint}`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await gradeEssay({\r\n        answer_id: answerId,\r\n        point: parseInt(point),\r\n      }).unwrap();\r\n      toast.success(\"Nilai berhasil disimpan\");\r\n      refetch();\r\n    } catch (error) {\r\n      toast.error(error.data?.message || \"Gagal menyimpan nilai\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='modal fade'\r\n      id='answerSheet'\r\n      data-bs-backdrop='static'\r\n      data-bs-keyboard='false'\r\n      tabIndex='-1'\r\n      aria-labelledby='staticBackdropLabel'\r\n      aria-hidden='true'\r\n    >\r\n      <div className='modal-dialog modal-lg modal-dialog-scrollable'>\r\n        <div className='modal-content'>\r\n          <div className='modal-header'>\r\n            <div\r\n              className='modal-title d-flex flex-column justify-content-end align-items-start'\r\n              id='staticBackdropLabel'\r\n            >\r\n              <p className='m-0 h5'>{name?.replace(/-/g, \" \")}</p>\r\n              <small className='text-muted'>\r\n                {detail?.nis} - {detail?.student_name}\r\n              </small>\r\n            </div>\r\n            <button\r\n              type='button'\r\n              className='btn-close'\r\n              data-bs-dismiss='modal'\r\n              aria-label='Close'\r\n            ></button>\r\n          </div>\r\n          <div className='modal-body'>\r\n            {isLoading ? (\r\n              <p>Loading...</p>\r\n            ) : isError ? (\r\n              <div className='alert alert-danger' role='alert'>\r\n                Gagal memuat data jawaban:{\" \"}\r\n                {error?.data?.message || error.message}\r\n              </div>\r\n            ) : studentData ? (\r\n              <>\r\n                <ScoreSummary studentData={studentData} />\r\n                <StudentInfo studentData={studentData} name={name} />\r\n                {studentData.answers && studentData.answers.length > 0 ? (\r\n                  studentData.answers.map((answer, index) => (\r\n                    <AnswerItem\r\n                      key={answer.question_id}\r\n                      answer={answer}\r\n                      index={index}\r\n                      isTeacherOrAdmin={isTeacherOrAdmin}\r\n                      gradingAnswers={gradingAnswers}\r\n                      setGradingAnswers={setGradingAnswers}\r\n                      handleGradeEssay={handleGradeEssay}\r\n                      isGrading={isGrading}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <div className='alert alert-info mt-3' role='alert'>\r\n                    Tidak ada data jawaban untuk siswa ini.\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <div className='alert alert-warning' role='alert'>\r\n                Data siswa tidak ditemukan.\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className='modal-footer'>\r\n            <button\r\n              type='button'\r\n              className='btn btn-sm btn-secondary'\r\n              data-bs-dismiss='modal'\r\n            >\r\n              Tutup\r\n            </button>\r\n\r\n            <button\r\n              type='button'\r\n              className='btn btn-sm btn-danger'\r\n              onClick={refetch}\r\n            >\r\n              <i className='bi bi-repeat'></i>\r\n            </button>\r\n\r\n            <button\r\n              type='button'\r\n              className='btn btn-sm btn-primary'\r\n              onClick={handlePrint}\r\n            >\r\n              <i className='bi bi-printer'></i> Cetak\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnswerSheet;\r\n","/**\r\n * Utility function to print the answer sheet\r\n * @param {Object} studentData - The student's answer data\r\n * @param {String} name - The exam name\r\n * @param {Object} detail - The student details\r\n */\r\nexport const printAnswerSheet = (studentData, name, detail) => {\r\n  if (!studentData) return;\r\n\r\n  // Create a new window for printing\r\n  const printWindow = window.open(\"\", \"_blank\");\r\n  if (!printWindow) {\r\n    alert(\"Please allow popups for this website to print.\");\r\n    return;\r\n  }\r\n\r\n  // Get current date and time for the print header\r\n  const now = new Date();\r\n  const printDateTime = now.toLocaleString(\"id-ID\", {\r\n    weekday: \"long\",\r\n    day: \"2-digit\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: false,\r\n  });\r\n\r\n  // Get current URL\r\n  const currentUrl = window.location.href;\r\n\r\n  // Create the content for the print window\r\n  const printContent = `\r\n    <!DOCTYPE html>\r\n    <html>\r\n      <head>\r\n        <title>${name?.replace(/-/g, \" \")} - ${detail?.student_name}</title>\r\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n        <style>\r\n          body { \r\n            padding: 20px; \r\n            font-size: 12px;\r\n          }\r\n          .card { \r\n            margin-bottom: 15px; \r\n            border: 1px solid rgba(0,0,0,.125);\r\n            border-radius: 0.25rem;\r\n          }\r\n          .card-body {\r\n            padding: 1rem;\r\n          }\r\n          .badge { \r\n            font-size: 0.9em; \r\n            padding: 0.35em 0.65em;\r\n            border-radius: 0.25rem;\r\n            font-weight: 700;\r\n          }\r\n          .bg-primary {\r\n            background-color: #0d6efd !important;\r\n            color: white;\r\n          }\r\n          .bg-success {\r\n            background-color: #198754 !important;\r\n            color: white;\r\n          }\r\n          .bg-danger {\r\n            background-color: #dc3545 !important;\r\n            color: white;\r\n          }\r\n          .table {\r\n            width: 100%;\r\n            margin-bottom: 1rem;\r\n            color: #212529;\r\n            border-collapse: collapse;\r\n          }\r\n          .table-sm td {\r\n            padding: 0.3rem;\r\n          }\r\n          .table-borderless {\r\n            border: 0;\r\n          }\r\n          .d-flex {\r\n            display: flex !important;\r\n          }\r\n          .justify-content-between {\r\n            justify-content: space-between !important;\r\n          }\r\n          .align-items-center {\r\n            align-items: center !important;\r\n          }\r\n          .gap-4 {\r\n            gap: 1.5rem !important;\r\n          }\r\n          .mt-3 {\r\n            margin-top: 1rem !important;\r\n          }\r\n          .mb-2 {\r\n            margin-bottom: 0.5rem !important;\r\n          }\r\n          .mb-3 {\r\n            margin-bottom: 1rem !important;\r\n          }\r\n          .mb-0 {\r\n            margin-bottom: 0 !important;\r\n          }\r\n          .m-0 {\r\n            margin: 0 !important;\r\n          }\r\n          .text-muted {\r\n            color: #6c757d !important;\r\n          }\r\n          .h5 {\r\n            font-size: 1.25rem;\r\n            margin-top: 0;\r\n            margin-bottom: 0.5rem;\r\n            font-weight: 500;\r\n          }\r\n          .alert {\r\n            position: relative;\r\n            padding: 0.75rem 1.25rem;\r\n            margin-bottom: 1rem;\r\n            border: 1px solid transparent;\r\n            border-radius: 0.25rem;\r\n          }\r\n          .alert-info {\r\n            color: #0c5460;\r\n            background-color: #d1ecf1;\r\n            border-color: #bee5eb;\r\n          }\r\n          .alert-warning {\r\n            color: #856404;\r\n            background-color: #fff3cd;\r\n            border-color: #ffeeba;\r\n          }\r\n          .alert-danger {\r\n            color: #721c24;\r\n            background-color: #f8d7da;\r\n            border-color: #f5c6cb;\r\n          }\r\n          .print-header {\r\n            border-bottom: 1px solid #dee2e6;\r\n            padding-bottom: 5px;\r\n            margin-bottom: 5px;\r\n            font-size: 10px;\r\n            color: #6c757d;\r\n            display: flex;\r\n            justify-content: space-between;\r\n          }\r\n          .print-header p {\r\n            margin-bottom: 5px;\r\n          }\r\n          .print-footer {\r\n            border-top: 1px solid #dee2e6;\r\n            padding-top: 5px;\r\n            margin-top: 5px;\r\n            font-size: 10px;\r\n            color: #6c757d;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            position: fixed;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            background-color: white;\r\n            padding: 10px 20px;\r\n          }\r\n          .content {\r\n            margin-bottom: 40px; /* Space for footer */\r\n          }\r\n          @media print {\r\n            .no-print { display: none; }\r\n            body { font-size: 12px; }\r\n            .card { page-break-inside: avoid; }\r\n            .print-header {\r\n              position: fixed;\r\n              top: 0;\r\n              left: 0;\r\n              right: 0;\r\n              padding: 10px 20px;\r\n              background-color: white;\r\n              z-index: 1000;\r\n            }\r\n            .content {\r\n              margin-top: 40px;\r\n              margin-bottom: 40px;\r\n            }\r\n            @page {\r\n              margin-top: 60px;\r\n              margin-bottom: 60px;\r\n            }\r\n          }\r\n        </style>\r\n      </head>\r\n      <body>\r\n        <div class=\"container\">\r\n          <div class=\"print-header\">\r\n            <p>${currentUrl}</p>\r\n          </div>\r\n          \r\n          <div class=\"content\">\r\n            <div class=\"card mb-3\">\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title mb-3\">Lembar Jawaban</h5>\r\n                <table class=\"table table-sm table-borderless mb-0\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td><strong>NIS</strong></td>\r\n                      <td>: ${studentData.student_nis}</td>\r\n                      <td><strong>Tingkat</strong></td>\r\n                      <td>: ${studentData.student_grade}</td>\r\n                      <td><strong>Ujian</strong></td>\r\n                      <td>: ${name.replace(/-/g, \" \")}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Nama</strong></td>\r\n                      <td>: ${studentData.student_name}</td>\r\n                      <td><strong>Kelas</strong></td>\r\n                      <td>: ${studentData.student_class}</td>\r\n                      <td><strong>Tanggal</strong></td>\r\n                      <td>: ${\r\n                        studentData.log_exam\r\n                          ? new Date(studentData.log_exam).toLocaleString(\r\n                              \"id-ID\",\r\n                              {\r\n                                weekday: \"long\",\r\n                                day: \"2-digit\",\r\n                                month: \"long\",\r\n                                year: \"numeric\",\r\n                                hour: \"2-digit\",\r\n                                minute: \"2-digit\",\r\n                                hour12: false,\r\n                              }\r\n                            )\r\n                          : \"-\"\r\n                      }</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Score Summary Card -->\r\n            <div class=\"card mb-3\">\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title mb-3\">Ringkasan Nilai</h5>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"d-flex justify-content-between mb-2\">\r\n                      <span>Jawaban Benar:</span>\r\n                      <span class=\"badge bg-success\">${\r\n                        studentData.correct\r\n                      }</span>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-between mb-2\">\r\n                      <span>Jawaban Salah:</span>\r\n                      <span class=\"badge bg-danger\">${\r\n                        studentData.incorrect\r\n                      }</span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"d-flex justify-content-between mb-2\">\r\n                      <span>Nilai PG:</span>\r\n                      <span class=\"badge bg-primary\">${\r\n                        studentData.pg_score\r\n                      }</span>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-between mb-2\">\r\n                      <span>Nilai Essay:</span>\r\n                      <span class=\"badge bg-info\">${\r\n                        studentData.essay_score\r\n                      }</span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"d-flex justify-content-between mb-2\">\r\n                      <span>Total Nilai:</span>\r\n                      <span class=\"badge bg-success fs-5\">${\r\n                        studentData.score\r\n                      }</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            ${\r\n              studentData.answers && studentData.answers.length > 0\r\n                ? studentData.answers\r\n                    .map(\r\n                      (answer, index) => `\r\n                <div class=\"card mb-3\">\r\n                  <div class=\"card-body\">\r\n                    <div class=\"d-flex justify-content-between align-items-center mb-2\">\r\n                      <h6 class=\"card-title mb-0\">\r\n                        <span class=\"badge bg-primary\">Pertanyaan ${\r\n                          index + 1\r\n                        }</span>\r\n                      </h6>\r\n                      <span class=\"badge ${\r\n                        answer.point > 0 ? \"bg-success\" : \"bg-danger\"\r\n                      }\">\r\n                        ${answer.point} Poin\r\n                      </span>\r\n                    </div>\r\n                    <div class=\"card-text\">${answer.question_text}</div>\r\n                    <div class=\"mt-3 d-flex gap-4\">\r\n                      <p class=\"m-0 badge ${\r\n                        answer.point > 0 ? \"bg-success\" : \"bg-danger\"\r\n                      }\">\r\n                        Jawaban Siswa: <strong>${\r\n                          answer.answer?.toUpperCase() || \"-\"\r\n                        }</strong>\r\n                      </p>\r\n                      <p class=\"m-0 badge bg-success\">\r\n                        Jawaban Benar: <strong>${answer.correct}</strong>\r\n                      </p>\r\n                    </div>\r\n                    ${\r\n                      answer.essay\r\n                        ? `\r\n                    <div class=\"mt-3\">\r\n                      <div class=\"card bg-light\">\r\n                        <div class=\"card-body\">\r\n                          <h6 class=\"card-subtitle mb-2 text-muted\">Jawaban Essay</h6>\r\n                          <p class=\"card-text\">${answer.essay}</p>\r\n                          <div class=\"d-flex align-items-center gap-2\">\r\n                            <span class=\"badge bg-info\">Nilai: ${answer.point}</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    `\r\n                        : \"\"\r\n                    }\r\n                  </div>\r\n                </div>\r\n              `\r\n                    )\r\n                    .join(\"\")\r\n                : '<div class=\"alert alert-info mt-3\">Tidak ada data jawaban untuk siswa ini.</div>'\r\n            }\r\n            \r\n            <div class=\"no-print text-center mt-4\">\r\n              <button class=\"btn btn-primary\" onclick=\"window.print()\">Cetak</button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"print-footer\">\r\n            <div>${printDateTime}</div>\r\n            <div>Halaman <span class=\"pageNumber\"></span></div>\r\n          </div>\r\n        </div>\r\n        \r\n        <script>\r\n          // Add page numbers when printing\r\n          window.onbeforeprint = function() {\r\n            const pages = document.querySelectorAll('.pageNumber');\r\n            for (let i = 0; i < pages.length; i++) {\r\n              pages[i].textContent = (i + 1).toString();\r\n            }\r\n          };\r\n        </script>\r\n      </body>\r\n    </html>\r\n  `;\r\n\r\n  // Write the content to the new window\r\n  printWindow.document.open();\r\n  printWindow.document.write(printContent);\r\n  printWindow.document.close();\r\n\r\n  // Wait for resources to load before printing\r\n  printWindow.onload = function () {\r\n    printWindow.focus();\r\n    printWindow.print();\r\n    // Optional: close the window after printing\r\n    // printWindow.close();\r\n  };\r\n};\r\n","import React, {\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from \"react\";\r\nimport Table from \"../../../../components/table/Table\";\r\nimport {\r\n  useFinishCbtMutation,\r\n  useGetExamLogQuery,\r\n  useRejoinExamMutation,\r\n  useRetakeExamMutation,\r\n} from \"../../../../controller/api/log/ApiLog\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport AnswerSheet from \"./AnswerSheet\";\r\n\r\nconst TableData = forwardRef(({ classid, examid }, ref) => {\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n  const tableRef = useRef();\r\n\r\n  const {\r\n    data = {},\r\n    isLoading,\r\n    refetch,\r\n  } = useGetExamLogQuery({\r\n    exam: examid,\r\n    classid: classid,\r\n    page,\r\n    limit,\r\n    search,\r\n  });\r\n  const { result = [], totalData, totalPages } = data;\r\n  const [detail, setDetail] = useState({});\r\n\r\n  const [finishCbt, { isLoading: finishLoad }] = useFinishCbtMutation();\r\n  const [rejoinExam, { isLoading: rejoinLoad }] = useRejoinExamMutation();\r\n  const [retakeExam, { isLoading: retakeLoad }] = useRetakeExamMutation();\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    refetch,\r\n    getTableElement: () => tableRef.current,\r\n  }));\r\n\r\n  const hanldeFinish = (id) => {\r\n    toast.promise(\r\n      finishCbt({ id, exam: examid })\r\n        .unwrap()\r\n        .then((res) => res.message),\r\n      {\r\n        loading: \"Memuat data...\",\r\n        success: (message) => message,\r\n        error: (error) => error.data.message,\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleRejoin = (id) => {\r\n    toast.promise(\r\n      rejoinExam({ id })\r\n        .unwrap()\r\n        .then((res) => res.message),\r\n      {\r\n        loading: \"Memuat data...\",\r\n        success: (message) => message,\r\n        error: (error) => error.data.message,\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleRetake = (id, student) => {\r\n    toast.promise(\r\n      retakeExam({ id, student, exam: examid })\r\n        .unwrap()\r\n        .then((res) => res.message),\r\n      {\r\n        loading: \"Memuat data...\",\r\n        success: (message) => message,\r\n        error: (error) => error.data.message,\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        isLoading={isLoading}\r\n        page={page}\r\n        setPage={setPage}\r\n        totalPages={totalPages}\r\n        limit={limit}\r\n        setLimit={setLimit}\r\n        setSearch={setSearch}\r\n        totalData={totalData}\r\n      >\r\n        <table\r\n          ref={tableRef}\r\n          className='table table-striped table-hover table-bordered'\r\n        >\r\n          <thead className='table-light'>\r\n            <tr>\r\n              <th scope='col' className='text-center'>\r\n                No\r\n              </th>\r\n              <th scope='col' className='text-center'>\r\n                NIS\r\n              </th>\r\n              <th scope='col' className='text-center'>\r\n                Nama Siswa\r\n              </th>\r\n              <th scope='col' className='text-center'>\r\n                Kelas\r\n              </th>\r\n              <th scope='col' className='text-center'>\r\n                Tingkat\r\n              </th>\r\n              <th scope='col' className='text-center'>\r\n                IP Address\r\n              </th>\r\n              <th scope='col' className='text-center'>\r\n                Browser\r\n              </th>\r\n              <th scope='col' className='text-center'>\r\n                Waktu Mulai\r\n              </th>\r\n              <th scope='col' className='text-center'>\r\n                Status\r\n              </th>\r\n              <th scope='col' className='text-center'>\r\n                Aksi\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {result.length > 0 ? (\r\n              result.map((item, index) => (\r\n                <tr key={item.student_id || index}>\r\n                  <td className='text-center align-middle'>\r\n                    {(page - 1) * limit + index + 1}\r\n                  </td>\r\n                  <td className='text-center align-middle'>{item.nis}</td>\r\n                  <td className='align-middle'>{item.student_name}</td>\r\n                  <td className='text-center align-middle'>\r\n                    {item.class_name}\r\n                  </td>\r\n                  <td className='text-center align-middle'>\r\n                    {item.grade_name}\r\n                  </td>\r\n                  <td className='text-center align-middle'>{item.ip || \"-\"}</td>\r\n                  <td className='text-center align-middle'>\r\n                    {item.browser || \"-\"}\r\n                  </td>\r\n                  <td className='text-center align-middle'>\r\n                    {item.createdat ? (\r\n                      <span className='badge bg-success'>\r\n                        {new Date(item.createdat).toLocaleString()}\r\n                      </span>\r\n                    ) : (\r\n                      \"-\"\r\n                    )}\r\n                  </td>\r\n                  <td className='text-center align-middle'>\r\n                    {item.ispenalty ? (\r\n                      <span className='badge bg-danger'>Melanggar</span>\r\n                    ) : item.isactive ? (\r\n                      <span className='badge bg-warning'>Mengerjakan</span>\r\n                    ) : item.isdone ? (\r\n                      <span className='badge bg-success'>Selesai</span>\r\n                    ) : (\r\n                      <span className='badge bg-secondary'>Belum Masuk</span>\r\n                    )}\r\n                  </td>\r\n                  <td className='text-center align-middle'>\r\n                    <div className='d-flex justify-content-center gap-2'>\r\n                      <button\r\n                        className='btn btn-sm btn-primary'\r\n                        title='Lihat Detail'\r\n                        data-bs-toggle='modal'\r\n                        data-bs-target='#answerSheet'\r\n                        onClick={() => setDetail(item)}\r\n                      >\r\n                        <i className='bi bi-eye'></i>\r\n                      </button>\r\n\r\n                      <button\r\n                        className='btn btn-sm btn-warning'\r\n                        title='Izinkan Masuk'\r\n                        onClick={() => handleRejoin(item.log_id)}\r\n                        disabled={rejoinLoad || !item.isactive}\r\n                      >\r\n                        <i className='bi bi-arrow-repeat'></i>\r\n                      </button>\r\n\r\n                      <button\r\n                        className='btn btn-sm btn-success'\r\n                        title='Selesaikan'\r\n                        onClick={() => hanldeFinish(item.log_id)}\r\n                        disabled={finishLoad || item.isdone || !item.isactive}\r\n                      >\r\n                        <i className='bi bi-check-circle'></i>\r\n                      </button>\r\n\r\n                      <button\r\n                        className='btn btn-sm btn-danger'\r\n                        title='Ulangi Ujian'\r\n                        onClick={() =>\r\n                          handleRetake(item.log_id, item.student_id)\r\n                        }\r\n                        disabled={retakeLoad || !item.isdone}\r\n                      >\r\n                        <i className='bi bi-recycle'></i>\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan='10' className='text-center'>\r\n                  {isLoading\r\n                    ? \"Memuat data...\"\r\n                    : \"Tidak ada data yang ditemukan\"}\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </Table>\r\n\r\n      <AnswerSheet detail={detail} />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default TableData;\r\n","import React, { forwardRef, useImperativeHandle } from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler,\r\n} from \"chart.js\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { useGetLineChartDataQuery } from \"../../../../controller/api/cbt/ApiAnswer\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler\r\n);\r\n\r\nconst ScoreChart = forwardRef(({ examid }, ref) => {\r\n  const { data, isLoading, error, refetch } = useGetLineChartDataQuery(examid, {\r\n    skip: !examid,\r\n  });\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    refetch,\r\n  }));\r\n\r\n  const chartData = {\r\n    labels: data?.map((item) => item.score) || [],\r\n    datasets: [\r\n      {\r\n        label: \"Jumlah Siswa\",\r\n        data: data?.map((item) => item.quantity) || [],\r\n        borderColor: \"rgb(53, 162, 235)\",\r\n        backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n        tension: 0.4,\r\n        fill: true,\r\n        pointStyle: \"circle\",\r\n        pointRadius: 6,\r\n        pointHoverRadius: 8,\r\n        pointBackgroundColor: \"rgb(53, 162, 235)\",\r\n        pointBorderColor: \"white\",\r\n        pointBorderWidth: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n        labels: {\r\n          font: {\r\n            size: 14,\r\n            weight: \"bold\",\r\n          },\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Distribusi Nilai Siswa\",\r\n        font: {\r\n          size: 20,\r\n          weight: \"bold\",\r\n        },\r\n        padding: 20,\r\n      },\r\n      tooltip: {\r\n        backgroundColor: \"rgba(255, 255, 255, 0.9)\",\r\n        titleColor: \"#333\",\r\n        bodyColor: \"#666\",\r\n        titleFont: {\r\n          size: 14,\r\n          weight: \"bold\",\r\n        },\r\n        bodyFont: {\r\n          size: 13,\r\n        },\r\n        padding: 12,\r\n        borderColor: \"rgba(53, 162, 235, 0.5)\",\r\n        borderWidth: 1,\r\n        displayColors: false,\r\n        callbacks: {\r\n          title: (items) => `Rentang Nilai: ${items[0].label}`,\r\n          label: (item) => `Jumlah Siswa: ${item.raw} orang`,\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        grid: {\r\n          color: \"rgba(0, 0, 0, 0.1)\",\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          font: {\r\n            size: 12,\r\n          },\r\n          stepSize: 1,\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: \"Jumlah Siswa\",\r\n          font: {\r\n            size: 14,\r\n            weight: \"bold\",\r\n          },\r\n          padding: 10,\r\n        },\r\n      },\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          font: {\r\n            size: 12,\r\n          },\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: \"Rentang Nilai\",\r\n          font: {\r\n            size: 14,\r\n            weight: \"bold\",\r\n          },\r\n          padding: 10,\r\n        },\r\n      },\r\n    },\r\n    interaction: {\r\n      intersect: false,\r\n      mode: \"index\",\r\n    },\r\n    elements: {\r\n      line: {\r\n        borderWidth: 3,\r\n      },\r\n    },\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"card shadow w-100 h-75 d-flex justify-content-center align-items-center\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"card shadow w-100 h-75 text-danger\">\r\n        <div className=\"card-body\">Data belum tersedia</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"card shadow w-100 h-75 p-3\">\r\n      <div style={{ width: \"100%\", height: \"100%\", minHeight: \"550px\" }}>\r\n        <Line options={options} data={chartData} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ScoreChart;\r\n","import React, {\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from \"react\";\r\nimport { useGetExamScoreListQuery } from \"../../../../controller/api/cbt/ApiAnswer\";\r\nimport Table from \"../../../../components/table/Table\";\r\n\r\nconst ScoreList = forwardRef(({ examid, classid }, ref) => {\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n  const tableRef = useRef();\r\n  const {\r\n    data = {},\r\n    isLoading,\r\n    error,\r\n    refetch,\r\n  } = useGetExamScoreListQuery(\r\n    { exam: examid, classid, page, limit, search },\r\n    {\r\n      skip: !examid,\r\n    }\r\n  );\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    refetch,\r\n    getTableElement: () => tableRef.current,\r\n  }));\r\n\r\n  const students = data?.students || [];\r\n\r\n  return (\r\n    <Table\r\n      isLoading={isLoading}\r\n      page={page}\r\n      setPage={setPage}\r\n      limit={limit}\r\n      setLimit={setLimit}\r\n      setSearch={setSearch}\r\n      totalData={data?.totalData}\r\n      totalPages={data?.totalPages}\r\n    >\r\n      <table ref={tableRef} className='mb-0 table table-bordered table-striped'>\r\n        <thead>\r\n          <tr>\r\n            <td colSpan={2} className='text-muted align-middle'>\r\n              {data?.homebase_name}\r\n            </td>\r\n            <td colSpan={2} className='text-muted align-middle'>\r\n              <p className='m-0'>\r\n                {data?.exam_name}{\" \"}\r\n                <span className='badge bg-success'>{data?.exam_token}</span>\r\n              </p>\r\n            </td>\r\n            <td colSpan={6} className='text-muted align-middle'>\r\n              {data?.teacher_name}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <th rowSpan={2} className='text-center align-middle'>\r\n              No\r\n            </th>\r\n            <th rowSpan={2} className='text-center align-middle'>\r\n              NIS\r\n            </th>\r\n            <th rowSpan={2} className='text-center align-middle'>\r\n              Nama\r\n            </th>\r\n            <th rowSpan={2} className='text-center align-middle'>\r\n              Tingkat\r\n            </th>\r\n            <th rowSpan={2} className='text-center align-middle'>\r\n              Kelas\r\n            </th>\r\n            <th colSpan={3} className='text-center align-middle'>\r\n              PG\r\n            </th>\r\n            <th rowSpan={2} className='text-center align-middle'>\r\n              Essay\r\n            </th>\r\n            <th rowSpan={2} className='text-center align-middle'>\r\n              Total\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <td className='text-center align-middle'>Benar</td>\r\n            <td className='text-center align-middle'>Salah</td>\r\n            <td className='text-center align-middle'>Total</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {students?.map((student, index) => (\r\n            <tr key={student?.student_id}>\r\n              <td className='text-center align-middle'>\r\n                {(page - 1) * limit + index + 1}\r\n              </td>\r\n              <td className='text-center align-middle'>\r\n                {student?.student_nis}\r\n              </td>\r\n              <td className='text-center align-middle'>\r\n                {student?.student_name}\r\n              </td>\r\n              <td className='text-center align-middle'>\r\n                {student?.student_grade}\r\n              </td>\r\n              <td className='text-center align-middle'>\r\n                {student?.student_class}\r\n              </td>\r\n              <td className='text-center align-middle'>{student?.correct}</td>\r\n              <td className='text-center align-middle'>{student?.incorrect}</td>\r\n              <td className='text-center align-middle'>{student?.mc_score}</td>\r\n              <td className='text-center align-middle'>\r\n                {student?.essay_score}\r\n              </td>\r\n              <td className='text-center align-middle'>{student?.score}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Table>\r\n  );\r\n});\r\n\r\nexport default ScoreList;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Layout from \"../../../../components/layout/Layout\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Filters from \"./Filters\";\r\nimport TableData from \"./TableData\";\r\nimport ScoreChart from \"./ScoreChart\";\r\nimport ScoreList from \"./ScoreList\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst ExamReport = () => {\r\n  const { name, examid, token } = useParams();\r\n  const [classid, setClassid] = useState(\"\");\r\n  const [activeView, setActiveView] = useState(\"table\");\r\n  const tableRef = useRef();\r\n  const chartRef = useRef();\r\n  const listRef = useRef();\r\n\r\n  const handleRefetch = () => {\r\n    // Refetch all components\r\n    tableRef.current?.refetch();\r\n    chartRef.current?.refetch();\r\n    listRef.current?.refetch();\r\n  };\r\n\r\n  const convertToExcel = () => {\r\n    if (activeView === \"table\" && tableRef.current) {\r\n      const workbook = XLSX.utils.book_new();\r\n      const table = tableRef.current.getTableElement();\r\n      const tableData = XLSX.utils.table_to_sheet(table);\r\n\r\n      XLSX.utils.book_append_sheet(workbook, tableData, \"Sheet1\");\r\n\r\n      const excelBuffer = XLSX.write(workbook, {\r\n        bookType: \"xlsx\",\r\n        type: \"array\",\r\n      });\r\n      const data = new Blob([excelBuffer], {\r\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n      });\r\n      const fileName = `table_${name}.xlsx`;\r\n\r\n      if (navigator.msSaveBlob) {\r\n        navigator.msSaveBlob(data, fileName);\r\n      } else {\r\n        const link = document.createElement(\"a\");\r\n        link.href = window.URL.createObjectURL(data);\r\n        link.download = fileName;\r\n        link.click();\r\n      }\r\n    } else if (activeView === \"list\" && listRef.current) {\r\n      const workbook = XLSX.utils.book_new();\r\n      const table = listRef.current.getTableElement();\r\n      const tableData = XLSX.utils.table_to_sheet(table);\r\n\r\n      XLSX.utils.book_append_sheet(workbook, tableData, \"Sheet1\");\r\n\r\n      const excelBuffer = XLSX.write(workbook, {\r\n        bookType: \"xlsx\",\r\n        type: \"array\",\r\n      });\r\n      const data = new Blob([excelBuffer], {\r\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n      });\r\n      const fileName = `list_${name}.xlsx`;\r\n\r\n      if (navigator.msSaveBlob) {\r\n        navigator.msSaveBlob(data, fileName);\r\n      } else {\r\n        const link = document.createElement(\"a\");\r\n        link.href = window.URL.createObjectURL(data);\r\n        link.download = fileName;\r\n        link.click();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout\r\n      title={`Laporan Ujian ${name.replace(/-/g, \" \")}`}\r\n      levels={[\"admin\", \"teacher\"]}\r\n    >\r\n      <Filters\r\n        classid={classid}\r\n        setClassid={setClassid}\r\n        examid={examid}\r\n        name={name}\r\n        token={token}\r\n        onRefetch={handleRefetch}\r\n        activeView={activeView}\r\n        setActiveView={setActiveView}\r\n        onExport={convertToExcel}\r\n      />\r\n      <div className='mt-3'>\r\n        {activeView === \"table\" && (\r\n          <TableData ref={tableRef} examid={examid} classid={classid} />\r\n        )}\r\n        {activeView === \"chart\" && (\r\n          <ScoreChart ref={chartRef} examid={examid} classid={classid} />\r\n        )}\r\n        {activeView === \"list\" && (\r\n          <ScoreList ref={listRef} examid={examid} classid={classid} />\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ExamReport;\r\n"],"names":["Filters","classid","setClassid","examid","name","token","onRefetch","activeView","setActiveView","onExport","lastUpdateTime","setLastUpdateTime","useState","data","classes","refetch","refetchClasses","useGetFilterQuery","exam","skip","className","children","jsxs","jsx","replace","jsxRuntimeExports","onClick","title","map","item","id","Date","toLocaleString","ScoreSummary","studentData","correct","incorrect","pg_score","essay_score","score","StudentInfo","student_nis","student_grade","student_name","student_class","log_exam","weekday","day","month","year","hour","minute","hour12","AnswerItem","answer","index","isTeacherOrAdmin","gradingAnswers","setGradingAnswers","handleGradeEssay","isGrading","point","dangerouslySetInnerHTML","__html","question_text","toUpperCase","essay","type","style","width","placeholder","min","max","max_point","value","onChange","e","target","disabled","AnswerSheet","detail","useParams","isPrintReady","setIsPrintReady","user","useSelector","state","auth","level","isLoading","isError","error","useGetStudentAnswerQuery","student","student_id","gradeEssay","useGradeEssayMutation","useEffect","async","answerId","maxPoint","c","answer_id","parseInt","unwrap","toast","success","message","tabIndex","nis","role","_a","Fragment","answers","length","question_id","printWindow","window","open","alert","printDateTime","currentUrl","location","href","printContent","join","document","write","close","onload","focus","print","printAnswerSheet","TableData","forwardRef","ref","page","setPage","limit","setLimit","search","setSearch","tableRef","useRef","useGetExamLogQuery","result","totalData","totalPages","setDetail","finishCbt","finishLoad","useFinishCbtMutation","rejoinExam","rejoinLoad","useRejoinExamMutation","retakeExam","retakeLoad","useRetakeExamMutation","reactExports","useImperativeHandle","getTableElement","current","Table","scope","class_name","grade_name","ip","browser","createdat","ispenalty","isactive","isdone","handleRejoin","log_id","promise","then","res","loading","hanldeFinish","handleRetake","colSpan","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","ScoreChart","useGetLineChartDataQuery","chartData","labels","datasets","label","quantity","borderColor","backgroundColor","tension","fill","pointStyle","pointRadius","pointHoverRadius","pointBackgroundColor","pointBorderColor","pointBorderWidth","height","minHeight","Line","options","responsive","maintainAspectRatio","plugins","legend","position","font","size","weight","display","text","padding","tooltip","titleColor","bodyColor","titleFont","bodyFont","borderWidth","displayColors","callbacks","items","raw","scales","y","beginAtZero","grid","color","drawBorder","ticks","stepSize","x","interaction","intersect","mode","elements","line","ScoreList","useGetExamScoreListQuery","students","homebase_name","exam_name","exam_token","teacher_name","rowSpan","mc_score","ExamReport","chartRef","listRef","Layout","levels","_b","_c","workbook","XLSX.utils","book_new","table","tableData","table_to_sheet","utils","book_append_sheet","excelBuffer","XLSX.write","bookType","Blob","fileName","navigator","msSaveBlob","link","createElement","URL","createObjectURL","download","click"],"mappings":"+YAGA,MAAMA,EAAU,EACdC,UACAC,aACAC,SACAC,OACAC,QACAC,YACAC,aACAC,gBACAC,eAEA,MAAOC,EAAgBC,GAAqBC,EAAAA,SAAS,OAC7CC,KAAMC,EAASC,QAASC,GAAmBC,EACjD,CAAEC,KAAMf,GACR,CAAEgB,MAAOhB,IAUX,aACG,MAAI,CAAAiB,UAAU,YACbC,SAACC,EAAAA,KAAA,MAAA,CAAIF,UAAU,8DACbC,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,6CACbC,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,kCACbC,SAAA,CAAAE,EAAAA,IAAC,KAAEH,UAAU,SAAUC,SAAM,aAAA,EAAAjB,EAAAoB,QAAQ,KAAM,OAC1CD,EAAAA,IAAA,OAAA,CAAKH,UAAU,uBAAwBC,SAAMhB,OAG/CK,GACCe,EAAAH,KAAC,OAAK,CAAAF,UAAU,kBAAkBC,SAAA,CAAA,wBACVX,UAK5BY,KAAC,MAAI,CAAAF,UAAU,YACbC,SAAA,CAAAI,EAAAF,IAAC,SAAA,CACCH,UAAW,eACM,UAAfb,EAAyB,cAAgB,uBAE3CmB,QAAS,IAAMlB,EAAc,SAC7Ba,SAAAE,EAAAA,IAAC,IAAE,CAAAH,UAAU,8BAEfK,EAAAF,IAAC,SAAA,CACCH,UAAW,eACM,UAAfb,EAAyB,cAAgB,uBAE3CmB,QAAS,IAAMlB,EAAc,SAC7Ba,SAAAE,EAAAA,IAAC,IAAE,CAAAH,UAAU,sBAEfK,EAAAF,IAAC,SAAA,CACCH,UAAW,eACM,SAAfb,EAAwB,cAAgB,uBAE1CmB,QAAS,IAAMlB,EAAc,QAC7Ba,SAAAE,EAAAA,IAAC,IAAE,CAAAH,UAAU,gCAGE,UAAfb,GAAyC,SAAfA,IAC1BkB,EAAAF,IAAC,SAAA,CACCH,UAAU,yBACVM,QAASjB,EACTkB,MAAM,kBACNN,SAAAE,EAAAA,IAAC,IAAE,CAAAH,UAAU,yCAKnBE,KAAC,MAAI,CAAAF,UAAU,YACZC,SAAA,CAAS,MAAAP,OAAA,EAAAA,EAAAc,KAAKC,GACbJ,EAAAF,IAAC,SAAA,CAECH,UAAW,eACTnB,IAAY4B,EAAKC,GAAK,gBAAkB,yBAE1CJ,QAAS,IAAMxB,EAAW2B,EAAKC,IAC9BT,SAAKQ,EAAAzB,MALDyB,EAAKC,MAQdL,EAAAF,IAAC,SAAA,CACCH,UAAU,sBACVM,QAAS,IAAMxB,EAAW,IAC1BmB,SAAAE,EAAAA,IAAC,IAAE,CAAAH,UAAU,sBAGfG,IAAC,SAAO,CAAAH,UAAU,wBAAwBM,QAzE5B,KACpBf,GAAA,IAAsBoB,MAAOC,kBAEdhB,IACLV,GAAA,EAsEFe,SAACE,EAAAA,IAAA,IAAA,CAAEH,UAAU,0BAIrB,EChGEa,EAAe,EAAGC,uBAEnB,MAAI,CAAAd,UAAU,YACbC,SAACC,EAAAA,KAAA,MAAA,CAAIF,UAAU,YACbC,SAAA,CAACE,EAAAA,IAAA,KAAA,CAAGH,UAAU,kBAAkBC,SAAe,sBAC/CC,KAAC,MAAI,CAAAF,UAAU,MACbC,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,WACbC,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,sCACbC,SAAA,GAAAE,IAAC,QAAKF,SAAc,mBACnBE,EAAAA,IAAA,OAAA,CAAKH,UAAU,mBAAoBC,WAAYc,eAElDb,KAAC,MAAI,CAAAF,UAAU,sCACbC,SAAA,GAAAE,IAAC,QAAKF,SAAc,mBACnBE,EAAAA,IAAA,OAAA,CAAKH,UAAU,kBAAmBC,WAAYe,oBAGnDd,KAAC,MAAI,CAAAF,UAAU,WACbC,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,sCACbC,SAAA,GAAAE,IAAC,QAAKF,SAAS,cACdE,EAAAA,IAAA,OAAA,CAAKH,UAAU,mBAAoBC,WAAYgB,gBAElDf,KAAC,MAAI,CAAAF,UAAU,sCACbC,SAAA,GAAAE,IAAC,QAAKF,SAAY,iBACjBE,EAAAA,IAAA,OAAA,CAAKH,UAAU,gBAAiBC,WAAYiB,0BAGhD,MAAI,CAAAlB,UAAU,WACbC,SAACC,EAAAA,KAAA,MAAA,CAAIF,UAAU,sCACbC,SAAA,GAAAE,IAAC,QAAKF,SAAY,iBACjBE,EAAAA,IAAA,OAAA,CAAKH,UAAU,wBAAyBC,WAAYkB,qBC7B7DC,EAAc,EAAGN,cAAa9B,gBAE/B,MAAI,CAAAgB,UAAU,YACbC,SAACC,EAAAA,KAAA,MAAA,CAAIF,UAAU,YACbC,SAAA,CAACE,EAAAA,IAAA,KAAA,CAAGH,UAAU,kBAAkBC,SAAc,mBAC7CE,MAAA,QAAA,CAAMH,UAAU,uCACfC,gBAAC,QACC,CAAAA,SAAA,QAAC,KACC,CAAAA,SAAA,OAAC,KACC,CAAAA,SAAAE,EAAAA,IAAC,SAAO,CAAAF,SAAA,iBAET,KAAG,CAAAA,SAAA,CAAA,KAAGa,EAAYO,qBAClB,KAAA,CACCpB,SAACE,EAAAA,IAAA,SAAA,CAAOF,8BAET,KAAG,CAAAA,SAAA,CAAA,KAAGa,EAAYQ,uBAClB,KAAA,CACCrB,SAACE,EAAAA,IAAA,SAAA,CAAOF,4BAET,KAAG,CAAAA,SAAA,CAAA,KAAGjB,EAAKoB,QAAQ,KAAM,kBAE3B,KACC,CAAAH,SAAA,OAAC,KACC,CAAAA,SAAAE,EAAAA,IAAC,SAAO,CAAAF,SAAA,kBAET,KAAG,CAAAA,SAAA,CAAA,KAAGa,EAAYS,sBAClB,KAAA,CACCtB,SAACE,EAAAA,IAAA,SAAA,CAAOF,4BAET,KAAG,CAAAA,SAAA,CAAA,KAAGa,EAAYU,uBAClB,KAAA,CACCvB,SAACE,EAAAA,IAAA,SAAA,CAAOF,8BAET,KAAG,CAAAA,SAAA,CAAA,IACA,IACDa,EAAYW,SACT,IAAId,KAAKG,EAAYW,UAAUb,eAAe,QAAS,CACrDc,QAAS,OACTC,IAAK,UACLC,MAAO,OACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAEV,oBC7CdC,EAAa,EACjBC,SACAC,MAAAA,EACAC,mBACAC,iBACAC,oBACAC,mBACAC,qBAGG,MAAI,CAAAxC,UAAU,YACbC,SAACC,EAAAA,KAAA,MAAA,CAAIF,UAAU,YACbC,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,yDACbC,SAAA,CAAAE,EAAAA,IAAC,MAAGH,UAAU,kBACZC,SAACC,EAAAA,KAAA,OAAA,CAAKF,UAAU,mBAAmBC,SAAA,CAAA,cAAYkC,EAAQ,OAEzD9B,EAAAH,KAAC,OAAA,CACCF,UAAW,UAASkC,EAAOO,MAAQ,EAAI,aAAe,aAErDxC,SAAA,CAAOiC,EAAAO,MAAM,cAGlBpC,EAAAF,IAAC,IAAA,CACCH,UAAU,YACV0C,wBAAyB,CAAEC,OAAQT,EAAOU,iBAE5CzC,EAAAA,IAAC,OAAIH,UAAU,OACZC,WAAOiC,SACNhC,KAAC,MAAI,CAAAF,UAAU,eACbC,SAAA,CAAAI,EAAAH,KAAC,IAAA,CACCF,UAAW,cACTkC,EAAOO,MAAQ,EAAI,aAAe,aAErCxC,SAAA,CAAA,kBACiBE,EAAAA,IAAA,SAAA,CAAQF,SAAOiC,EAAAA,OAAOW,qBAExC3C,KAAC,IAAE,CAAAF,UAAU,uBAAuBC,SAAA,CAAA,oBACnBE,IAAC,SAAQ,CAAAF,SAAAiC,EAAOnB,sBAIlC,MAAI,CAAAf,UAAU,gBACbC,WAACC,KAAA,MAAA,CAAIF,UAAU,YACbC,SAAA,CAACE,EAAAA,IAAA,KAAA,CAAGH,UAAU,gCAAgCC,SAAa,wBAC1D,IAAE,CAAAD,UAAU,YAAaC,SAAAiC,EAAOY,OAAS,MAEzCV,GACC/B,EAAAH,KAAC,MAAI,CAAAF,UAAU,OACbC,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,kCACbC,SAAA,CAAAI,EAAAF,IAAC,QAAA,CACC4C,KAAK,SACL/C,UAAU,+BACVgD,MAAO,CAAEC,MAAO,QAChBC,YAAY,QACZC,IAAI,IACJC,IAAKlB,EAAOmB,WAAa,IACzBC,MAAOjB,EAAeH,EAAOxB,KAAO,GACpC6C,SAAWC,GACTlB,EAAkB,IACbD,EACH,CAACH,EAAOxB,IAAK8C,EAAEC,OAAOH,UAI5BjD,EAAAF,IAAC,SAAA,CACCH,UAAU,yBACVM,QAAS,IACPiC,EAAiBL,EAAOxB,GAAIwB,EAAOmB,WAAa,KAElDK,SAAUlB,EAETvC,WAAY,eAAiB,sBAGlCC,KAAC,QAAM,CAAAF,UAAU,aAAaC,SAAA,CAAA,mBACXiC,EAAOmB,WAAa,sBChErDM,EAAc,EAAGC,mBACrB,MAAM7E,OAAEA,EAAAC,KAAQA,GAAS6E,KAClBC,EAAcC,GAAmBvE,EAAAA,UAAS,IAC3CwE,KAAEA,GAASC,GAAaC,GAAUA,EAAMC,OACxC/B,EAAmC,aAAhB,MAAA4B,OAAA,EAAAA,EAAMI,QAAuC,iBAAhBJ,WAAMI,QACrD/B,EAAgBC,GAAqB9C,EAAAA,SAAS,CAAA,IAE/CC,KAAEA,EAAM4E,UAAAA,EAAAC,QAAWA,EAASC,MAAAA,EAAA5E,QAAOA,GAAY6E,EACnD,CACEC,QAASb,EAAOc,WAChB5E,KAAMf,GAER,CACEgB,MAAO6D,EAAOc,cAIXC,GAAcN,UAAW7B,IAAeoC,IAEzC9D,EAAqB,MAAPrB,OAAO,EAAAA,EAAA,GAE3BoF,EAAAA,WAAU,KACJ/D,GACFiD,GAAgB,EAAI,GAErB,CAACjD,IAEJ,MAKMyB,EAAmBuC,MAAOC,EAAUC,WAClC,MAAAvC,EAAQJ,EAAe0C,GAEzB,QAAU,IAAVtC,GAAiC,KAAVA,EAKvB,GAAAA,EAAQ,GAAKA,EAAQuC,EACjBC,EAAAV,MAAM,4BAA4BS,UAItC,UACIL,EAAW,CACfO,UAAWH,EACXtC,MAAO0C,SAAS1C,KACf2C,SACHC,EAAMC,QAAQ,2BACN3F,UACD4E,GACPc,EAAMd,OAAMA,OAAAA,EAAAA,EAAM9E,WAAN8E,EAAAA,EAAYgB,UAAW,wBAAuB,MAjB1DF,EAAMd,MAAM,2BAiB8C,EAK5D,OAAAlE,EAAAF,IAAC,MAAA,CACCH,UAAU,aACVU,GAAG,cACH,mBAAiB,SACjB,mBAAiB,QACjB8E,SAAS,KACT,kBAAgB,sBAChB,cAAY,OAEZvF,eAAC,MAAI,CAAAD,UAAU,gDACbC,SAACC,EAAAA,KAAA,MAAA,CAAIF,UAAU,gBACbC,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,eACbC,SAAA,CAAAI,EAAAH,KAAC,MAAA,CACCF,UAAU,uEACVU,GAAG,sBAEHT,SAAA,CAAAE,EAAAA,IAAC,KAAEH,UAAU,SAAUC,SAAM,aAAA,EAAAjB,EAAAoB,QAAQ,KAAM,SAC3CF,KAAC,QAAM,CAAAF,UAAU,aACdC,SAAA,CAAQ,MAAA2D,OAAA,EAAAA,EAAA6B,IAAI,MAAY,MAAR7B,OAAQ,EAAAA,EAAArC,mBAG7BlB,EAAAF,IAAC,SAAA,CACC4C,KAAK,SACL/C,UAAU,YACV,kBAAgB,QAChB,aAAW,aAGdG,MAAA,MAAA,CAAIH,UAAU,aACZC,WACEE,EAAAA,IAAA,IAAA,CAAEF,SAAU,eACXqE,EACDjE,EAAAH,KAAA,MAAA,CAAIF,UAAU,qBAAqB0F,KAAK,QAAQzF,SAAA,CAAA,6BACpB,KAC1B,OAAA0F,EAAO,MAAApB,OAAA,EAAAA,EAAA9E,WAAM,EAAAkG,EAAAJ,UAAWhB,EAAMgB,WAE/BzE,IAEAZ,KAAA0F,EAAAA,SAAA,CAAA3F,SAAA,OAACY,GAAaC,kBACdX,IAACiB,EAAY,CAAAN,cAA0B9B,SACtC8B,EAAY+E,SAAW/E,EAAY+E,QAAQC,OAAS,EACnDhF,EAAY+E,QAAQrF,KAAI,CAAC0B,EAAQC,IAC/B9B,EAAAF,IAAC8B,EAAA,CAECC,SACAC,MAAAA,EACAC,mBACAC,iBACAC,oBACAC,mBACAC,aAPKN,EAAO6D,eAWf5F,EAAAA,IAAA,MAAA,CAAIH,UAAU,wBAAwB0F,KAAK,QAAQzF,SAEpD,qDAIH,MAAI,CAAAD,UAAU,sBAAsB0F,KAAK,QAAQzF,6CAKtDC,KAAC,MAAI,CAAAF,UAAU,eACbC,SAAA,CAAAI,EAAAF,IAAC,SAAA,CACC4C,KAAK,SACL/C,UAAU,2BACV,kBAAgB,QACjBC,SAAA,UAIDI,EAAAF,IAAC,SAAA,CACC4C,KAAK,SACL/C,UAAU,wBACVM,QAASX,EAETM,SAAAE,EAAAA,IAAC,IAAE,CAAAH,UAAU,mBAGfK,EAAAH,KAAC,SAAA,CACC6C,KAAK,SACL/C,UAAU,yBACVM,QApHQ,KACbQ,GCnCuB,EAACA,EAAa9B,EAAM4E,KAClD,IAAK9C,EAAa,OAGlB,MAAMkF,EAAcC,OAAOC,KAAK,GAAI,UACpC,IAAKF,EAEH,YADAG,MAAM,kDAKF,MACAC,OADUzF,MACUC,eAAe,QAAS,CAChDc,QAAS,OACTC,IAAK,UACLC,MAAO,OACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAIJqE,EAAaJ,OAAOK,SAASC,KAG7BC,EAAe,yEAINxH,WAAMoB,QAAQ,KAAM,gBAAUwD,WAAQrC,s8IAgKtC8E,kaAWavF,EAAYO,0GAEZP,EAAYQ,0GAEZtC,EAAKoB,QAAQ,KAAM,qJAInBU,EAAYS,yGAEZT,EAAYU,4GAGlBV,EAAYW,SACR,IAAId,KAAKG,EAAYW,UAAUb,eAC7B,QACA,CACEc,QAAS,OACTC,IAAK,UACLC,MAAO,OACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGZ,mkBAiBJlB,EAAYC,6NAMZD,EAAYE,+RAQZF,EAAYG,0NAMZH,EAAYI,ySAQZJ,EAAYK,mKAStBL,EAAY+E,SAAW/E,EAAY+E,QAAQC,OAAS,EAChDhF,EAAY+E,QACTrF,KACC,CAAC0B,EAAQC,WAAU,MAAA,ySAMfA,EAAQ,mFAIVD,EAAOO,MAAQ,EAAI,aAAe,0CAEhCP,EAAOO,qHAGYP,EAAOU,uHAG5BV,EAAOO,MAAQ,EAAI,aAAe,kEAGhC,OAAAkD,EAAOzD,EAAAA,aAAQ,EAAAyD,EAAA9C,gBAAiB,oJAITX,EAAOnB,iGAIlCmB,EAAOY,MACH,wRAKuBZ,EAAOY,sJAESZ,EAAOO,iKAM9C,sEACL,IAKAgE,KAAK,IACR,0VASCL,2eAmBjBJ,EAAYU,SAASR,OACTF,EAAAU,SAASC,MAAMH,GAC3BR,EAAYU,SAASE,QAGrBZ,EAAYa,OAAS,WACnBb,EAAYc,QACZd,EAAYe,OAGhB,CAAA,EDhVqBC,CAAAlG,EAAa9B,EAAM4E,EAAM,EAoHhC3D,SAAA,GAACE,IAAA,IAAA,CAAEH,UAAU,kBAAoB,qBAK3C,EEnJEiH,EAAYC,EAAWA,YAAA,EAAGrI,UAASE,UAAUoI,KACjD,MAAOC,EAAMC,GAAW7H,EAAAA,SAAS,IAC1B8H,EAAOC,GAAY/H,EAAAA,SAAS,KAC5BgI,EAAQC,GAAajI,EAAAA,SAAS,IAC/BkI,EAAWC,EAAAA,UAEXlI,KACJA,EAAO,CAAC,EAAA4E,UACRA,EAAA1E,QACAA,GACEiI,EAAmB,CACrB9H,KAAMf,EACNF,UACAuI,OACAE,QACAE,YAEIK,OAAEA,EAAS,GAAIC,UAAAA,EAAAC,WAAWA,GAAetI,GACxCmE,EAAQoE,GAAaxI,EAAAA,SAAS,CAAA,IAE9ByI,GAAa5D,UAAW6D,IAAgBC,KACxCC,GAAc/D,UAAWgE,IAAgBC,KACzCC,GAAclE,UAAWmE,IAAgBC,IAEhDC,EAAAC,oBAAoBxB,GAAK,KAAO,CAC9BxH,UACAiJ,gBAAiB,IAAMlB,EAASmB,YA0ClC,OAEIxI,EAAAH,KAAA0F,WAAA,CAAA3F,SAAA,CAAAI,EAAAF,IAAC2I,EAAA,CACCzE,YACA+C,OACAC,UACAU,aACAT,QACAC,WACAE,YACAK,YAEA7H,SAAAI,EAAAH,KAAC,QAAA,CACCiH,IAAKO,EACL1H,UAAU,iDAEVC,SAAA,CAAAE,MAAC,QAAM,CAAAH,UAAU,cACfC,SAAAI,EAAAH,KAAC,KACC,CAAAD,SAAA,CAAAE,MAAC,KAAG,CAAA4I,MAAM,MAAM/I,UAAU,cAAcC,SAExC,aACC,KAAG,CAAA8I,MAAM,MAAM/I,UAAU,cAAcC,SAExC,cACC,KAAG,CAAA8I,MAAM,MAAM/I,UAAU,cAAcC,SAExC,qBACC,KAAG,CAAA8I,MAAM,MAAM/I,UAAU,cAAcC,SAExC,gBACC,KAAG,CAAA8I,MAAM,MAAM/I,UAAU,cAAcC,SAExC,kBACC,KAAG,CAAA8I,MAAM,MAAM/I,UAAU,cAAcC,SAExC,qBACC,KAAG,CAAA8I,MAAM,MAAM/I,UAAU,cAAcC,SAExC,kBACC,KAAG,CAAA8I,MAAM,MAAM/I,UAAU,cAAcC,SAExC,sBACC,KAAG,CAAA8I,MAAM,MAAM/I,UAAU,cAAcC,SAExC,iBACC,KAAG,CAAA8I,MAAM,MAAM/I,UAAU,cAAcC,SAExC,gBAGJE,IAAC,QACE,CAAAF,SAAA4H,EAAO/B,OAAS,EACf+B,EAAOrH,KAAI,CAACC,EAAM0B,MAChBjC,KAAC,KACC,CAAAD,SAAA,CAAAE,EAAAA,IAAC,MAAGH,UAAU,2BACVC,YAAO,GAAKqH,EAAQnF,EAAQ,IAE/BhC,EAAAA,IAAA,KAAA,CAAGH,UAAU,2BAA4BC,WAAKwF,MAC9CtF,EAAAA,IAAA,KAAA,CAAGH,UAAU,eAAgBC,WAAKsB,eAClCpB,EAAAA,IAAA,KAAA,CAAGH,UAAU,2BACXC,WAAK+I,aAEP7I,EAAAA,IAAA,KAAA,CAAGH,UAAU,2BACXC,WAAKgJ,mBAEP,KAAG,CAAAjJ,UAAU,2BAA4BC,SAAAQ,EAAKyI,IAAM,YACpD,KAAG,CAAAlJ,UAAU,2BACXC,SAAAQ,EAAK0I,SAAW,YAElB,KAAG,CAAAnJ,UAAU,2BACXC,SAAKQ,EAAA2I,gBACH,OAAK,CAAApJ,UAAU,mBACbC,SAAA,IAAIU,KAAKF,EAAK2I,WAAWxI,mBAG5B,MAGHT,MAAA,KAAA,CAAGH,UAAU,2BACXC,WAAKoJ,UACJlJ,EAAAA,IAAC,OAAK,CAAAH,UAAU,kBAAkBC,SAAA,cAChCQ,EAAK6I,SACNnJ,EAAAA,IAAA,OAAA,CAAKH,UAAU,mBAAmBC,SAAW,gBAC5CQ,EAAK8I,aACN,OAAK,CAAAvJ,UAAU,mBAAmBC,SAAA,kBAElC,OAAA,CAAKD,UAAU,qBAAqBC,iCAGxC,KAAG,CAAAD,UAAU,2BACZC,SAACC,EAAAA,KAAA,MAAA,CAAIF,UAAU,sCACbC,SAAA,CAAAI,EAAAF,IAAC,SAAA,CACCH,UAAU,yBACVO,MAAM,eACN,iBAAe,QACf,iBAAe,eACfD,QAAS,IAAM0H,EAAUvH,GAEzBR,SAAAE,EAAAA,IAAC,IAAE,CAAAH,UAAU,gBAGfK,EAAAF,IAAC,SAAA,CACCH,UAAU,yBACVO,MAAM,gBACND,QAAS,KAAMkJ,OAlIf9I,EAkI4BD,EAAKgJ,YAjI/CxE,EAAAyE,QACJtB,EAAW,CAAE1H,OACV0E,SACAuE,MAAMC,GAAQA,EAAIrE,UACrB,CACEsE,QAAS,iBACTvE,QAAUC,GAAYA,EACtBhB,MAAQA,GAAUA,EAAM9E,KAAK8F,UARd,IAAC7E,CAkIuC,EACvCgD,SAAU2E,IAAe5H,EAAK6I,SAE9BrJ,SAAAE,EAAAA,IAAC,IAAE,CAAAH,UAAU,yBAGfK,EAAAF,IAAC,SAAA,CACCH,UAAU,yBACVO,MAAM,aACND,QAAS,KAAMwJ,OAxJfpJ,EAwJ4BD,EAAKgJ,YAvJ/CxE,EAAAyE,QACJzB,EAAU,CAAEvH,KAAIZ,KAAMf,IACnBqG,SACAuE,MAAMC,GAAQA,EAAIrE,UACrB,CACEsE,QAAS,iBACTvE,QAAUC,GAAYA,EACtBhB,MAAQA,GAAUA,EAAM9E,KAAK8F,UARd,IAAC7E,CAwJuC,EACvCgD,SAAUwE,GAAczH,EAAK8I,SAAW9I,EAAK6I,SAE7CrJ,SAAAE,EAAAA,IAAC,IAAE,CAAAH,UAAU,yBAGfK,EAAAF,IAAC,SAAA,CACCH,UAAU,wBACVO,MAAM,eACND,QAAS,KACPyJ,OAxIFrJ,EAwIeD,EAAKgJ,OAxIhBhF,EAwIwBhE,EAAKiE,gBAvI/CO,EAAAyE,QACJnB,EAAW,CAAE7H,KAAI+D,UAAS3E,KAAMf,IAC7BqG,SACAuE,MAAMC,GAAQA,EAAIrE,UACrB,CACEsE,QAAS,iBACTvE,QAAUC,GAAYA,EACtBhB,MAAQA,GAAUA,EAAM9E,KAAK8F,UARd,IAAC7E,EAAI+D,CAwIuC,EAE3Cf,SAAU8E,IAAe/H,EAAK8I,OAE9BtJ,SAAAE,EAAAA,IAAC,IAAE,CAAAH,UAAU,2BA1EZS,EAAKiE,YAAcvC,WAiF7B,KACC,CAAAlC,eAAC,KAAG,CAAA+J,QAAQ,KAAKhK,UAAU,cACxBC,WACG,iBACA,iDAQf0D,GAAYC,aACf,ICxNJqG,EAAQC,SACNC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGF,MAAMC,EAAazD,EAAAA,YAAW,EAAGnI,UAAUoI,KACzC,MAAM1H,KAAEA,EAAM4E,UAAAA,EAAAE,MAAWA,UAAO5E,GAAYiL,EAAyB7L,EAAQ,CAC3EgB,MAAOhB,IAGT2J,EAAAC,oBAAoBxB,GAAK,KAAO,CAC9BxH,cAGF,MAAMkL,EAAY,CAChBC,QAAc,MAANrL,OAAM,EAAAA,EAAAe,KAAKC,GAASA,EAAKU,UAAU,GAC3C4J,SAAU,CACR,CACEC,MAAO,eACPvL,MAAY,MAANA,OAAM,EAAAA,EAAAe,KAAKC,GAASA,EAAKwK,aAAa,GAC5CC,YAAa,oBACbC,gBAAiB,0BACjBC,QAAS,GACTC,MAAM,EACNC,WAAY,SACZC,YAAa,EACbC,iBAAkB,EAClBC,qBAAsB,oBACtBC,iBAAkB,QAClBC,iBAAkB,KAsGxB,OAAItH,QAEC,MAAI,CAAArE,UAAU,0EACbC,SAAAE,EAAAA,IAAC,OAAIH,UAAU,8BAA8B0F,KAAK,SAChDzF,eAAC,OAAK,CAAAD,UAAU,kBAAkBC,SAAA,mBAMtCsE,IAEApE,IAAC,OAAIH,UAAU,qCACbC,eAAC,MAAI,CAAAD,UAAU,YAAYC,SAAA,gCAM9B,OAAID,UAAU,6BACbC,eAAC,MAAI,CAAA+C,MAAO,CAAEC,MAAO,OAAQ2I,OAAQ,OAAQC,UAAW,SACtD5L,SAAAE,EAAAA,IAAC2L,GAAKC,QAtHI,CACdC,YAAY,EACZC,qBAAqB,EACrBC,QAAS,CACPC,OAAQ,CACNC,SAAU,MACVtB,OAAQ,CACNuB,KAAM,CACJC,KAAM,GACNC,OAAQ,UAIdhM,MAAO,CACLiM,SAAS,EACTC,KAAM,yBACNJ,KAAM,CACJC,KAAM,GACNC,OAAQ,QAEVG,QAAS,IAEXC,QAAS,CACPxB,gBAAiB,2BACjByB,WAAY,OACZC,UAAW,OACXC,UAAW,CACTR,KAAM,GACNC,OAAQ,QAEVQ,SAAU,CACRT,KAAM,IAERI,QAAS,GACTxB,YAAa,0BACb8B,YAAa,EACbC,eAAe,EACfC,UAAW,CACT3M,MAAQ4M,GAAU,kBAAkBA,EAAM,GAAGnC,QAC7CA,MAAQvK,GAAS,iBAAiBA,EAAK2M,eAI7CC,OAAQ,CACNC,EAAG,CACDC,aAAa,EACbC,KAAM,CACJC,MAAO,qBACPC,YAAY,GAEdC,MAAO,CACLtB,KAAM,CACJC,KAAM,IAERsB,SAAU,GAEZrN,MAAO,CACLiM,SAAS,EACTC,KAAM,eACNJ,KAAM,CACJC,KAAM,GACNC,OAAQ,QAEVG,QAAS,KAGbmB,EAAG,CACDL,KAAM,CACJhB,SAAS,GAEXmB,MAAO,CACLtB,KAAM,CACJC,KAAM,KAGV/L,MAAO,CACLiM,SAAS,EACTC,KAAM,gBACNJ,KAAM,CACJC,KAAM,GACNC,OAAQ,QAEVG,QAAS,MAIfoB,YAAa,CACXC,WAAW,EACXC,KAAM,SAERC,SAAU,CACRC,KAAM,CACJlB,YAAa,KA0BWvN,KAAMoL,OAElC,ICtKEsD,EAAYjH,EAAWA,YAAA,EAAGnI,SAAQF,WAAWsI,KACjD,MAAOC,EAAMC,GAAW7H,EAAAA,SAAS,IAC1B8H,EAAOC,GAAY/H,EAAAA,SAAS,KAC5BgI,EAAQC,GAAajI,EAAAA,SAAS,IAC/BkI,EAAWC,EAAAA,UACXlI,KACJA,EAAO,CAAC,EAAA4E,UACRA,EAAAE,MACAA,EAAA5E,QACAA,GACEyO,EACF,CAAEtO,KAAMf,EAAQF,UAASuI,OAAME,QAAOE,UACtC,CACEzH,MAAOhB,IAIX2J,EAAAC,oBAAoBxB,GAAK,KAAO,CAC9BxH,UACAiJ,gBAAiB,IAAMlB,EAASmB,YAG5B,MAAAwF,GAAiB,MAAN5O,OAAM,EAAAA,EAAA4O,WAAY,GAGjC,OAAAhO,EAAAF,IAAC2I,EAAA,CACCzE,YACA+C,OACAC,UACAC,QACAC,WACAE,YACAK,UAAiB,MAANrI,OAAM,EAAAA,EAAAqI,UACjBC,WAAkB,MAANtI,OAAM,EAAAA,EAAAsI,WAElB9H,WAACC,KAAA,QAAA,CAAMiH,IAAKO,EAAU1H,UAAU,0CAC9BC,SAAA,QAAC,QACC,CAAAA,SAAA,QAAC,KACC,CAAAA,SAAA,CAAAE,MAAC,MAAG6J,QAAS,EAAGhK,UAAU,0BACvBC,SAAM,aAAA,EAAAR,EAAA6O,gBAETnO,EAAAA,IAAC,MAAG6J,QAAS,EAAGhK,UAAU,0BACxBC,WAAAC,KAAC,IAAE,CAAAF,UAAU,MACVC,SAAA,CAAM,MAAAR,OAAA,EAAAA,EAAA8O,UAAW,IACjBpO,EAAAA,IAAA,OAAA,CAAKH,UAAU,mBAAoBC,SAAM,aAAA,EAAAR,EAAA+O,wBAG7C,KAAG,CAAAxE,QAAS,EAAGhK,UAAU,0BACvBC,SAAM,aAAA,EAAAR,EAAAgP,yBAGV,KACC,CAAAxO,SAAA,CAAAE,MAAC,KAAG,CAAAuO,QAAS,EAAG1O,UAAU,2BAA2BC,SAErD,aACC,KAAG,CAAAyO,QAAS,EAAG1O,UAAU,2BAA2BC,SAErD,cACC,KAAG,CAAAyO,QAAS,EAAG1O,UAAU,2BAA2BC,SAErD,eACC,KAAG,CAAAyO,QAAS,EAAG1O,UAAU,2BAA2BC,SAErD,kBACC,KAAG,CAAAyO,QAAS,EAAG1O,UAAU,2BAA2BC,SAErD,gBACC,KAAG,CAAA+J,QAAS,EAAGhK,UAAU,2BAA2BC,SAErD,aACC,KAAG,CAAAyO,QAAS,EAAG1O,UAAU,2BAA2BC,SAErD,gBACC,KAAG,CAAAyO,QAAS,EAAG1O,UAAU,2BAA2BC,SAErD,oBAED,KACC,CAAAA,SAAA,CAACE,EAAAA,IAAA,KAAA,CAAGH,UAAU,2BAA2BC,SAAK,UAC7CE,EAAAA,IAAA,KAAA,CAAGH,UAAU,2BAA2BC,SAAK,UAC7CE,EAAAA,IAAA,KAAA,CAAGH,UAAU,2BAA2BC,SAAK,gBAGlDE,EAAAA,IAAC,SACEF,SAAU,MAAAoO,OAAA,EAAAA,EAAA7N,KAAI,CAACiE,EAAStC,WACtB,KACC,CAAAlC,SAAA,CAAAE,EAAAA,IAAC,MAAGH,UAAU,2BACVC,YAAO,GAAKqH,EAAQnF,EAAQ,IAE/BhC,EAAAA,IAAA,KAAA,CAAGH,UAAU,2BACXC,SAAS,aAAA,EAAAwE,EAAApD,cAEXlB,EAAAA,IAAA,KAAA,CAAGH,UAAU,2BACXC,SAAS,aAAA,EAAAwE,EAAAlD,eAEXpB,EAAAA,IAAA,KAAA,CAAGH,UAAU,2BACXC,SAAS,aAAA,EAAAwE,EAAAnD,gBAEXnB,EAAAA,IAAA,KAAA,CAAGH,UAAU,2BACXC,SAAS,aAAA,EAAAwE,EAAAjD,gBAEXrB,EAAAA,IAAA,KAAA,CAAGH,UAAU,2BAA4BC,SAAS,aAAA,EAAAwE,EAAA1D,UAClDZ,EAAAA,IAAA,KAAA,CAAGH,UAAU,2BAA4BC,SAAS,aAAA,EAAAwE,EAAAzD,YAClDb,EAAAA,IAAA,KAAA,CAAGH,UAAU,2BAA4BC,SAAS,aAAA,EAAAwE,EAAAkK,WAClDxO,EAAAA,IAAA,KAAA,CAAGH,UAAU,2BACXC,SAAS,aAAA,EAAAwE,EAAAvD,cAEXf,EAAAA,IAAA,KAAA,CAAGH,UAAU,2BAA4BC,SAAS,aAAA,EAAAwE,EAAAtD,UAtBnC,MAATsD,OAAS,EAAAA,EAAAC,oBA2B1B,IChHEkK,EAAa,KACjB,MAAM5P,KAAEA,EAAAD,OAAMA,EAAQE,MAAAA,GAAU4E,KACzBhF,EAASC,GAAcU,EAAAA,SAAS,KAChCL,EAAYC,GAAiBI,EAAAA,SAAS,SACvCkI,EAAWC,EAAAA,SACXkH,EAAWlH,EAAAA,SACXmH,EAAUnH,EAAAA,SA8Dd,OAAAtH,EAAAH,KAAC6O,EAAA,CACCxO,MAAO,iBAAiBvB,EAAKoB,QAAQ,KAAM,OAC3C4O,OAAQ,CAAC,QAAS,WAElB/O,SAAA,CAAAI,EAAAF,IAACvB,EAAA,CACCC,UACAC,aACAC,SACAC,OACAC,QACAC,UAtEgB,eAEpB,OAAAyG,EAAA+B,EAASmB,UAASlD,EAAAhG,UAClB,OAAAsP,EAAAJ,EAAShG,UAASoG,EAAAtP,UAClB,OAAAuP,EAAAJ,EAAQjG,UAASqG,EAAAvP,SAAA,EAmEbR,aACAC,gBACAC,SAlEiB,KACjB,GAAe,UAAfF,GAA0BuI,EAASmB,QAAS,CACxC,MAAAsG,EAAWC,EAAWC,WACtBC,EAAQ5H,EAASmB,QAAQD,kBACzB2G,EAAYH,EAAWI,eAAeF,GAEjCG,EAAAC,kBAAkBP,EAAUI,EAAW,UAE5C,MAAAI,EAAcC,EAAWT,EAAU,CACvCU,SAAU,OACV9M,KAAM,UAEFtD,EAAO,IAAIqQ,KAAK,CAACH,GAAc,CACnC5M,KAAM,sEAEFgN,EAAW,SAAS/Q,SAE1B,GAAIgR,UAAUC,WACFD,UAAAC,WAAWxQ,EAAMsQ,OACtB,CACC,MAAAG,EAAOxJ,SAASyJ,cAAc,KACpCD,EAAK3J,KAAON,OAAOmK,IAAIC,gBAAgB5Q,GACvCyQ,EAAKI,SAAWP,EAChBG,EAAKK,OAAM,CAEJ,MAAA,GAAe,SAAfpR,GAAyB2P,EAAQjG,QAAS,CAC7C,MAAAsG,EAAWC,EAAWC,WACtBC,EAAQR,EAAQjG,QAAQD,kBACxB2G,EAAYH,EAAWI,eAAeF,GAEjCG,EAAAC,kBAAkBP,EAAUI,EAAW,UAE5C,MAAAI,EAAcC,EAAWT,EAAU,CACvCU,SAAU,OACV9M,KAAM,UAEFtD,EAAO,IAAIqQ,KAAK,CAACH,GAAc,CACnC5M,KAAM,sEAEFgN,EAAW,QAAQ/Q,SAEzB,GAAIgR,UAAUC,WACFD,UAAAC,WAAWxQ,EAAMsQ,OACtB,CACC,MAAAG,EAAOxJ,SAASyJ,cAAc,KACpCD,EAAK3J,KAAON,OAAOmK,IAAIC,gBAAgB5Q,GACvCyQ,EAAKI,SAAWP,EAChBG,EAAKK,OAAM,CACb,OAoBArQ,KAAC,MAAI,CAAAF,UAAU,OACZC,SAAA,CAAe,UAAfd,GACEgB,EAAAA,IAAA8G,EAAA,CAAUE,IAAKO,EAAU3I,SAAgBF,YAE5B,UAAfM,GACCgB,EAAAA,IAACwK,GAAWxD,IAAK0H,EAAU9P,SAAgBF,YAE7B,SAAfM,GACCgB,EAAAA,IAACgO,GAAUhH,IAAK2H,EAAS/P,SAAgBF,iBAG/C"}