{"version":3,"file":"StudentCbt-BZP236F5.js","sources":["../../src/page/cbt/student/Modal.jsx","../../src/page/cbt/student/ExamList.jsx","../../src/page/student/cbt/StudentCbt.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  useGetUserLogQuery,\r\n  useAddCbtLogsMutation,\r\n} from \"../../../controller/api/log/ApiLog\";\r\n\r\nconst Modal = ({ exam, setExam }) => {\r\n  const [token, setToken] = useState(\"\");\r\n  const modalRef = useRef(null);\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { data: log, isLoading } = useGetUserLogQuery(\r\n    {\r\n      exam: exam.id,\r\n      student: user.user_id,\r\n    },\r\n    { skip: !exam.id || !user.user_id }\r\n  );\r\n  const [addCbtLogs, { isLoading: logLoading }] = useAddCbtLogsMutation();\r\n\r\n  const confirm = () => {\r\n    // 1. Check if exam exists\r\n    if (!exam.id) {\r\n      toast.error(\"Ujian tidak ditemukan\");\r\n      return;\r\n    }\r\n\r\n    // 2. Check token\r\n    if (token !== exam.token) {\r\n      toast.error(\"Token Salah\");\r\n      setToken(\"\");\r\n      return;\r\n    }\r\n\r\n    // 3. Check penalty\r\n    if (log && log.ispenalty) {\r\n      toast.error(\"Anda melanggar ketentuan\");\r\n      setToken(\"\");\r\n      return;\r\n    }\r\n\r\n    // 4. Check if already active\r\n    if (log && log.isactive) {\r\n      toast.error(\"Anda sedang mengikuti ujian\");\r\n      setToken(\"\");\r\n      return;\r\n    }\r\n\r\n    // 5. Check if already done\r\n    if (log && log.isdone) {\r\n      toast.error(\"Anda sudah mengikuti ujian\");\r\n      setToken(\"\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      exam: exam.id,\r\n      student: user.user_id,\r\n      action: \"start\",\r\n      start_time: new Date().toISOString(),\r\n    };\r\n\r\n    toast.promise(addCbtLogs(data).unwrap(), {\r\n      loading: \"Memuat...\",\r\n      success: (data) => {\r\n        // Only redirect on success\r\n        setExam({});\r\n        setToken(\"\");\r\n\r\n        // Close modal\r\n        const modalElement = document.getElementById(\"token\");\r\n        if (modalElement) {\r\n          const closeButton = modalElement.querySelector(\r\n            '[data-bs-dismiss=\"modal\"]'\r\n          );\r\n          if (closeButton) {\r\n            closeButton.click();\r\n          }\r\n        }\r\n\r\n        localStorage.removeItem(\"questions\");\r\n\r\n        const name = exam.name.replace(/\\s+/g, \"-\");\r\n        window.location.href = `/siswa-cbt/${name}/${exam.id}/${exam.token}`;\r\n      },\r\n      error: (error) => {\r\n        console.log(\"Error starting exam:\", error);\r\n        // Don't redirect on error, just show error message\r\n        return error.data?.message || \"Gagal memulai ujian\";\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (modalRef.current) {\r\n      modalRef.current.addEventListener(\"shown.bs.modal\", () => {\r\n        // Remove aria-hidden when modal is shown\r\n        modalRef.current.removeAttribute(\"aria-hidden\");\r\n      });\r\n\r\n      modalRef.current.addEventListener(\"hidden.bs.modal\", () => {\r\n        // Add aria-hidden when modal is hidden\r\n        modalRef.current.setAttribute(\"aria-hidden\", \"true\");\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const cancel = () => {\r\n    setExam({});\r\n    setToken(\"\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={modalRef}\r\n      className=\"modal fade\"\r\n      id=\"token\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"token-label\"\r\n      aria-modal=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"token-label\">\r\n              Token {exam.name}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              onClick={cancel}\r\n            ></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"token\"\r\n              id=\"token\"\r\n              className=\"form-control\"\r\n              placeholder=\"Masukkan Token\"\r\n              value={token}\r\n              onChange={(e) => setToken(e.target.value)}\r\n              aria-label=\"Token input\"\r\n            />\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-sm btn-danger\"\r\n              data-bs-dismiss=\"modal\"\r\n              onClick={cancel}\r\n            >\r\n              Tutup\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-sm btn-primary\"\r\n              onClick={confirm}\r\n              disabled={isLoading || logLoading}\r\n            >\r\n              Konfirmasi\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { useGetExamsByClassQuery } from \"../../../controller/api/cbt/ApiExam\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst ExamList = ({ classid }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const { data = {}, isLoading } = useGetExamsByClassQuery(\r\n    { classid, page, limit, search },\r\n    { skip: !classid }\r\n  );\r\n  const { exams = [], totalData, totalPages } = data;\r\n  const [exam, setExam] = useState({});\r\n\r\n  return (\r\n    <Table\r\n      isLoading={isLoading}\r\n      page={page}\r\n      setPage={setPage}\r\n      limit={limit}\r\n      setLimit={setLimit}\r\n      totalPages={totalPages}\r\n      setSearch={setSearch}\r\n      totalData={totalData}>\r\n      <table className='mb-0 table table-hover table-striped table-bordered'>\r\n        <thead>\r\n          <tr>\r\n            <th className='text-center'>No</th>\r\n            <th className='text-center'>Guru</th>\r\n            <th className='text-center'>Nama Ujian</th>\r\n            <th className='text-center'>Durasi</th>\r\n            <th className='text-center'>Status</th>\r\n            <th className='text-center'>Aksi</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {exams?.length > 0 ? (\r\n            exams?.map((item, index) => (\r\n              <tr key={item.id}>\r\n                <td className='text-center align-middle'>{index + 1}</td>\r\n                <td className='align-middle'>{item.teacher_name}</td>\r\n                <td className='align-middle'>{item.name}</td>\r\n                <td className='text-center align-middle'>\r\n                  <p className='m-0 badge bg-primary'>{`${item.duration} Menit`}</p>\r\n                </td>\r\n                <td className='text-center align-middle'>\r\n                  <p className='m-0'>\r\n                    {item.isactive ? (\r\n                      <span className='badge bg-success'>Aktif</span>\r\n                    ) : (\r\n                      <span className='badge bg-danger'>nonaktif</span>\r\n                    )}\r\n                  </p>\r\n                </td>\r\n                <td className='text-center align-middle'>\r\n                  <button\r\n                    className='btn btn-sm btn-primary'\r\n                    data-bs-toggle='modal'\r\n                    data-bs-target='#token'\r\n                    disabled={!item.isactive}\r\n                    onClick={() => setExam(item)}>\r\n                    <i className='bi bi-eye'></i>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={6}>Data Belum Tersedia</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <Modal exam={exam} setExam={setExam} />\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default ExamList;\r\n","import React from \"react\"\r\nimport Layout from \"../../../components/layout/Layout\"\r\nimport ExamList from \"../../cbt/student/ExamList\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst StudentCbt = () => {\r\n\tconst { user } = useSelector((state) => state.auth)\r\n\treturn (\r\n\t\t<Layout title={\"Daftar Ujian\"} levels={[\"student\"]}>\r\n\t\t\t<ExamList classid={user.class_id} />\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default StudentCbt\r\n"],"names":["Modal","exam","setExam","token","setToken","useState","modalRef","useRef","user","useSelector","state","auth","data","log","isLoading","useGetUserLogQuery","id","student","user_id","skip","addCbtLogs","logLoading","useAddCbtLogsMutation","useEffect","current","addEventListener","removeAttribute","setAttribute","cancel","jsxRuntimeExports","jsx","ref","className","tabIndex","role","children","jsxs","name","type","onClick","placeholder","value","onChange","e","target","toast","error","ispenalty","isactive","isdone","action","start_time","Date","toISOString","promise","unwrap","loading","success","modalElement","document","getElementById","closeButton","querySelector","click","localStorage","removeItem","replace","window","location","href","console","_a","message","disabled","ExamList","classid","page","setPage","limit","setLimit","search","setSearch","useGetExamsByClassQuery","exams","totalData","totalPages","Table","length","map","item","index","teacher_name","duration","colSpan","StudentCbt","Layout","title","levels","class_id"],"mappings":"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"}