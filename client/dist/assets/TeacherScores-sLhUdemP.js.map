{"version":3,"file":"TeacherScores-sLhUdemP.js","sources":["../../src/page/teacher/scores/Subjects.jsx","../../src/page/teacher/scores/FormData.jsx","../../src/page/teacher/scores/Tabs.jsx","../../src/page/teacher/scores/Upload.jsx","../../src/page/teacher/scores/Attitude.jsx","../../src/page/teacher/scores/Attendance.jsx","../../src/page/teacher/scores/Formative.jsx","../../src/page/teacher/scores/Summative.jsx","../../src/page/teacher/scores/Recap.jsx","../../src/page/teacher/scores/TeacherScores.jsx"],"sourcesContent":["import { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Subjects = ({ subjects, user }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const goToLink = (name, id) => {\r\n    const formattedName = name.replace(/\\s+/g, \"-\");\r\n    navigate(`/guru-penilaian?subject=${formattedName}&id=${id}`);\r\n  };\r\n\r\n  const container = {\r\n    hidden: { opacity: 0 },\r\n    show: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.1,\r\n      },\r\n    },\r\n  };\r\n\r\n  const item = {\r\n    hidden: { y: 20, opacity: 0 },\r\n    show: { y: 0, opacity: 1 },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"row g-3\"\r\n      variants={container}\r\n      initial=\"hidden\"\r\n      animate=\"show\"\r\n    >\r\n      {subjects.map((subject) => (\r\n        <motion.div\r\n          key={subject.id}\r\n          className=\"col-xl-3 col-lg-4 col-md-6\"\r\n          variants={item}\r\n        >\r\n          <div\r\n            className=\"card h-100 shadow-sm border-0 hover-card rounded-3 overflow-hidden\"\r\n            onClick={() => goToLink(subject.name, subject.id)}\r\n            style={{ cursor: \"pointer\", transition: \"all 0.3s ease\" }}\r\n          >\r\n            <div className=\"position-relative\">\r\n              <img\r\n                src={\r\n                  subject.cover\r\n                    ? `${window.location.origin}${subject.cover}`\r\n                    : `/logo.png`\r\n                }\r\n                alt={subject.name}\r\n                className=\"card-img-top\"\r\n                style={{\r\n                  height: \"250px\",\r\n                  objectFit: \"cover\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"card-body p-4\">\r\n              <h5 className=\"card-title mb-3 fw-bold text-primary\">\r\n                {subject.name}\r\n              </h5>\r\n              <div className=\"d-flex align-items-center text-muted mb-3\">\r\n                <i className=\"bi bi-mortarboard-fill me-2\"></i>\r\n                <span className=\"small\">{user?.name}</span>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-primary w-100 rounded-pill py-2\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  goToLink(subject.name, subject.id);\r\n                }}\r\n              >\r\n                <i className=\"bi bi-arrow-right-circle-fill me-2\"></i>\r\n                Kelola Penilaian\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      ))}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Subjects;\r\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport ReactSelect from \"react-select\";\nimport { useGetChaptersQuery } from \"../../../controller/api/lms/ApiChapter\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\n\nconst selectStyles = {\n  menuPortal: (base) => ({ ...base, zIndex: 10 }),\n  control: (base, state) => ({\n    ...base,\n    minHeight: \"38px\",\n    \"@media (max-width: 576px)\": {\n      minHeight: \"44px\",\n    },\n  }),\n  option: (base, state) => ({\n    ...base,\n    \"@media (max-width: 576px)\": {\n      padding: \"12px 16px\",\n    },\n  }),\n};\n\nconst months = [\n  \"Januari\",\n  \"Februari\",\n  \"Maret\",\n  \"April\",\n  \"Mei\",\n  \"Juni\",\n  \"Juli\",\n  \"Agustus\",\n  \"September\",\n  \"Oktober\",\n  \"November\",\n  \"Desember\",\n];\n\nconst semesters = [\n  { label: \"Semester 1\", value: 1 },\n  { label: \"Semester 2\", value: 2 },\n];\n\nconst FormData = ({ subject, id }) => {\n  const { data } = useGetChaptersQuery(id);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // Options untuk dropdown chapter\n  const chapterOptions = useMemo(\n    () =>\n      data?.map((chapter) => ({\n        value: chapter.chapter_id,\n        label: chapter.chapter_name,\n      })) || [],\n    [data]\n  );\n\n  // Ambil dari query url\n  const chapteridParam = searchParams.get(\"chapterid\");\n  const classidParam = searchParams.get(\"classid\");\n  const monthParam = searchParams.get(\"month\");\n  const semesterParam = searchParams.get(\"semester\");\n\n  // State\n  const [selectedChapter, setSelectedChapter] = useState(null);\n  const [selectedClass, setSelectedClass] = useState(null);\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [selectedSemester, setSelectedSemester] = useState(null);\n\n  // Class options tergantung chapter terpilih\n  const classOptions = useMemo(() => {\n    if (!selectedChapter && !chapteridParam) return [];\n    const chapterId = selectedChapter ? selectedChapter.value : chapteridParam;\n    const chapter = data?.find(\n      (c) => String(c.chapter_id) === String(chapterId)\n    );\n    return (\n      chapter?.class?.map((cls) => ({ value: cls.id, label: cls.name })) || []\n    );\n  }, [data, selectedChapter, chapteridParam]);\n\n  // Month options\n  const monthOptions = useMemo(\n    () => months.map((month) => ({ value: month, label: month })),\n    []\n  );\n\n  // Semester options\n  const semesterOptions = useMemo(\n    () =>\n      semesters.map((semester) => ({\n        value: semester.value,\n        label: semester.label,\n      })),\n    []\n  );\n\n  // Sinkronisasi state dengan query param setelah data/options siap\n  useEffect(() => {\n    // Set chapter\n    if (chapteridParam && chapterOptions.length > 0) {\n      const found = chapterOptions.find(\n        (opt) => String(opt.value) === String(chapteridParam)\n      );\n      setSelectedChapter(found || null);\n    }\n  }, [chapteridParam, chapterOptions]);\n\n  useEffect(() => {\n    // Set class\n    if (classidParam && classOptions.length > 0) {\n      const found = classOptions.find(\n        (opt) => String(opt.value) === String(classidParam)\n      );\n      setSelectedClass(found || null);\n    }\n  }, [classidParam, classOptions]);\n\n  useEffect(() => {\n    // Set month\n    if (monthParam && monthOptions.length > 0) {\n      const found = monthOptions.find((opt) => opt.value === monthParam);\n      setSelectedMonth(found || null);\n    }\n  }, [monthParam, monthOptions]);\n\n  useEffect(() => {\n    // Set semester\n    if (semesterParam && semesterOptions.length > 0) {\n      const found = semesterOptions.find(\n        (opt) => String(opt.value) === String(semesterParam)\n      );\n      setSelectedSemester(found || null);\n    }\n  }, [semesterParam, semesterOptions]);\n\n  // Handler untuk update query params\n  const updateQuery = (chapter, cls, month, semester) => {\n    const params = {};\n    // Pertahankan subject dan id\n    if (subject) params.subject = subject;\n    if (id) params.id = id;\n    if (chapter) params.chapterid = chapter.value;\n    if (cls) params.classid = cls.value;\n    if (month) params.month = month.value;\n    if (semester) params.semester = semester.value;\n    setSearchParams(params);\n  };\n\n  // Handler saat chapter berubah\n  const handleChapterChange = (option) => {\n    setSelectedChapter(option);\n    setSelectedClass(null); // reset kelas jika chapter berubah\n    updateQuery(option, null, selectedMonth, selectedSemester);\n  };\n\n  // Handler saat kelas berubah\n  const handleClassChange = (option) => {\n    setSelectedClass(option);\n    updateQuery(selectedChapter, option, selectedMonth, selectedSemester);\n  };\n\n  // Handler saat bulan berubah\n  const handleMonthChange = (option) => {\n    setSelectedMonth(option);\n    updateQuery(selectedChapter, selectedClass, option, selectedSemester);\n  };\n\n  // Handler saat semester berubah\n  const handleSemesterChange = (option) => {\n    setSelectedSemester(option);\n    updateQuery(selectedChapter, selectedClass, selectedMonth, option);\n  };\n\n  return (\n    <div className=\"form-data-container\">\n      {/* Desktop Layout - Horizontal */}\n      <div className=\"d-none d-lg-flex gap-3\">\n        <div className=\"flex-fill\">\n          <ReactSelect\n            options={chapterOptions}\n            value={selectedChapter}\n            onChange={handleChapterChange}\n            placeholder=\"Pilih Chapter\"\n            menuPortalTarget={document.body}\n            styles={selectStyles}\n          />\n        </div>\n        <div className=\"flex-fill\">\n          <ReactSelect\n            options={classOptions}\n            value={selectedClass}\n            onChange={handleClassChange}\n            placeholder=\"Pilih Kelas\"\n            isDisabled={!selectedChapter}\n            menuPortalTarget={document.body}\n            styles={selectStyles}\n          />\n        </div>\n        <div className=\"flex-fill\">\n          <ReactSelect\n            options={monthOptions}\n            value={selectedMonth}\n            onChange={handleMonthChange}\n            placeholder=\"Pilih Bulan\"\n            menuPortalTarget={document.body}\n            styles={selectStyles}\n          />\n        </div>\n        <div className=\"flex-fill\">\n          <ReactSelect\n            options={semesterOptions}\n            value={selectedSemester}\n            onChange={handleSemesterChange}\n            placeholder=\"Pilih Semester\"\n            menuPortalTarget={document.body}\n            styles={selectStyles}\n          />\n        </div>\n      </div>\n\n      {/* Tablet Layout - 2x2 Grid */}\n      <div className=\"d-none d-md-block d-lg-none\">\n        <div className=\"row g-3\">\n          <div className=\"col-md-6\">\n            <ReactSelect\n              options={chapterOptions}\n              value={selectedChapter}\n              onChange={handleChapterChange}\n              placeholder=\"Pilih Chapter\"\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n          <div className=\"col-md-6\">\n            <ReactSelect\n              options={classOptions}\n              value={selectedClass}\n              onChange={handleClassChange}\n              placeholder=\"Pilih Kelas\"\n              isDisabled={!selectedChapter}\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n          <div className=\"col-md-6\">\n            <ReactSelect\n              options={monthOptions}\n              value={selectedMonth}\n              onChange={handleMonthChange}\n              placeholder=\"Pilih Bulan\"\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n          <div className=\"col-md-6\">\n            <ReactSelect\n              options={semesterOptions}\n              value={selectedSemester}\n              onChange={handleSemesterChange}\n              placeholder=\"Pilih Semester\"\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile Layout - Vertical Stack */}\n      <div className=\"d-block d-md-none\">\n        <div className=\"d-flex flex-column gap-3\">\n          <div>\n            <label className=\"form-label fw-semibold mb-2\">Chapter</label>\n            <ReactSelect\n              options={chapterOptions}\n              value={selectedChapter}\n              onChange={handleChapterChange}\n              placeholder=\"Pilih Chapter\"\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n          <div>\n            <label className=\"form-label fw-semibold mb-2\">Kelas</label>\n            <ReactSelect\n              options={classOptions}\n              value={selectedClass}\n              onChange={handleClassChange}\n              placeholder=\"Pilih Kelas\"\n              isDisabled={!selectedChapter}\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n          <div>\n            <label className=\"form-label fw-semibold mb-2\">Bulan</label>\n            <ReactSelect\n              options={monthOptions}\n              value={selectedMonth}\n              onChange={handleMonthChange}\n              placeholder=\"Pilih Bulan\"\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n          <div>\n            <label className=\"form-label fw-semibold mb-2\">Semester</label>\n            <ReactSelect\n              options={semesterOptions}\n              value={selectedSemester}\n              onChange={handleSemesterChange}\n              placeholder=\"Pilih Semester\"\n              menuPortalTarget={document.body}\n              styles={selectStyles}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormData;\n","import React from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport \"./Scores.css\";\r\n\r\nconst Tabs = ({ tab, setTab }) => {\r\n  const [searchParams] = useSearchParams();\r\n  const subjectid = searchParams.get(\"id\");\r\n  const chapterid = searchParams.get(\"chapterid\");\r\n  const classid = searchParams.get(\"classid\");\r\n  const month = searchParams.get(\"month\");\r\n  const semester = searchParams.get(\"semester\");\r\n\r\n  const handleTabClick = (type) => {\r\n    setTab(type);\r\n  };\r\n\r\n  // Check if all required parameters are present\r\n  const hasRequiredParams =\r\n    classid && subjectid && chapterid && month && semester;\r\n\r\n  if (!hasRequiredParams) {\r\n    return (\r\n      <div className=\"alert alert-warning\">\r\n        <i className=\"bi bi-exclamation-triangle me-2\"></i>\r\n        <span className=\"d-none d-sm-inline\">\r\n          Pilih chapter, kelas, semester, dan bulan terlebih dahulu untuk\r\n          melihat data penilaian.\r\n        </span>\r\n        <span className=\"d-sm-none\">\r\n          Pilih chapter, kelas, semester, dan bulan terlebih dahulu.\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column gap-3\">\r\n      {/* Desktop Tabs */}\r\n      <ul className=\"nav nav-tabs justify-content-center d-none d-md-flex\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link pointer ${\r\n              tab === \"attendance\" ? \"active\" : \"\"\r\n            }`}\r\n            aria-current=\"page\"\r\n            onClick={() => handleTabClick(\"attendance\")}\r\n          >\r\n            Kehadiran\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link pointer ${tab === \"attitude\" ? \"active\" : \"\"}`}\r\n            aria-current=\"page\"\r\n            onClick={() => handleTabClick(\"attitude\")}\r\n          >\r\n            Sikap\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link pointer ${\r\n              tab === \"formative\" ? \"active\" : \"\"\r\n            }`}\r\n            aria-current=\"page\"\r\n            onClick={() => handleTabClick(\"formative\")}\r\n          >\r\n            Formatif\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link pointer ${\r\n              tab === \"summative\" ? \"active\" : \"\"\r\n            }`}\r\n            aria-current=\"page\"\r\n            onClick={() => handleTabClick(\"summative\")}\r\n          >\r\n            Sumatif\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link pointer ${tab === \"recap\" ? \"active\" : \"\"}`}\r\n            aria-current=\"page\"\r\n            onClick={() => handleTabClick(\"recap\")}\r\n          >\r\n            Rekapitulasi\r\n          </a>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* Mobile Tabs - Dropdown/Select */}\r\n      <div className=\"d-md-none\">\r\n        <select\r\n          className=\"form-select form-select-lg\"\r\n          value={tab}\r\n          onChange={(e) => handleTabClick(e.target.value)}\r\n          aria-label=\"Pilih jenis penilaian\"\r\n        >\r\n          <option value=\"attendance\">Kehadiran</option>\r\n          <option value=\"attitude\">Sikap</option>\r\n          <option value=\"formative\">Formatif</option>\r\n          <option value=\"summative\">Sumatif</option>\r\n          <option value=\"recap\">Rekapitulasi</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Mobile Tabs - Scrollable Horizontal */}\r\n      <div className=\"d-none d-sm-block d-md-none\">\r\n        <div className=\"nav-scroll-container\">\r\n          <ul className=\"nav nav-tabs nav-tabs-scroll\">\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className={`nav-link pointer ${\r\n                  tab === \"attendance\" ? \"active\" : \"\"\r\n                }`}\r\n                aria-current=\"page\"\r\n                onClick={() => handleTabClick(\"attendance\")}\r\n              >\r\n                Kehadiran\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className={`nav-link pointer ${\r\n                  tab === \"attitude\" ? \"active\" : \"\"\r\n                }`}\r\n                aria-current=\"page\"\r\n                onClick={() => handleTabClick(\"attitude\")}\r\n              >\r\n                Sikap\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className={`nav-link pointer ${\r\n                  tab === \"formative\" ? \"active\" : \"\"\r\n                }`}\r\n                aria-current=\"page\"\r\n                onClick={() => handleTabClick(\"formative\")}\r\n              >\r\n                Formatif\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className={`nav-link pointer ${\r\n                  tab === \"summative\" ? \"active\" : \"\"\r\n                }`}\r\n                aria-current=\"page\"\r\n                onClick={() => handleTabClick(\"summative\")}\r\n              >\r\n                Sumatif\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className={`nav-link pointer ${\r\n                  tab === \"recap\" ? \"active\" : \"\"\r\n                }`}\r\n                aria-current=\"page\"\r\n                onClick={() => handleTabClick(\"recap\")}\r\n              >\r\n                Rekapitulasi\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import React from \"react\";\r\n\r\nconst Upload = ({ type, title, onSubmit, isLoading, inputRef, setFile }) => {\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"upload-score\"\r\n      data-bs-backdrop=\"static\"\r\n      data-bs-keyboard=\"false\"\r\n      tabIndex=\"-1\"\r\n    >\r\n      <div className=\"modal-dialog\">\r\n        <form onSubmit={onSubmit} className=\"modal-content p-3\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"uploadScoreModalLabel\">\r\n              {title}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            ></button>\r\n          </div>\r\n          <div className=\"modal-body d-flex flex-column gap-3\">\r\n            <div className=\"alert alert-info py-2 d-flex align-items-center gap-2\">\r\n              <i className=\"bi bi-info-circle-fill\"></i>\r\n              Upload file Excel sesuai template yang disediakan.\r\n            </div>\r\n            <input\r\n              ref={inputRef}\r\n              type=\"file\"\r\n              name={type}\r\n              id={type}\r\n              className=\"form-control\"\r\n              onChange={(e) => setFile(e.target.files[0])}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-sm btn-success\"\r\n              disabled={isLoading}\r\n            >\r\n              <i className=\"bi bi-upload me-1\"></i>Upload Data\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  useGetAttitudeQuery,\r\n  useUpsertAttitudeMutation,\r\n  useBulkUpsertAttitudeMutation,\r\n} from \"../../../controller/api/lms/ApiScore\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport * as XLSX from \"xlsx\";\r\nimport Upload from \"./Upload\";\r\n\r\nconst Attitude = ({\r\n  data,\r\n  isLoading,\r\n  page,\r\n  setPage,\r\n  limit,\r\n  setLimit,\r\n  search,\r\n  setSearch,\r\n  totalData,\r\n  totalPages,\r\n}) => {\r\n  const [attitudeScores, setAttitudeScores] = useState({});\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const subjectid = searchParams.get(\"id\");\r\n  const chapterid = searchParams.get(\"chapterid\");\r\n  const classid = searchParams.get(\"classid\");\r\n  const month = searchParams.get(\"month\");\r\n  const semester = searchParams.get(\"semester\");\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const teacher_id = user?.id;\r\n\r\n  const { data: attitudeData, refetch } = useGetAttitudeQuery(\r\n    { classid, subjectid, chapterid, month, semester },\r\n    {\r\n      skip: !classid || !subjectid || !chapterid || !month || !semester,\r\n      refetchOnMountOrArgChange: true,\r\n    }\r\n  );\r\n\r\n  // Reset scores when parameters change\r\n  useEffect(() => {\r\n    setAttitudeScores({});\r\n  }, [classid, subjectid, chapterid, month, semester]);\r\n\r\n  useEffect(() => {\r\n    if (attitudeData && Array.isArray(attitudeData)) {\r\n      const mapped = {};\r\n      for (const row of attitudeData) {\r\n        mapped[row.student_id] = {\r\n          kinerja:\r\n            row.kinerja !== null && row.kinerja !== undefined\r\n              ? row.kinerja\r\n              : \"\",\r\n          kedisiplinan:\r\n            row.kedisiplinan !== null && row.kedisiplinan !== undefined\r\n              ? row.kedisiplinan\r\n              : \"\",\r\n          keaktifan:\r\n            row.keaktifan !== null && row.keaktifan !== undefined\r\n              ? row.keaktifan\r\n              : \"\",\r\n          percayaDiri:\r\n            row.percaya_diri !== null && row.percaya_diri !== undefined\r\n              ? row.percaya_diri\r\n              : \"\",\r\n          catatan: row.catatan_guru ?? \"\",\r\n        };\r\n      }\r\n      if (Object.keys(mapped).length > 0) setAttitudeScores(mapped);\r\n    }\r\n  }, [attitudeData]);\r\n\r\n  const [\r\n    upsertAttitude,\r\n    { isLoading: isSaving, isSuccess, data: upsertData, isError, error },\r\n  ] = useUpsertAttitudeMutation();\r\n\r\n  const handleScoreChange = (studentId, field, value) => {\r\n    setAttitudeScores((prev) => ({\r\n      ...prev,\r\n      [studentId]: {\r\n        ...prev[studentId],\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSave = async (student) => {\r\n    const studentScores = attitudeScores[student.student] || {};\r\n    await upsertAttitude({\r\n      student_id: student.student,\r\n      subject_id: Number(subjectid),\r\n      class_id: Number(classid),\r\n      chapter_id: Number(chapterid),\r\n      teacher_id,\r\n      month,\r\n      semester,\r\n      kinerja: studentScores.kinerja ? Number(studentScores.kinerja) : null,\r\n      kedisiplinan: studentScores.kedisiplinan\r\n        ? Number(studentScores.kedisiplinan)\r\n        : null,\r\n      keaktifan: studentScores.keaktifan\r\n        ? Number(studentScores.keaktifan)\r\n        : null,\r\n      percaya_diri: studentScores.percayaDiri\r\n        ? Number(studentScores.percayaDiri)\r\n        : null,\r\n      catatan_guru: studentScores.catatan || null,\r\n    });\r\n  };\r\n\r\n  const calculateAverage = (studentId) => {\r\n    const scores = attitudeScores[studentId];\r\n    if (!scores) return 0;\r\n\r\n    const values = [\r\n      scores.kinerja,\r\n      scores.kedisiplinan,\r\n      scores.keaktifan,\r\n      scores.percayaDiri,\r\n    ].filter((score) => score !== \"\" && score !== null && score !== undefined);\r\n\r\n    if (values.length === 0) return 0;\r\n    return (\r\n      values.reduce((sum, score) => sum + Number(score), 0) / values.length\r\n    ).toFixed(1);\r\n  };\r\n\r\n  // Upload file\r\n  const inputRef = useRef(null);\r\n  const [\r\n    bulkUpsertAttitude,\r\n    {\r\n      isLoading: isBulkUpserting,\r\n      isSuccess: isBulkUpsertSuccess,\r\n      isError: isBulkUpsertError,\r\n      error: bulkUpsertError,\r\n      data: bulkUpsertData,\r\n    },\r\n  ] = useBulkUpsertAttitudeMutation();\r\n\r\n  const [file, setFile] = useState(null);\r\n\r\n  const onDownload = () => {\r\n    // Prepare data for Excel export\r\n    const excelData = [\r\n      // Header row\r\n      [\r\n        \"NIS\",\r\n        \"Nama Siswa\",\r\n        \"Kinerja\",\r\n        \"Kedisiplinan\",\r\n        \"Keaktifan\",\r\n        \"Percaya Diri\",\r\n        \"Catatan\",\r\n        \"rata-rata\",\r\n      ],\r\n    ];\r\n\r\n    // Add student data rows\r\n    if (data?.students) {\r\n      data.students.forEach((student) => {\r\n        const studentScores = attitudeScores[student.student] || {};\r\n        const average = calculateAverage(student.student);\r\n\r\n        excelData.push([\r\n          student.nis || \"\",\r\n          student.student_name || \"\",\r\n          studentScores.kinerja || \"\",\r\n          studentScores.kedisiplinan || \"\",\r\n          studentScores.keaktifan || \"\",\r\n          studentScores.percayaDiri || \"\",\r\n          studentScores.catatan || \"\",\r\n          average || \"\",\r\n        ]);\r\n      });\r\n    }\r\n\r\n    // Create workbook and worksheet\r\n    const workbook = XLSX.utils.book_new();\r\n    const worksheet = XLSX.utils.aoa_to_sheet(excelData);\r\n\r\n    // Set column widths for better formatting\r\n    const columnWidths = [\r\n      { wch: 15 }, // NIS\r\n      { wch: 30 }, // Nama Siswa\r\n      { wch: 12 }, // Kinerja\r\n      { wch: 15 }, // Kedisiplinan\r\n      { wch: 12 }, // Keaktifan\r\n      { wch: 15 }, // Percaya Diri\r\n      { wch: 40 }, // Catatan\r\n      { wch: 12 }, // rata-rata\r\n    ];\r\n    worksheet[\"!cols\"] = columnWidths;\r\n\r\n    // Add worksheet to workbook\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Penilaian Sikap\");\r\n\r\n    // Generate filename with current date\r\n    const currentDate = new Date().toISOString().split(\"T\")[0];\r\n    const filename = `penilaian_sikap_${currentDate}.xlsx`;\r\n\r\n    // Write and download the file\r\n    XLSX.writeFile(workbook, filename);\r\n\r\n    toast.success(\"File Excel berhasil diunduh!\");\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const data = new Uint8Array(e.target.result);\r\n        const workbook = XLSX.read(data, { type: \"array\" });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const sheet = workbook.Sheets[sheetName];\r\n        const jsonData = XLSX.utils.sheet_to_json(sheet, {\r\n          header: 1,\r\n          range: 1,\r\n        });\r\n\r\n        // Filter data to only include columns A, B, C, D, E and rows that are not null\r\n        const filteredData = jsonData\r\n          .map((row) => {\r\n            const [colA, colB, colC, colD, colE, colF, colG, colH] = row;\r\n            return [colA, colB, colC, colD, colE, colF, colG, colH];\r\n          })\r\n          .filter((row) =>\r\n            row.every((cell) => cell !== null && cell !== undefined)\r\n          );\r\n\r\n        // Pastikan filteredData adalah array\r\n        const result = Array.isArray(filteredData)\r\n          ? filteredData\r\n          : [filteredData];\r\n\r\n        toast.promise(\r\n          bulkUpsertAttitude({\r\n            classid: Number(classid),\r\n            subjectid: Number(subjectid),\r\n            chapterid: Number(chapterid),\r\n            month,\r\n            semester,\r\n            data: result,\r\n          })\r\n            .unwrap()\r\n            .then((res) => res.message),\r\n          {\r\n            loading: \"Menyimpan data...\",\r\n            success: (message) => message,\r\n            error: (err) => err.data.message,\r\n          }\r\n        );\r\n      };\r\n\r\n      reader.readAsArrayBuffer(file);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isBulkUpsertSuccess) {\r\n      inputRef.current.value = null;\r\n      setFile(null);\r\n      const closeModal = document.querySelector(\"[data-bs-dismiss='modal']\");\r\n      closeModal.click();\r\n    }\r\n\r\n    if (isBulkUpsertError) {\r\n      toast.error(bulkUpsertError.data.message);\r\n      inputRef.current.value = null;\r\n      setFile(null);\r\n    }\r\n  }, [isBulkUpsertSuccess, isBulkUpsertError, bulkUpsertData, refetch]);\r\n\r\n  useEffect(() => {\r\n    const modal = document.getElementById(\"upload-score\");\r\n    if (!modal) return;\r\n    const handler = () => {\r\n      // Reset state/input jika perlu\r\n      setFile(null);\r\n      if (inputRef.current) inputRef.current.value = null;\r\n    };\r\n    modal.addEventListener(\"hidden.bs.modal\", handler);\r\n    return () => modal.removeEventListener(\"hidden.bs.modal\", handler);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      toast.success(upsertData.message);\r\n      // Refetch data after successful save to update the UI\r\n      refetch();\r\n    }\r\n\r\n    if (isError) {\r\n      toast.error(error.data.message);\r\n    }\r\n  }, [isSuccess, upsertData, isError, error, refetch]);\r\n\r\n  return (\r\n    <>\r\n      <Upload\r\n        type=\"attitude\"\r\n        title=\"Upload Penilaian Sikap\"\r\n        onSubmit={onSubmit}\r\n        inputRef={inputRef}\r\n        setFile={setFile}\r\n      />\r\n      <div className=\"card\">\r\n        <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n          <h5 className=\"card-title mb-0\">Penilaian Sikap</h5>\r\n\r\n          <div className=\"d-flex gap-2\">\r\n            <button\r\n              className=\"btn btn-sm btn-outline-success\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#upload-score\"\r\n            >\r\n              <i className=\"bi bi-upload\"></i> Upload\r\n            </button>\r\n            <button\r\n              className=\"btn btn-sm btn-outline-success\"\r\n              onClick={onDownload}\r\n            >\r\n              <i className=\"bi bi-download\"></i> Download\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card-body\">\r\n          <div className=\"table-responsive\">\r\n            <Table\r\n              isLoading={isLoading}\r\n              totalData={totalData}\r\n              totalPages={totalPages}\r\n              page={page}\r\n              limit={limit}\r\n              setPage={setPage}\r\n              setLimit={setLimit}\r\n              setSearch={setSearch}\r\n            >\r\n              <table className=\"table table-bordered table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center align-middle\">No</th>\r\n                    <th className=\"text-center align-middle\">NIS</th>\r\n                    <th className=\"text-center align-middle\">Nama Siswa</th>\r\n                    <th\r\n                      className=\"text-center align-middle\"\r\n                      style={{ backgroundColor: \"#fff3cd\" }}\r\n                    >\r\n                      Kinerja\r\n                    </th>\r\n                    <th\r\n                      className=\"text-center align-middle\"\r\n                      style={{ backgroundColor: \"#fff3cd\" }}\r\n                    >\r\n                      Kedisiplinan\r\n                    </th>\r\n                    <th\r\n                      className=\"text-center align-middle\"\r\n                      style={{ backgroundColor: \"#fff3cd\" }}\r\n                    >\r\n                      Keaktifan\r\n                    </th>\r\n                    <th\r\n                      className=\"text-center align-middle\"\r\n                      style={{ backgroundColor: \"#fff3cd\" }}\r\n                    >\r\n                      Percaya Diri\r\n                    </th>\r\n                    <th\r\n                      className=\"text-center align-middle\"\r\n                      style={{ backgroundColor: \"#d1ecf1\" }}\r\n                    >\r\n                      Catatan\r\n                    </th>\r\n                    <th className=\"text-center align-middle\">Rerata</th>\r\n                    <th className=\"text-center align-middle\">Aksi</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data?.students?.map((student, index) => (\r\n                    <tr key={student.id}>\r\n                      <td className=\"text-center align-middle\">\r\n                        {(page - 1) * limit + index + 1}\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        {student.nis}\r\n                      </td>\r\n                      <td className=\"align-middle\">{student.student_name}</td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm text-center\"\r\n                          min=\"0\"\r\n                          max=\"100\"\r\n                          value={attitudeScores[student.student]?.kinerja ?? \"\"}\r\n                          onChange={(e) =>\r\n                            handleScoreChange(\r\n                              student.student,\r\n                              \"kinerja\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                          placeholder=\"0-100\"\r\n                        />\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm text-center\"\r\n                          min=\"0\"\r\n                          max=\"100\"\r\n                          value={\r\n                            attitudeScores[student.student]?.kedisiplinan ?? \"\"\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleScoreChange(\r\n                              student.student,\r\n                              \"kedisiplinan\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                          placeholder=\"0-100\"\r\n                        />\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm text-center\"\r\n                          min=\"0\"\r\n                          max=\"100\"\r\n                          value={\r\n                            attitudeScores[student.student]?.keaktifan ?? \"\"\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleScoreChange(\r\n                              student.student,\r\n                              \"keaktifan\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                          placeholder=\"0-100\"\r\n                        />\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm text-center\"\r\n                          min=\"0\"\r\n                          max=\"100\"\r\n                          value={\r\n                            attitudeScores[student.student]?.percayaDiri ?? \"\"\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleScoreChange(\r\n                              student.student,\r\n                              \"percayaDiri\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                          placeholder=\"0-100\"\r\n                        />\r\n                      </td>\r\n                      <td className=\"align-middle\">\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"2\"\r\n                          value={attitudeScores[student.student]?.catatan || \"\"}\r\n                          onChange={(e) =>\r\n                            handleScoreChange(\r\n                              student.student,\r\n                              \"catatan\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                          placeholder=\"Catatan guru...\"\r\n                        />\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"fw-bold text-primary\">\r\n                          {calculateAverage(student.student)}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <button\r\n                          className=\"btn btn-sm btn-primary\"\r\n                          onClick={() => handleSave(student)}\r\n                          disabled={isSaving}\r\n                        >\r\n                          <i className=\"bi bi-floppy\"></i>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Attitude;\r\n","import React, { useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useGetPresensiSummaryQuery } from \"../../../controller/api/lms/ApiPresensi\";\r\nimport LoadingScreen from \"../../../components/loader/LoadingScreen\";\r\n\r\nconst Attendance = ({\r\n  data,\r\n  isLoading,\r\n  page,\r\n  setPage,\r\n  limit,\r\n  setLimit,\r\n  search,\r\n  setSearch,\r\n  totalData,\r\n  totalPages,\r\n}) => {\r\n  const [searchParams] = useSearchParams();\r\n  const classid = searchParams.get(\"classid\");\r\n  const subjectid = searchParams.get(\"id\");\r\n  const monthName = searchParams.get(\"month\");\r\n\r\n  // Convert month name to month number\r\n  const months = [\r\n    \"Januari\",\r\n    \"Februari\",\r\n    \"Maret\",\r\n    \"April\",\r\n    \"Mei\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"Agustus\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Desember\",\r\n  ];\r\n\r\n  const selectedMonth = monthName\r\n    ? months.indexOf(monthName) + 1\r\n    : new Date().getMonth() + 1;\r\n  const selectedYear = new Date().getFullYear();\r\n\r\n  const { data: summaryData, isLoading: summaryLoading } =\r\n    useGetPresensiSummaryQuery(\r\n      {\r\n        classid,\r\n        subjectid,\r\n        month: selectedMonth,\r\n        year: selectedYear,\r\n      },\r\n      { skip: !classid || !subjectid }\r\n    );\r\n\r\n  const [attendanceScores, setAttendanceScores] = useState({});\r\n\r\n  const handleScoreChange = (studentId, value) => {\r\n    setAttendanceScores((prev) => ({\r\n      ...prev,\r\n      [studentId]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSave = (student) => {\r\n    const studentScore = attendanceScores[student.studentid] || \"\";\r\n    console.log(\"Menyimpan nilai kehadiran untuk siswa:\", {\r\n      studentId: student.studentid,\r\n      studentName: student.student_name,\r\n      score: studentScore,\r\n    });\r\n  };\r\n\r\n  if (!classid || !subjectid) {\r\n    return (\r\n      <div className=\"text-center py-5 empty-state\">\r\n        <div className=\"mb-3\">\r\n          <i className=\"bi bi-calendar-check display-1 text-muted\"></i>\r\n        </div>\r\n        <h5 className=\"fw-bold text-muted mb-2\">Pilih Data Presensi</h5>\r\n        <p className=\"text-muted mb-0\">\r\n          Silakan pilih mata pelajaran dan kelas terlebih dahulu\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (summaryLoading) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header bg-primary text-white\">\r\n        <h5 className=\"card-title mb-0\">\r\n          <i className=\"bi bi-calendar-month me-2\"></i>\r\n          Penilaian Kehadiran Bulanan\r\n        </h5>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {summaryData && summaryData.length > 0 ? (\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover table-striped\">\r\n              <thead className=\"table-dark\">\r\n                <tr>\r\n                  <th className=\"text-center\" style={{ width: \"5%\" }}>\r\n                    No\r\n                  </th>\r\n                  <th style={{ width: \"10%\" }}>NIS</th>\r\n                  <th style={{ width: \"25%\" }}>Nama Siswa</th>\r\n                  <th className=\"text-center\" style={{ width: \"10%\" }}>\r\n                    <i className=\"bi bi-check-circle text-success me-1\"></i>\r\n                    Hadir\r\n                  </th>\r\n                  <th className=\"text-center\" style={{ width: \"10%\" }}>\r\n                    <i className=\"bi bi-heart-pulse text-primary me-1\"></i>\r\n                    Sakit\r\n                  </th>\r\n                  <th className=\"text-center\" style={{ width: \"10%\" }}>\r\n                    <i className=\"bi bi-envelope-paper text-info me-1\"></i>\r\n                    Izin\r\n                  </th>\r\n                  <th className=\"text-center\" style={{ width: \"10%\" }}>\r\n                    <i className=\"bi bi-x-circle text-danger me-1\"></i>\r\n                    Alpa\r\n                  </th>\r\n                  <th className=\"text-center\" style={{ width: \"10%\" }}>\r\n                    <i className=\"bi bi-percent text-warning me-1\"></i>\r\n                    Kehadiran\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {summaryData.map((student, index) => {\r\n                  const totalDays =\r\n                    student.hadir + student.sakit + student.izin + student.alpa;\r\n                  const attendanceRate =\r\n                    totalDays > 0\r\n                      ? ((student.hadir / totalDays) * 100).toFixed(1)\r\n                      : 0;\r\n\r\n                  return (\r\n                    <tr key={student.studentid} className=\"attendance-change\">\r\n                      <td className=\"text-center align-middle\">{index + 1}</td>\r\n                      <td className=\"align-middle\">{student.nis}</td>\r\n                      <td className=\"align-middle fw-bold\">\r\n                        {student.student_name}\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge bg-success fs-6\">\r\n                          {student.hadir}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge bg-primary fs-6\">\r\n                          {student.sakit}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge bg-info fs-6\">\r\n                          {student.izin}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge bg-danger fs-6\">\r\n                          {student.alpa}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span\r\n                          className={`badge fs-6 ${\r\n                            attendanceRate >= 90\r\n                              ? \"bg-success\"\r\n                              : attendanceRate >= 80\r\n                              ? \"bg-warning\"\r\n                              : \"bg-danger\"\r\n                          }`}\r\n                        >\r\n                          {attendanceRate}%\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center py-5 empty-state\">\r\n            <div className=\"mb-3\">\r\n              <i className=\"bi bi-calendar-x display-1 text-muted\"></i>\r\n            </div>\r\n            <h5 className=\"fw-bold text-muted mb-2\">Data Tidak Tersedia</h5>\r\n            <p className=\"text-muted mb-0\">\r\n              Tidak ada data presensi untuk periode yang dipilih\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Attendance;\r\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  useGetFormativeQuery,\r\n  useUpsertFormativeMutation,\r\n  useBulkUpsertFormativeMutation,\r\n} from \"../../../controller/api/lms/ApiScore\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport * as XLSX from \"xlsx\";\r\nimport Upload from \"./Upload\";\r\n\r\nconst Formative = ({\r\n  data,\r\n  isLoading,\r\n  page,\r\n  setPage,\r\n  limit,\r\n  setLimit,\r\n  search,\r\n  setSearch,\r\n  totalData,\r\n  totalPages,\r\n}) => {\r\n  const [formativeScores, setFormativeScores] = useState({});\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const subjectid = searchParams.get(\"id\");\r\n  const chapterid = searchParams.get(\"chapterid\");\r\n  const classid = searchParams.get(\"classid\");\r\n  const month = searchParams.get(\"month\");\r\n  const semester = searchParams.get(\"semester\");\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const { data: formativeData, refetch } = useGetFormativeQuery(\r\n    { classid, subjectid, chapterid, month, semester },\r\n    {\r\n      skip: !classid || !subjectid || !chapterid || !month || !semester,\r\n      refetchOnMountOrArgChange: true,\r\n    }\r\n  );\r\n\r\n  // Reset scores when parameters change\r\n  useEffect(() => {\r\n    setFormativeScores({});\r\n  }, [classid, subjectid, chapterid, month, semester]);\r\n\r\n  useEffect(() => {\r\n    if (formativeData && Array.isArray(formativeData)) {\r\n      const mapped = {};\r\n      for (const row of formativeData) {\r\n        mapped[row.student_id] = {\r\n          tugas1: row.f_1 !== null && row.f_1 !== undefined ? row.f_1 : \"\",\r\n          tugas2: row.f_2 !== null && row.f_2 !== undefined ? row.f_2 : \"\",\r\n          tugas3: row.f_3 !== null && row.f_3 !== undefined ? row.f_3 : \"\",\r\n          tugas4: row.f_4 !== null && row.f_4 !== undefined ? row.f_4 : \"\",\r\n          tugas5: row.f_5 !== null && row.f_5 !== undefined ? row.f_5 : \"\",\r\n          tugas6: row.f_6 !== null && row.f_6 !== undefined ? row.f_6 : \"\",\r\n          tugas7: row.f_7 !== null && row.f_7 !== undefined ? row.f_7 : \"\",\r\n          tugas8: row.f_8 !== null && row.f_8 !== undefined ? row.f_8 : \"\",\r\n        };\r\n      }\r\n      if (Object.keys(mapped).length > 0) setFormativeScores(mapped);\r\n    }\r\n  }, [formativeData]);\r\n\r\n  const [\r\n    upsertFormative,\r\n    { isLoading: isSaving, isSuccess, data: upsertData, isError, error },\r\n  ] = useUpsertFormativeMutation();\r\n\r\n  // Upload file\r\n  const inputRef = useRef(null);\r\n  const [\r\n    bulkUpsertFormative,\r\n    {\r\n      isLoading: isBulkUpserting,\r\n      isSuccess: isBulkUpsertSuccess,\r\n      isError: isBulkUpsertError,\r\n      error: bulkUpsertError,\r\n      data: bulkUpsertData,\r\n    },\r\n  ] = useBulkUpsertFormativeMutation();\r\n\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleScoreChange = (studentId, taskNumber, value) => {\r\n    setFormativeScores((prev) => ({\r\n      ...prev,\r\n      [studentId]: {\r\n        ...prev[studentId],\r\n        [`tugas${taskNumber}`]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSave = async (student) => {\r\n    const s = formativeScores[student.student] || {};\r\n    await upsertFormative({\r\n      student_id: student.student,\r\n      subject_id: Number(subjectid),\r\n      class_id: Number(classid),\r\n      chapter_id: Number(chapterid),\r\n      month,\r\n      semester,\r\n      F_1: s.tugas1 ? Number(s.tugas1) : null,\r\n      F_2: s.tugas2 ? Number(s.tugas2) : null,\r\n      F_3: s.tugas3 ? Number(s.tugas3) : null,\r\n      F_4: s.tugas4 ? Number(s.tugas4) : null,\r\n      F_5: s.tugas5 ? Number(s.tugas5) : null,\r\n      F_6: s.tugas6 ? Number(s.tugas6) : null,\r\n      F_7: s.tugas7 ? Number(s.tugas7) : null,\r\n      F_8: s.tugas8 ? Number(s.tugas8) : null,\r\n    });\r\n  };\r\n\r\n  const calculateAverage = (studentId) => {\r\n    const scores = formativeScores[studentId];\r\n    if (!scores) return 0;\r\n\r\n    const values = [];\r\n    for (let i = 1; i <= 8; i++) {\r\n      const score = scores[`tugas${i}`];\r\n      if (score !== \"\" && score !== null && score !== undefined) {\r\n        values.push(Number(score));\r\n      }\r\n    }\r\n\r\n    if (values.length === 0) return 0;\r\n    return (\r\n      values.reduce((sum, score) => sum + score, 0) / values.length\r\n    ).toFixed(1);\r\n  };\r\n\r\n  const onDownload = () => {\r\n    // Prepare data for Excel export\r\n    const excelData = [\r\n      // Header row\r\n      [\r\n        \"NIS\",\r\n        \"Nama Siswa\",\r\n        \"F_1\",\r\n        \"F_2\",\r\n        \"F_3\",\r\n        \"F_4\",\r\n        \"F_5\",\r\n        \"F_6\",\r\n        \"F_7\",\r\n        \"F_8\",\r\n        \"Rerata\",\r\n      ],\r\n    ];\r\n\r\n    // Add student data rows\r\n    if (data?.students) {\r\n      data.students.forEach((student) => {\r\n        const studentScores = formativeScores[student.student] || {};\r\n        const average = calculateAverage(student.student);\r\n\r\n        excelData.push([\r\n          student.nis || \"\",\r\n          student.student_name || \"\",\r\n          studentScores.tugas1 || \"\",\r\n          studentScores.tugas2 || \"\",\r\n          studentScores.tugas3 || \"\",\r\n          studentScores.tugas4 || \"\",\r\n          studentScores.tugas5 || \"\",\r\n          studentScores.tugas6 || \"\",\r\n          studentScores.tugas7 || \"\",\r\n          studentScores.tugas8 || \"\",\r\n          average || \"\",\r\n        ]);\r\n      });\r\n    }\r\n\r\n    // Create workbook and worksheet\r\n    const workbook = XLSX.utils.book_new();\r\n    const worksheet = XLSX.utils.aoa_to_sheet(excelData);\r\n\r\n    // Set column widths for better formatting\r\n    const columnWidths = [\r\n      { wch: 15 }, // NIS\r\n      { wch: 30 }, // Nama Siswa\r\n      { wch: 12 }, // F_1\r\n      { wch: 12 }, // F_2\r\n      { wch: 12 }, // F_3\r\n      { wch: 12 }, // F_4\r\n      { wch: 12 }, // F_5\r\n      { wch: 12 }, // F_6\r\n      { wch: 12 }, // F_7\r\n      { wch: 12 }, // F_8\r\n      { wch: 12 }, // rata-rata\r\n    ];\r\n    worksheet[\"!cols\"] = columnWidths;\r\n\r\n    // Add worksheet to workbook\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Penilaian Formatif\");\r\n\r\n    // Generate filename with current date\r\n    const currentDate = new Date().toISOString().split(\"T\")[0];\r\n    const filename = `penilaian_formatif_${currentDate}.xlsx`;\r\n\r\n    // Write and download the file\r\n    XLSX.writeFile(workbook, filename);\r\n\r\n    toast.success(\"File Excel berhasil diunduh!\");\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const data = new Uint8Array(e.target.result);\r\n        const workbook = XLSX.read(data, { type: \"array\" });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const sheet = workbook.Sheets[sheetName];\r\n        const jsonData = XLSX.utils.sheet_to_json(sheet, {\r\n          header: 1,\r\n          range: 1,\r\n        });\r\n\r\n        // Filter data to only include columns A, B, C, D, E, F, G, H, I, J and rows that are not null\r\n        const filteredData = jsonData\r\n          .map((row) => {\r\n            const [\r\n              colA,\r\n              colB,\r\n              colC,\r\n              colD,\r\n              colE,\r\n              colF,\r\n              colG,\r\n              colH,\r\n              colI,\r\n              colJ,\r\n              colK,\r\n            ] = row;\r\n            return [\r\n              colA,\r\n              colB,\r\n              colC,\r\n              colD,\r\n              colE,\r\n              colF,\r\n              colG,\r\n              colH,\r\n              colI,\r\n              colJ,\r\n              colK,\r\n            ];\r\n          })\r\n          .filter((row) =>\r\n            row.every((cell) => cell !== null && cell !== undefined)\r\n          );\r\n\r\n        // Pastikan filteredData adalah array\r\n        const result = Array.isArray(filteredData)\r\n          ? filteredData\r\n          : [filteredData];\r\n\r\n        toast.promise(\r\n          bulkUpsertFormative({\r\n            classid: Number(classid),\r\n            subjectid: Number(subjectid),\r\n            chapterid: Number(chapterid),\r\n            month,\r\n            semester,\r\n            data: result,\r\n          })\r\n            .unwrap()\r\n            .then((res) => res.message),\r\n          {\r\n            loading: \"Menyimpan data...\",\r\n            success: (message) => message,\r\n            error: (err) => err.data.message,\r\n          }\r\n        );\r\n      };\r\n\r\n      reader.readAsArrayBuffer(file);\r\n    }\r\n  };\r\n\r\n  const renderTaskColumns = () => {\r\n    const columns = [];\r\n    for (let i = 1; i <= 8; i++) {\r\n      columns.push(\r\n        <th\r\n          key={i}\r\n          className=\"text-center align-middle\"\r\n          style={{ backgroundColor: \"#dc3545\", color: \"white\" }}\r\n        >\r\n          f_{i}\r\n        </th>\r\n      );\r\n    }\r\n    return columns;\r\n  };\r\n\r\n  const renderTaskInputs = (student) => {\r\n    const inputs = [];\r\n    for (let i = 1; i <= 8; i++) {\r\n      inputs.push(\r\n        <td key={i} className=\"text-center align-middle\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm text-center\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={formativeScores[student.student]?.[`tugas${i}`] ?? \"\"}\r\n            onChange={(e) =>\r\n              handleScoreChange(student.student, i, e.target.value)\r\n            }\r\n            placeholder=\"0-100\"\r\n          />\r\n        </td>\r\n      );\r\n    }\r\n    return inputs;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isBulkUpsertSuccess) {\r\n      inputRef.current.value = null;\r\n      setFile(null);\r\n      const closeModal = document.querySelector(\"[data-bs-dismiss='modal']\");\r\n      closeModal.click();\r\n    }\r\n\r\n    if (isBulkUpsertError) {\r\n      toast.error(bulkUpsertError.data.message);\r\n      inputRef.current.value = null;\r\n      setFile(null);\r\n    }\r\n  }, [isBulkUpsertSuccess, isBulkUpsertError, bulkUpsertData, refetch]);\r\n\r\n  useEffect(() => {\r\n    const modal = document.getElementById(\"upload-score\");\r\n    if (!modal) return;\r\n    const handler = () => {\r\n      // Reset state/input jika perlu\r\n      setFile(null);\r\n      if (inputRef.current) inputRef.current.value = null;\r\n    };\r\n    modal.addEventListener(\"hidden.bs.modal\", handler);\r\n    return () => modal.removeEventListener(\"hidden.bs.modal\", handler);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      toast.success(upsertData.message);\r\n      // Refetch data after successful save to update the UI\r\n      refetch();\r\n    }\r\n\r\n    if (isError) {\r\n      toast.error(error.data.message);\r\n    }\r\n  }, [isSuccess, upsertData, isError, error, refetch]);\r\n\r\n  return (\r\n    <>\r\n      <Upload\r\n        type=\"formative\"\r\n        title=\"Upload Penilaian Formatif\"\r\n        onSubmit={onSubmit}\r\n        inputRef={inputRef}\r\n        setFile={setFile}\r\n      />\r\n      <div className=\"card\">\r\n        <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n          <h5 className=\"card-title mb-0\">Penilaian Formatif</h5>\r\n\r\n          <div className=\"d-flex gap-2\">\r\n            <button\r\n              className=\"btn btn-sm btn-outline-success\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#upload-score\"\r\n            >\r\n              <i className=\"bi bi-upload\"></i> Upload\r\n            </button>\r\n            <button\r\n              className=\"btn btn-sm btn-outline-success\"\r\n              onClick={onDownload}\r\n            >\r\n              <i className=\"bi bi-download\"></i> Download\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"table-responsive\">\r\n            <Table\r\n              isLoading={isLoading}\r\n              totalData={totalData}\r\n              totalPages={totalPages}\r\n              page={page}\r\n              limit={limit}\r\n              setPage={setPage}\r\n              setLimit={setLimit}\r\n              setSearch={setSearch}\r\n            >\r\n              <table className=\"table table-bordered table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center align-middle\">No</th>\r\n                    <th className=\"text-center align-middle\">NIS</th>\r\n                    <th className=\"text-center align-middle\">Nama Siswa</th>\r\n                    {renderTaskColumns()}\r\n                    <th className=\"text-center align-middle\">Rerata</th>\r\n                    <th className=\"text-center align-middle\">Aksi</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data?.students?.map((student, index) => (\r\n                    <tr key={student.id}>\r\n                      <td className=\"text-center align-middle\">\r\n                        {(page - 1) * limit + index + 1}\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        {student.nis}\r\n                      </td>\r\n                      <td className=\"align-middle\">{student.student_name}</td>\r\n                      {renderTaskInputs(student)}\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"fw-bold text-primary\">\r\n                          {calculateAverage(student.student)}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <button\r\n                          className=\"btn btn-sm btn-primary\"\r\n                          onClick={() => handleSave(student)}\r\n                          disabled={isSaving}\r\n                        >\r\n                          <i className=\"bi bi-floppy\"></i>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Formative;\r\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  useGetSummativeQuery,\r\n  useUpsertSummativeMutation,\r\n  useBulkUpsertSummativeMutation,\r\n} from \"../../../controller/api/lms/ApiScore\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport * as XLSX from \"xlsx\";\r\nimport Upload from \"./Upload\";\r\n\r\nconst Summative = ({\r\n  data,\r\n  isLoading,\r\n  page,\r\n  setPage,\r\n  limit,\r\n  setLimit,\r\n  search,\r\n  setSearch,\r\n  totalData,\r\n  totalPages,\r\n}) => {\r\n  const [summativeScores, setSummativeScores] = useState({});\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const subjectid = searchParams.get(\"id\");\r\n  const chapterid = searchParams.get(\"chapterid\");\r\n  const classid = searchParams.get(\"classid\");\r\n  const month = searchParams.get(\"month\");\r\n  const semester = searchParams.get(\"semester\");\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const { data: summativeData, refetch } = useGetSummativeQuery(\r\n    { classid, subjectid, chapterid, month, semester },\r\n    {\r\n      skip: !classid || !subjectid || !chapterid || !month || !semester,\r\n      refetchOnMountOrArgChange: true,\r\n    }\r\n  );\r\n\r\n  // Reset scores when parameters change\r\n  useEffect(() => {\r\n    setSummativeScores({});\r\n  }, [classid, subjectid, chapterid, month, semester]);\r\n\r\n  useEffect(() => {\r\n    if (summativeData && Array.isArray(summativeData)) {\r\n      const mapped = {};\r\n      for (const row of summativeData) {\r\n        mapped[row.student_id] = {\r\n          oral: row.oral !== null && row.oral !== undefined ? row.oral : \"\",\r\n          written:\r\n            row.written !== null && row.written !== undefined\r\n              ? row.written\r\n              : \"\",\r\n          project:\r\n            row.project !== null && row.project !== undefined\r\n              ? row.project\r\n              : \"\",\r\n          performace:\r\n            row.performace !== null && row.performace !== undefined\r\n              ? row.performace\r\n              : \"\",\r\n        };\r\n      }\r\n      if (Object.keys(mapped).length > 0) setSummativeScores(mapped);\r\n    }\r\n  }, [summativeData]);\r\n\r\n  const [\r\n    upsertSummative,\r\n    { isLoading: isSaving, isSuccess, data: upsertData, isError, error },\r\n  ] = useUpsertSummativeMutation();\r\n\r\n  // Upload file\r\n  const inputRef = useRef(null);\r\n  const [\r\n    bulkUpsertSummative,\r\n    {\r\n      isLoading: isBulkUpserting,\r\n      isSuccess: isBulkUpsertSuccess,\r\n      isError: isBulkUpsertError,\r\n      error: bulkUpsertError,\r\n      data: bulkUpsertData,\r\n    },\r\n  ] = useBulkUpsertSummativeMutation();\r\n\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleScoreChange = (studentId, field, value) => {\r\n    setSummativeScores((prev) => ({\r\n      ...prev,\r\n      [studentId]: {\r\n        ...prev[studentId],\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSave = async (student) => {\r\n    const s = summativeScores[student.student] || {};\r\n    await upsertSummative({\r\n      student_id: student.student,\r\n      subject_id: Number(subjectid),\r\n      class_id: Number(classid),\r\n      chapter_id: Number(chapterid),\r\n      month,\r\n      semester,\r\n      oral: s.oral ? Number(s.oral) : null,\r\n      written: s.written ? Number(s.written) : null,\r\n      project: s.project ? Number(s.project) : null,\r\n      performace: s.performace ? Number(s.performace) : null,\r\n    });\r\n  };\r\n\r\n  const calculateAverage = (studentId) => {\r\n    const scores = summativeScores[studentId];\r\n    if (!scores) return 0;\r\n\r\n    const values = [];\r\n    if (\r\n      scores.oral !== \"\" &&\r\n      scores.oral !== null &&\r\n      scores.oral !== undefined\r\n    ) {\r\n      values.push(Number(scores.oral));\r\n    }\r\n    if (\r\n      scores.written !== \"\" &&\r\n      scores.written !== null &&\r\n      scores.written !== undefined\r\n    ) {\r\n      values.push(Number(scores.written));\r\n    }\r\n    if (\r\n      scores.project !== \"\" &&\r\n      scores.project !== null &&\r\n      scores.project !== undefined\r\n    ) {\r\n      values.push(Number(scores.project));\r\n    }\r\n    if (\r\n      scores.performace !== \"\" &&\r\n      scores.performace !== null &&\r\n      scores.performace !== undefined\r\n    ) {\r\n      values.push(Number(scores.performace));\r\n    }\r\n\r\n    if (values.length === 0) return 0;\r\n    return (\r\n      values.reduce((sum, score) => sum + score, 0) / values.length\r\n    ).toFixed(1);\r\n  };\r\n\r\n  const onDownload = () => {\r\n    // Prepare data for Excel export\r\n    const excelData = [\r\n      // Header row\r\n      [\r\n        \"NIS\",\r\n        \"Nama Siswa\",\r\n        \"Lisan\",\r\n        \"Tulis\",\r\n        \"Proyek\",\r\n        \"Keterampilan\",\r\n        \"Rerata\",\r\n      ],\r\n    ];\r\n\r\n    // Add student data rows\r\n    if (data?.students) {\r\n      data.students.forEach((student) => {\r\n        const studentScores = summativeScores[student.student] || {};\r\n        const average = calculateAverage(student.student);\r\n\r\n        excelData.push([\r\n          student.nis || \"\",\r\n          student.student_name || \"\",\r\n          studentScores.oral || \"\",\r\n          studentScores.written || \"\",\r\n          studentScores.project || \"\",\r\n          studentScores.performace || \"\",\r\n          average || \"\",\r\n        ]);\r\n      });\r\n    }\r\n\r\n    // Create workbook and worksheet\r\n    const workbook = XLSX.utils.book_new();\r\n    const worksheet = XLSX.utils.aoa_to_sheet(excelData);\r\n\r\n    // Set column widths for better formatting\r\n    const columnWidths = [\r\n      { wch: 15 }, // NIS\r\n      { wch: 30 }, // Nama Siswa\r\n      { wch: 12 }, // Oral\r\n      { wch: 12 }, // Written\r\n      { wch: 12 }, // Project\r\n      { wch: 12 }, // Performace\r\n      { wch: 12 }, // rata-rata\r\n    ];\r\n    worksheet[\"!cols\"] = columnWidths;\r\n\r\n    // Add worksheet to workbook\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Penilaian Sumatif\");\r\n\r\n    // Generate filename with current date\r\n    const currentDate = new Date().toISOString().split(\"T\")[0];\r\n    const filename = `penilaian_sumatif_${currentDate}.xlsx`;\r\n\r\n    // Write and download the file\r\n    XLSX.writeFile(workbook, filename);\r\n\r\n    toast.success(\"File Excel berhasil diunduh!\");\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const data = new Uint8Array(e.target.result);\r\n        const workbook = XLSX.read(data, { type: \"array\" });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const sheet = workbook.Sheets[sheetName];\r\n        const jsonData = XLSX.utils.sheet_to_json(sheet, {\r\n          header: 1,\r\n          range: 1,\r\n        });\r\n\r\n        // Filter data to only include columns A, B, C, D, E, F, G and rows that are not null\r\n        const filteredData = jsonData\r\n          .map((row) => {\r\n            const [colA, colB, colC, colD, colE, colF, colG] = row;\r\n            return [colA, colB, colC, colD, colE, colF, colG];\r\n          })\r\n          .filter((row) =>\r\n            row.every((cell) => cell !== null && cell !== undefined)\r\n          );\r\n\r\n        // Pastikan filteredData adalah array\r\n        const result = Array.isArray(filteredData)\r\n          ? filteredData\r\n          : [filteredData];\r\n\r\n        toast.promise(\r\n          bulkUpsertSummative({\r\n            classid: Number(classid),\r\n            subjectid: Number(subjectid),\r\n            chapterid: Number(chapterid),\r\n            month,\r\n            semester,\r\n            data: result,\r\n          })\r\n            .unwrap()\r\n            .then((res) => res.message),\r\n          {\r\n            loading: \"Menyimpan data...\",\r\n            success: (message) => message,\r\n            error: (err) => err.data.message,\r\n          }\r\n        );\r\n      };\r\n\r\n      reader.readAsArrayBuffer(file);\r\n    }\r\n  };\r\n\r\n  const renderSumatifColumns = () => {\r\n    return [\r\n      <th\r\n        key='oral'\r\n        className='text-center align-middle'\r\n        style={{ backgroundColor: \"#fff3cd\" }}\r\n      >\r\n        <div>Lisan</div>\r\n      </th>,\r\n      <th\r\n        key='written'\r\n        className='text-center align-middle'\r\n        style={{ backgroundColor: \"#fff3cd\" }}\r\n      >\r\n        <div>Tulis</div>\r\n      </th>,\r\n      <th\r\n        key='project'\r\n        className='text-center align-middle'\r\n        style={{ backgroundColor: \"#fff3cd\" }}\r\n      >\r\n        <div>Proyek</div>\r\n      </th>,\r\n      <th\r\n        key='performace'\r\n        className='text-center align-middle'\r\n        style={{ backgroundColor: \"#fff3cd\" }}\r\n      >\r\n        <div>Keterampilan</div>\r\n      </th>,\r\n    ];\r\n  };\r\n\r\n  const renderSumatifInputs = (student) => {\r\n    const studentScores = summativeScores[student.student] || {};\r\n    return [\r\n      <td key='oral' className='text-center align-middle'>\r\n        <input\r\n          type='number'\r\n          className='form-control form-control-sm text-center'\r\n          min='0'\r\n          max='100'\r\n          value={studentScores.oral ?? \"\"}\r\n          onChange={(e) =>\r\n            handleScoreChange(student.student, \"oral\", e.target.value)\r\n          }\r\n          placeholder='0-100'\r\n        />\r\n      </td>,\r\n      <td key='written' className='text-center align-middle'>\r\n        <input\r\n          type='number'\r\n          className='form-control form-control-sm text-center'\r\n          min='0'\r\n          max='100'\r\n          value={studentScores.written ?? \"\"}\r\n          onChange={(e) =>\r\n            handleScoreChange(student.student, \"written\", e.target.value)\r\n          }\r\n          placeholder='0-100'\r\n        />\r\n      </td>,\r\n      <td key='project' className='text-center align-middle'>\r\n        <input\r\n          type='number'\r\n          className='form-control form-control-sm text-center'\r\n          min='0'\r\n          max='100'\r\n          value={studentScores.project ?? \"\"}\r\n          onChange={(e) =>\r\n            handleScoreChange(student.student, \"project\", e.target.value)\r\n          }\r\n          placeholder='0-100'\r\n        />\r\n      </td>,\r\n      <td key='performace' className='text-center align-middle'>\r\n        <input\r\n          type='number'\r\n          className='form-control form-control-sm text-center'\r\n          min='0'\r\n          max='100'\r\n          value={studentScores.performace ?? \"\"}\r\n          onChange={(e) =>\r\n            handleScoreChange(student.student, \"performace\", e.target.value)\r\n          }\r\n          placeholder='0-100'\r\n        />\r\n      </td>,\r\n    ];\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isBulkUpsertSuccess) {\r\n      inputRef.current.value = null;\r\n      setFile(null);\r\n      const closeModal = document.querySelector(\"[data-bs-dismiss='modal']\");\r\n      closeModal.click();\r\n    }\r\n\r\n    if (isBulkUpsertError) {\r\n      toast.error(bulkUpsertError.data.message);\r\n      inputRef.current.value = null;\r\n      setFile(null);\r\n    }\r\n  }, [isBulkUpsertSuccess, isBulkUpsertError, bulkUpsertData, refetch]);\r\n\r\n  useEffect(() => {\r\n    const modal = document.getElementById(\"upload-score\");\r\n    if (!modal) return;\r\n    const handler = () => {\r\n      // Reset state/input jika perlu\r\n      setFile(null);\r\n      if (inputRef.current) inputRef.current.value = null;\r\n    };\r\n    modal.addEventListener(\"hidden.bs.modal\", handler);\r\n    return () => modal.removeEventListener(\"hidden.bs.modal\", handler);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      toast.success(upsertData.message);\r\n      // Refetch data after successful save to update the UI\r\n      refetch();\r\n    }\r\n\r\n    if (isError) {\r\n      toast.error(error.data.message);\r\n    }\r\n  }, [isSuccess, upsertData, isError, error, refetch]);\r\n\r\n  return (\r\n    <>\r\n      <Upload\r\n        type='summative'\r\n        title='Upload Penilaian Sumatif'\r\n        onSubmit={onSubmit}\r\n        inputRef={inputRef}\r\n        setFile={setFile}\r\n      />\r\n      <div className='card'>\r\n        <div className='card-header d-flex justify-content-between align-items-center'>\r\n          <h5 className='card-title mb-0'>Penilaian Sumatif</h5>\r\n\r\n          <div className='d-flex gap-2'>\r\n            <button\r\n              className='btn btn-sm btn-outline-success'\r\n              data-bs-toggle='modal'\r\n              data-bs-target='#upload-score'\r\n            >\r\n              <i className='bi bi-upload'></i> Upload\r\n            </button>\r\n            <button\r\n              className='btn btn-sm btn-outline-success'\r\n              onClick={onDownload}\r\n            >\r\n              <i className='bi bi-download'></i> Download\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='card-body'>\r\n          <div className='table-responsive'>\r\n            <Table\r\n              isLoading={isLoading}\r\n              totalData={totalData}\r\n              totalPages={totalPages}\r\n              page={page}\r\n              limit={limit}\r\n              setPage={setPage}\r\n              setLimit={setLimit}\r\n              setSearch={setSearch}\r\n            >\r\n              <table className='table table-bordered table-striped table-hover'>\r\n                <thead>\r\n                  <tr>\r\n                    <th className='text-center align-middle'>No</th>\r\n                    <th className='text-center align-middle'>NIS</th>\r\n                    <th className='text-center align-middle'>Nama Siswa</th>\r\n                    {renderSumatifColumns()}\r\n                    <th className='text-center align-middle'>Rata2</th>\r\n                    <th className='text-center align-middle'>Aksi</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data?.students?.map((student, index) => (\r\n                    <tr key={student.id}>\r\n                      <td className='text-center align-middle'>\r\n                        {(page - 1) * limit + index + 1}\r\n                      </td>\r\n                      <td className='text-center align-middle'>\r\n                        {student.nis}\r\n                      </td>\r\n                      <td className='align-middle'>{student.student_name}</td>\r\n                      {renderSumatifInputs(student)}\r\n                      <td className='text-center align-middle'>\r\n                        <span className='fw-bold text-primary'>\r\n                          {calculateAverage(student.student)}\r\n                        </span>\r\n                      </td>\r\n                      <td className='text-center align-middle'>\r\n                        <button\r\n                          className='btn btn-sm btn-primary'\r\n                          onClick={() => handleSave(student)}\r\n                          disabled={isSaving}\r\n                        >\r\n                          <i className='bi bi-floppy'></i>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Summative;\r\n","import React from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useGetRecapQuery } from \"../../../controller/api/lms/ApiScore\";\r\nimport Table from \"../../../components/table/Table\";\r\n\r\nconst Recap = ({\r\n  data,\r\n  isLoading: studentsLoading,\r\n  page,\r\n  setPage,\r\n  limit,\r\n  setLimit,\r\n  search,\r\n  setSearch,\r\n  totalData,\r\n  totalPages,\r\n}) => {\r\n  const [searchParams] = useSearchParams();\r\n  const classid = searchParams.get(\"classid\");\r\n  const subjectid = searchParams.get(\"id\");\r\n  const chapterid = searchParams.get(\"chapterid\");\r\n  const month = searchParams.get(\"month\");\r\n  const semester = searchParams.get(\"semester\");\r\n\r\n  // Fetch recap data\r\n  const { data: recapData, isLoading: recapLoading } = useGetRecapQuery(\r\n    {\r\n      classid,\r\n      subjectid,\r\n      chapterid,\r\n      month,\r\n      semester,\r\n    },\r\n    {\r\n      skip: !classid || !subjectid || !chapterid || !month || !semester,\r\n    }\r\n  );\r\n\r\n  const isLoading = studentsLoading || recapLoading;\r\n\r\n  // Create a map of student data for easy lookup\r\n  const recapMap = new Map();\r\n  if (recapData && Array.isArray(recapData)) {\r\n    recapData.forEach((item) => {\r\n      recapMap.set(item.student_id, item);\r\n    });\r\n  }\r\n\r\n  // Calculate averages for summary row\r\n  const calculateAverages = () => {\r\n    if (!recapData || !Array.isArray(recapData) || recapData.length === 0)\r\n      return null;\r\n\r\n    const totals = recapData.reduce(\r\n      (acc, item) => {\r\n        acc.kehadiran += parseFloat(item.kehadiran) || 0;\r\n        acc.sikap += parseFloat(item.sikap) || 0;\r\n        acc.formatif += parseFloat(item.formatif) || 0;\r\n        acc.sumatif += parseFloat(item.sumatif) || 0;\r\n        return acc;\r\n      },\r\n      { kehadiran: 0, sikap: 0, formatif: 0, sumatif: 0 }\r\n    );\r\n\r\n    const count = recapData.length;\r\n    return {\r\n      kehadiran: (totals.kehadiran / count).toFixed(2),\r\n      sikap: (totals.sikap / count).toFixed(2),\r\n      formatif: (totals.formatif / count).toFixed(2),\r\n      sumatif: (totals.sumatif / count).toFixed(2),\r\n    };\r\n  };\r\n\r\n  const averages = calculateAverages();\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h5 className=\"card-title mb-0\">Rekap Nilai</h5>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"table-responsive\">\r\n          <Table\r\n            isLoading={isLoading}\r\n            totalData={totalData}\r\n            totalPages={totalPages}\r\n            page={page}\r\n            limit={limit}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            setSearch={setSearch}\r\n          >\r\n            <table className=\"table table-bordered table-striped table-hover\">\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    No\r\n                  </th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ width: \"100px\" }}\r\n                  >\r\n                    NIS\r\n                  </th>\r\n                  <th className=\"text-center align-middle\">Siswa</th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ width: \"100px\" }}\r\n                  >\r\n                    Kehadiran\r\n                  </th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ width: \"80px\" }}\r\n                  >\r\n                    Sikap\r\n                  </th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ width: \"100px\" }}\r\n                  >\r\n                    Formatif\r\n                  </th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ width: \"100px\" }}\r\n                  >\r\n                    Sumatif\r\n                  </th>\r\n                  <th\r\n                    className=\"text-center align-middle\"\r\n                    style={{ width: \"300px\" }}\r\n                  >\r\n                    Catatan\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data?.students?.map((student, index) => {\r\n                  const recap = recapMap.get(student.student);\r\n\r\n                  return (\r\n                    <tr key={student.id}>\r\n                      <td className=\"text-center align-middle fw-bold\">\r\n                        {(page - 1) * limit + index + 1}\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        {student.nis}\r\n                      </td>\r\n                      <td className=\"align-middle fw-medium\">\r\n                        {student.student_name}\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        {recap && parseFloat(recap.kehadiran) > 0 ? (\r\n                          <span\r\n                            className={`badge ${\r\n                              parseFloat(recap.kehadiran) >= 80\r\n                                ? \"bg-success\"\r\n                                : parseFloat(recap.kehadiran) >= 60\r\n                                ? \"bg-warning\"\r\n                                : \"bg-danger\"\r\n                            }`}\r\n                          >\r\n                            {recap.kehadiran}%\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"text-muted\">-</span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        {recap && parseFloat(recap.sikap) > 0 ? (\r\n                          <span\r\n                            className={`fw-bold ${\r\n                              parseFloat(recap.sikap) >= 80\r\n                                ? \"text-success\"\r\n                                : parseFloat(recap.sikap) >= 60\r\n                                ? \"text-warning\"\r\n                                : \"text-danger\"\r\n                            }`}\r\n                          >\r\n                            {recap.sikap}\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"text-muted\">-</span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        {recap && parseFloat(recap.formatif) > 0 ? (\r\n                          <span\r\n                            className={`fw-bold ${\r\n                              parseFloat(recap.formatif) >= 80\r\n                                ? \"text-success\"\r\n                                : parseFloat(recap.formatif) >= 60\r\n                                ? \"text-warning\"\r\n                                : \"text-danger\"\r\n                            }`}\r\n                          >\r\n                            {recap.formatif}\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"text-muted\">-</span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        {recap && parseFloat(recap.sumatif) > 0 ? (\r\n                          <span\r\n                            className={`fw-bold ${\r\n                              parseFloat(recap.sumatif) >= 80\r\n                                ? \"text-success\"\r\n                                : parseFloat(recap.sumatif) >= 60\r\n                                ? \"text-warning\"\r\n                                : \"text-danger\"\r\n                            }`}\r\n                          >\r\n                            {recap.sumatif}\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"text-muted\">-</span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"align-middle\">\r\n                        <small className=\"text-muted\">\r\n                          {recap?.catatan || \"-\"}\r\n                        </small>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n              {averages && (\r\n                <tfoot className=\"table-info\">\r\n                  <tr>\r\n                    <td\r\n                      colSpan=\"3\"\r\n                      className=\"text-center align-middle fw-bold\"\r\n                    >\r\n                      RATA-RATA KELAS\r\n                    </td>\r\n                    <td className=\"text-center align-middle fw-bold\">\r\n                      {averages.kehadiran}%\r\n                    </td>\r\n                    <td className=\"text-center align-middle fw-bold\">\r\n                      {averages.sikap}\r\n                    </td>\r\n                    <td className=\"text-center align-middle fw-bold\">\r\n                      {averages.formatif}\r\n                    </td>\r\n                    <td className=\"text-center align-middle fw-bold\">\r\n                      {averages.sumatif}\r\n                    </td>\r\n                    <td className=\"align-middle\">\r\n                      <small className=\"text-muted\">-</small>\r\n                    </td>\r\n                  </tr>\r\n                </tfoot>\r\n              )}\r\n            </table>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recap;\r\n","import { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/layout/Layout\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Subjects from \"./Subjects\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport FormData from \"./FormData\";\r\nimport Tabs from \"./Tabs\";\r\nimport Attitude from \"./Attitude\";\r\nimport Attendance from \"./Attendance\";\r\nimport Formative from \"./Formative\";\r\nimport Summative from \"./Summative\";\r\nimport Recap from \"./Recap\";\r\nimport { useGetStudentsInClassQuery } from \"../../../controller/api/admin/ApiClass\";\r\n\r\nconst TeacherScores = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const subject = searchParams.get(\"subject\");\r\n  const subjectid = searchParams.get(\"id\");\r\n  const chapterid = searchParams.get(\"chapterid\");\r\n  const classid = searchParams.get(\"classid\");\r\n  const month = searchParams.get(\"month\");\r\n  const semester = searchParams.get(\"semester\");\r\n\r\n  const [tab, setTab] = useState(\"attendance\");\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const subjects = user?.subjects;\r\n\r\n  const isSubjectsEmpty = !subjects || subjects.length === 0;\r\n\r\n  // Check if all required parameters are present\r\n  const hasRequiredParams =\r\n    classid && subjectid && chapterid && month && semester;\r\n\r\n  // Reset tab when parameters change\r\n  useEffect(() => {\r\n    setTab(\"attendance\");\r\n  }, [classid, subjectid, chapterid, month, semester]);\r\n\r\n  // Reset pagination when parameters change\r\n  useEffect(() => {\r\n    setPage(1);\r\n    setSearch(\"\");\r\n  }, [classid, subjectid, chapterid, month, semester]);\r\n\r\n  // Students data\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const { data, isLoading } = useGetStudentsInClassQuery(\r\n    {\r\n      page,\r\n      limit,\r\n      search,\r\n      classid,\r\n    },\r\n    { skip: !classid }\r\n  );\r\n\r\n  if (subject && subjectid) {\r\n    return (\r\n      <Layout title=\"Penilaian\" levels={[\"teacher\"]}>\r\n        <div className=\"d-flex flex-column gap-3\">\r\n          <FormData subject={subject} id={subjectid} />\r\n\r\n          <Tabs tab={tab} setTab={setTab} />\r\n\r\n          {/* Only render components when required parameters are available */}\r\n          {hasRequiredParams && (\r\n            <>\r\n              {tab === \"attitude\" && (\r\n                <Attitude\r\n                  key={`attitude-${classid}-${subjectid}-${chapterid}-${month}-${semester}`}\r\n                  data={data}\r\n                  isLoading={isLoading}\r\n                  page={page}\r\n                  setPage={setPage}\r\n                  limit={limit}\r\n                  setLimit={setLimit}\r\n                  search={search}\r\n                  setSearch={setSearch}\r\n                  totalData={data?.totalData}\r\n                  totalPages={data?.totalPages}\r\n                />\r\n              )}\r\n              {tab === \"attendance\" && (\r\n                <Attendance\r\n                  key={`attendance-${classid}-${subjectid}-${chapterid}-${month}-${semester}`}\r\n                  data={data}\r\n                  isLoading={isLoading}\r\n                  page={page}\r\n                  setPage={setPage}\r\n                  limit={limit}\r\n                  setLimit={setLimit}\r\n                  search={search}\r\n                  setSearch={setSearch}\r\n                  totalData={data?.totalData}\r\n                  totalPages={data?.totalPages}\r\n                />\r\n              )}\r\n              {tab === \"formative\" && (\r\n                <Formative\r\n                  key={`formative-${classid}-${subjectid}-${chapterid}-${month}-${semester}`}\r\n                  data={data}\r\n                  isLoading={isLoading}\r\n                  page={page}\r\n                  setPage={setPage}\r\n                  limit={limit}\r\n                  setLimit={setLimit}\r\n                  search={search}\r\n                  setSearch={setSearch}\r\n                  totalData={data?.totalData}\r\n                  totalPages={data?.totalPages}\r\n                />\r\n              )}\r\n              {tab === \"summative\" && (\r\n                <Summative\r\n                  key={`summative-${classid}-${subjectid}-${chapterid}-${month}-${semester}`}\r\n                  data={data}\r\n                  isLoading={isLoading}\r\n                  page={page}\r\n                  setPage={setPage}\r\n                  limit={limit}\r\n                  setLimit={setLimit}\r\n                  search={search}\r\n                  setSearch={setSearch}\r\n                  totalData={data?.totalData}\r\n                  totalPages={data?.totalPages}\r\n                />\r\n              )}\r\n              {tab === \"recap\" && (\r\n                <Recap\r\n                  key={`recap-${classid}-${subjectid}-${chapterid}-${month}-${semester}`}\r\n                  data={data}\r\n                  isLoading={isLoading}\r\n                  page={page}\r\n                  setPage={setPage}\r\n                  limit={limit}\r\n                  setLimit={setLimit}\r\n                  search={search}\r\n                  setSearch={setSearch}\r\n                  totalData={data?.totalData}\r\n                  totalPages={data?.totalPages}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout title=\"Penilaian\" levels={[\"teacher\"]}>\r\n      {isSubjectsEmpty ? (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"row justify-content-center\"\r\n        >\r\n          <div className=\"col-md-6 text-center\">\r\n            <div className=\"py-5\">\r\n              <div\r\n                className=\"bg-light rounded-circle mx-auto mb-4 d-flex align-items-center justify-content-center\"\r\n                style={{ width: \"100px\", height: \"100px\" }}\r\n              >\r\n                <i className=\"bi bi-journal-x display-4 text-primary\"></i>\r\n              </div>\r\n              <h4 className=\"fw-bold mb-3\">Belum Ada Mata Pelajaran</h4>\r\n              <p className=\"text-muted mb-0\">\r\n                Anda belum ditugaskan untuk mengajar mata pelajaran apapun saat\r\n                ini\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      ) : (\r\n        <Subjects subjects={subjects} user={user} />\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TeacherScores;\r\n"],"names":["Subjects","subjects","user","navigate","useNavigate","goToLink","name","id","formattedName","replace","item","hidden","y","opacity","show","jsxRuntimeExports","jsx","motion","div","className","variants","transition","staggerChildren","initial","animate","children","map","subject","jsxs","onClick","style","cursor","src","cover","window","location","origin","alt","height","objectFit","e","stopPropagation","selectStyles","menuPortal","base","zIndex","control","state","minHeight","option","padding","months","semesters","label","value","FormData","data","useGetChaptersQuery","searchParams","setSearchParams","useSearchParams","chapterOptions","useMemo","chapter","chapter_id","chapter_name","chapteridParam","get","classidParam","monthParam","semesterParam","selectedChapter","setSelectedChapter","useState","selectedClass","setSelectedClass","selectedMonth","setSelectedMonth","selectedSemester","setSelectedSemester","classOptions","chapterId","find","c","String","_a","class","cls","monthOptions","month","semesterOptions","semester","useEffect","length","found","opt","updateQuery","params","chapterid","classid","handleChapterChange","handleClassChange","handleMonthChange","handleSemesterChange","ReactSelect","options","onChange","placeholder","menuPortalTarget","document","body","styles","isDisabled","Tabs","tab","setTab","subjectid","handleTabClick","type","target","Upload","title","onSubmit","isLoading","inputRef","setFile","tabIndex","ref","files","required","disabled","Attitude","page","setPage","limit","setLimit","search","setSearch","totalData","totalPages","attitudeScores","setAttitudeScores","useSelector","auth","teacher_id","attitudeData","refetch","useGetAttitudeQuery","skip","refetchOnMountOrArgChange","Array","isArray","mapped","row","student_id","kinerja","kedisiplinan","keaktifan","percayaDiri","percaya_diri","catatan","catatan_guru","Object","keys","upsertAttitude","isSaving","isSuccess","upsertData","isError","error","useUpsertAttitudeMutation","handleScoreChange","studentId","field","prev","calculateAverage","scores","values","filter","score","reduce","sum","Number","toFixed","useRef","bulkUpsertAttitude","isBulkUpserting","isBulkUpsertSuccess","isBulkUpsertError","bulkUpsertError","bulkUpsertData","useBulkUpsertAttitudeMutation","file","current","querySelector","click","message","modal","getElementById","handler","addEventListener","removeEventListener","success","Fragment","preventDefault","reader","FileReader","onload","Uint8Array","result","workbook","XLSX.read","sheetName","SheetNames","sheet","Sheets","filteredData","XLSX.utils","sheet_to_json","header","range","colA","colB","colC","colD","colE","colF","colG","colH","every","cell","promise","unwrap","then","res","loading","err","readAsArrayBuffer","excelData","students","forEach","student","studentScores","average","push","nis","student_name","book_new","worksheet","aoa_to_sheet","wch","utils","book_append_sheet","currentDate","Date","toISOString","split","XLSX.writeFile","toast","Table","backgroundColor","index","min","max","_b","_c","_d","rows","_e","async","subject_id","class_id","handleSave","Attendance","monthName","indexOf","getMonth","selectedYear","getFullYear","summaryData","summaryLoading","useGetPresensiSummaryQuery","year","LoadingScreen","width","totalDays","hadir","sakit","izin","alpa","attendanceRate","studentid","Formative","formativeScores","setFormativeScores","formativeData","useGetFormativeQuery","tugas1","f_1","tugas2","f_2","tugas3","f_3","tugas4","f_4","tugas5","f_5","tugas6","f_6","tugas7","f_7","tugas8","f_8","upsertFormative","useUpsertFormativeMutation","bulkUpsertFormative","useBulkUpsertFormativeMutation","i","renderTaskInputs","inputs","taskNumber","colI","colJ","colK","columns","color","renderTaskColumns","s","F_1","F_2","F_3","F_4","F_5","F_6","F_7","F_8","Summative","summativeScores","setSummativeScores","summativeData","useGetSummativeQuery","oral","written","project","performace","upsertSummative","useUpsertSummativeMutation","bulkUpsertSummative","useBulkUpsertSummativeMutation","renderSumatifInputs","Recap","studentsLoading","recapData","recapLoading","useGetRecapQuery","recapMap","Map","set","averages","totals","acc","kehadiran","parseFloat","sikap","formatif","sumatif","count","calculateAverages","recap","colSpan","TeacherScores","isSubjectsEmpty","hasRequiredParams","useGetStudentsInClassQuery","Layout","levels"],"mappings":"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"}